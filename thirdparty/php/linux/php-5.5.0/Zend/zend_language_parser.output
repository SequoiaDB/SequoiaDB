Terminals unused in grammar

   T_CHARACTER
   T_BAD_CHARACTER
   "comment (T_COMMENT)"
   "doc comment (T_DOC_COMMENT)"
   "open tag (T_OPEN_TAG)"
   "open tag with echo (T_OPEN_TAG_WITH_ECHO)"
   "close tag (T_CLOSE_TAG)"
   "whitespace (T_WHITESPACE)"


State 229 conflicts: 1 shift/reduce
State 672 conflicts: 2 shift/reduce


Grammar

    0 $accept: start "end of file"

    1 start: top_statement_list

    2 $@1: /* empty */

    3 top_statement_list: top_statement_list $@1 top_statement
    4                   | /* empty */

    5 namespace_name: "identifier (T_STRING)"
    6               | namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"

    7 top_statement: statement
    8              | function_declaration_statement
    9              | class_declaration_statement
   10              | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'
   11              | "namespace (T_NAMESPACE)" namespace_name ';'

   12 $@2: /* empty */

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}'

   14 $@3: /* empty */

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}'
   16              | "use (T_USE)" use_declarations ';'
   17              | constant_declaration ';'

   18 use_declarations: use_declarations ',' use_declaration
   19                 | use_declaration

   20 use_declaration: namespace_name
   21                | namespace_name "as (T_AS)" "identifier (T_STRING)"
   22                | "\\ (T_NS_SEPARATOR)" namespace_name
   23                | "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)"

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
   25                     | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

   26 $@4: /* empty */

   27 inner_statement_list: inner_statement_list $@4 inner_statement
   28                     | /* empty */

   29 inner_statement: statement
   30                | function_declaration_statement
   31                | class_declaration_statement
   32                | "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';'

   33 statement: unticked_statement
   34          | "identifier (T_STRING)" ':'

   35 unticked_statement: '{' inner_statement_list '}'

   36 $@5: /* empty */

   37 $@6: /* empty */

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list else_single

   39 $@7: /* empty */

   40 $@8: /* empty */

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

   42 $@9: /* empty */

   43 @10: /* empty */

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 while_statement

   45 $@11: /* empty */

   46 $@12: /* empty */

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';'

   48 $@13: /* empty */

   49 $@14: /* empty */

   50 $@15: /* empty */

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

   52 $@16: /* empty */

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 switch_case_list
   54                   | "break (T_BREAK)" ';'
   55                   | "break (T_BREAK)" expr ';'
   56                   | "continue (T_CONTINUE)" ';'
   57                   | "continue (T_CONTINUE)" expr ';'
   58                   | "return (T_RETURN)" ';'
   59                   | "return (T_RETURN)" expr_without_variable ';'
   60                   | "return (T_RETURN)" variable ';'
   61                   | yield_expr ';'
   62                   | "global (T_GLOBAL)" global_var_list ';'
   63                   | "static (T_STATIC)" static_var_list ';'
   64                   | "echo (T_ECHO)" echo_expr_list ';'
   65                   | T_INLINE_HTML
   66                   | expr ';'
   67                   | "unset (T_UNSET)" '(' unset_variables ')' ';'

   68 $@17: /* empty */

   69 $@18: /* empty */

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement

   71 $@19: /* empty */

   72 $@20: /* empty */

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

   74 $@21: /* empty */

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' declare_statement
   76                   | ';'

   77 $@22: /* empty */

   78 $@23: /* empty */

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement
   80                   | "throw (T_THROW)" expr ';'
   81                   | "goto (T_GOTO)" "identifier (T_STRING)" ';'

   82 catch_statement: /* empty */

   83 $@24: /* empty */

   84 $@25: /* empty */

   85 $@26: /* empty */

   86 $@27: /* empty */

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

   88 finally_statement: /* empty */

   89 $@28: /* empty */

   90 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list '}'

   91 additional_catches: non_empty_additional_catches
   92                   | /* empty */

   93 non_empty_additional_catches: additional_catch
   94                             | non_empty_additional_catches additional_catch

   95 @29: /* empty */

   96 $@30: /* empty */

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

   98 unset_variables: unset_variable
   99                | unset_variables ',' unset_variable

  100 unset_variable: variable

  101 function_declaration_statement: unticked_function_declaration_statement

  102 class_declaration_statement: unticked_class_declaration_statement

  103 is_reference: /* empty */
  104             | '&'

  105 $@31: /* empty */

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}'

  107 $@32: /* empty */

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list '}'

  109 $@33: /* empty */

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list '}'

  111 class_entry_type: "class (T_CLASS)"
  112                 | "abstract (T_ABSTRACT)" "class (T_CLASS)"
  113                 | "trait (T_TRAIT)"
  114                 | "final (T_FINAL)" "class (T_CLASS)"

  115 extends_from: /* empty */
  116             | "extends (T_EXTENDS)" fully_qualified_class_name

  117 interface_entry: "interface (T_INTERFACE)"

  118 interface_extends_list: /* empty */
  119                       | "extends (T_EXTENDS)" interface_list

  120 implements_list: /* empty */
  121                | "implements (T_IMPLEMENTS)" interface_list

  122 interface_list: fully_qualified_class_name
  123               | interface_list ',' fully_qualified_class_name

  124 foreach_optional_arg: /* empty */
  125                     | "=> (T_DOUBLE_ARROW)" foreach_variable

  126 foreach_variable: variable
  127                 | '&' variable

  128 $@34: /* empty */

  129 foreach_variable: "list (T_LIST)" '(' $@34 assignment_list ')'

  130 for_statement: statement
  131              | ':' inner_statement_list "endfor (T_ENDFOR)" ';'

  132 foreach_statement: statement
  133                  | ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';'

  134 declare_statement: statement
  135                  | ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

  136 declare_list: "identifier (T_STRING)" '=' static_scalar
  137             | declare_list ',' "identifier (T_STRING)" '=' static_scalar

  138 switch_case_list: '{' case_list '}'
  139                 | '{' ';' case_list '}'
  140                 | ':' case_list "endswitch (T_ENDSWITCH)" ';'
  141                 | ':' ';' case_list "endswitch (T_ENDSWITCH)" ';'

  142 case_list: /* empty */

  143 $@35: /* empty */

  144 case_list: case_list "case (T_CASE)" expr case_separator $@35 inner_statement_list

  145 $@36: /* empty */

  146 case_list: case_list "default (T_DEFAULT)" case_separator $@36 inner_statement_list

  147 case_separator: ':'
  148               | ';'

  149 while_statement: statement
  150                | ':' inner_statement_list "endwhile (T_ENDWHILE)" ';'

  151 elseif_list: /* empty */

  152 $@37: /* empty */

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@37 statement

  154 new_elseif_list: /* empty */

  155 $@38: /* empty */

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 inner_statement_list

  157 else_single: /* empty */
  158            | "else (T_ELSE)" statement

  159 new_else_single: /* empty */
  160                | "else (T_ELSE)" ':' inner_statement_list

  161 parameter_list: non_empty_parameter_list
  162               | /* empty */

  163 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)"
  164                         | optional_class_type '&' "variable (T_VARIABLE)"
  165                         | optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  166                         | optional_class_type "variable (T_VARIABLE)" '=' static_scalar
  167                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar

  171 optional_class_type: /* empty */
  172                    | "array (T_ARRAY)"
  173                    | "callable (T_CALLABLE)"
  174                    | fully_qualified_class_name

  175 function_call_parameter_list: '(' ')'
  176                             | '(' non_empty_function_call_parameter_list ')'
  177                             | '(' yield_expr ')'

  178 non_empty_function_call_parameter_list: expr_without_variable
  179                                       | variable
  180                                       | '&' w_variable
  181                                       | non_empty_function_call_parameter_list ',' expr_without_variable
  182                                       | non_empty_function_call_parameter_list ',' variable
  183                                       | non_empty_function_call_parameter_list ',' '&' w_variable

  184 global_var_list: global_var_list ',' global_var
  185                | global_var

  186 global_var: "variable (T_VARIABLE)"
  187           | '$' r_variable
  188           | '$' '{' expr '}'

  189 static_var_list: static_var_list ',' "variable (T_VARIABLE)"
  190                | static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar
  191                | "variable (T_VARIABLE)"
  192                | "variable (T_VARIABLE)" '=' static_scalar

  193 class_statement_list: class_statement_list class_statement
  194                     | /* empty */

  195 $@39: /* empty */

  196 class_statement: variable_modifiers $@39 class_variable_declaration ';'
  197                | class_constant_declaration ';'
  198                | trait_use_statement

  199 $@40: /* empty */

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

  201 trait_use_statement: "use (T_USE)" trait_list trait_adaptations

  202 trait_list: fully_qualified_class_name
  203           | trait_list ',' fully_qualified_class_name

  204 trait_adaptations: ';'
  205                  | '{' trait_adaptation_list '}'

  206 trait_adaptation_list: /* empty */
  207                      | non_empty_trait_adaptation_list

  208 non_empty_trait_adaptation_list: trait_adaptation_statement
  209                                | non_empty_trait_adaptation_list trait_adaptation_statement

  210 trait_adaptation_statement: trait_precedence ';'
  211                           | trait_alias ';'

  212 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list

  213 trait_reference_list: fully_qualified_class_name
  214                     | trait_reference_list ',' fully_qualified_class_name

  215 trait_method_reference: "identifier (T_STRING)"
  216                       | trait_method_reference_fully_qualified

  217 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  218 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  219            | trait_method_reference "as (T_AS)" member_modifier

  220 trait_modifiers: /* empty */
  221                | member_modifier

  222 method_body: ';'
  223            | '{' inner_statement_list '}'

  224 variable_modifiers: non_empty_member_modifiers
  225                   | "var (T_VAR)"

  226 method_modifiers: /* empty */
  227                 | non_empty_member_modifiers

  228 non_empty_member_modifiers: member_modifier
  229                           | non_empty_member_modifiers member_modifier

  230 member_modifier: "public (T_PUBLIC)"
  231                | "protected (T_PROTECTED)"
  232                | "private (T_PRIVATE)"
  233                | "static (T_STATIC)"
  234                | "abstract (T_ABSTRACT)"
  235                | "final (T_FINAL)"

  236 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)"
  237                           | class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar
  238                           | "variable (T_VARIABLE)"
  239                           | "variable (T_VARIABLE)" '=' static_scalar

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar
  241                           | "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar

  242 echo_expr_list: echo_expr_list ',' expr
  243               | expr

  244 for_expr: /* empty */
  245         | non_empty_for_expr

  246 $@41: /* empty */

  247 non_empty_for_expr: non_empty_for_expr ',' $@41 expr
  248                   | expr

  249 chaining_method_or_property: chaining_method_or_property variable_property
  250                            | variable_property

  251 chaining_dereference: chaining_dereference '[' dim_offset ']'
  252                     | '[' dim_offset ']'

  253 $@42: /* empty */

  254 chaining_instance_call: chaining_dereference $@42 chaining_method_or_property
  255                       | chaining_dereference
  256                       | chaining_method_or_property

  257 instance_call: /* empty */

  258 $@43: /* empty */

  259 instance_call: $@43 chaining_instance_call

  260 $@44: /* empty */

  261 new_expr: "new (T_NEW)" class_name_reference $@44 ctor_arguments

  262 $@45: /* empty */

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' '=' expr
  264                      | variable '=' expr
  265                      | variable '=' '&' variable

  266 $@46: /* empty */

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  268                      | "clone (T_CLONE)" expr
  269                      | variable "+= (T_PLUS_EQUAL)" expr
  270                      | variable "-= (T_MINUS_EQUAL)" expr
  271                      | variable "*= (T_MUL_EQUAL)" expr
  272                      | variable "/= (T_DIV_EQUAL)" expr
  273                      | variable ".= (T_CONCAT_EQUAL)" expr
  274                      | variable "%= (T_MOD_EQUAL)" expr
  275                      | variable "&= (T_AND_EQUAL)" expr
  276                      | variable "|= (T_OR_EQUAL)" expr
  277                      | variable "^= (T_XOR_EQUAL)" expr
  278                      | variable "<<= (T_SL_EQUAL)" expr
  279                      | variable ">>= (T_SR_EQUAL)" expr
  280                      | rw_variable "++ (T_INC)"
  281                      | "++ (T_INC)" rw_variable
  282                      | rw_variable "-- (T_DEC)"
  283                      | "-- (T_DEC)" rw_variable

  284 $@47: /* empty */

  285 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@47 expr

  286 $@48: /* empty */

  287 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@48 expr

  288 $@49: /* empty */

  289 expr_without_variable: expr "or (T_LOGICAL_OR)" $@49 expr

  290 $@50: /* empty */

  291 expr_without_variable: expr "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr "xor (T_LOGICAL_XOR)" expr
  293                      | expr '|' expr
  294                      | expr '&' expr
  295                      | expr '^' expr
  296                      | expr '.' expr
  297                      | expr '+' expr
  298                      | expr '-' expr
  299                      | expr '*' expr
  300                      | expr '/' expr
  301                      | expr '%' expr
  302                      | expr "<< (T_SL)" expr
  303                      | expr ">> (T_SR)" expr
  304                      | '+' expr
  305                      | '-' expr
  306                      | '!' expr
  307                      | '~' expr
  308                      | expr "=== (T_IS_IDENTICAL)" expr
  309                      | expr "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr "== (T_IS_EQUAL)" expr
  311                      | expr "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr '<' expr
  313                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr '>' expr
  315                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr "instanceof (T_INSTANCEOF)" class_name_reference
  317                      | parenthesis_expr
  318                      | new_expr

  319 @51: /* empty */

  320 expr_without_variable: '(' new_expr ')' @51 instance_call

  321 $@52: /* empty */

  322 $@53: /* empty */

  323 expr_without_variable: expr '?' $@52 expr ':' $@53 expr

  324 $@54: /* empty */

  325 expr_without_variable: expr '?' ':' $@54 expr
  326                      | internal_functions_in_yacc
  327                      | "(int) (T_INT_CAST)" expr
  328                      | "(double) (T_DOUBLE_CAST)" expr
  329                      | "(string) (T_STRING_CAST)" expr
  330                      | "(array) (T_ARRAY_CAST)" expr
  331                      | "(object) (T_OBJECT_CAST)" expr
  332                      | "(bool) (T_BOOL_CAST)" expr
  333                      | "(unset) (T_UNSET_CAST)" expr
  334                      | "exit (T_EXIT)" exit_expr

  335 $@55: /* empty */

  336 expr_without_variable: '@' $@55 expr
  337                      | scalar
  338                      | combined_scalar_offset
  339                      | combined_scalar
  340                      | '`' backticks_expr '`'
  341                      | "print (T_PRINT)" expr
  342                      | "yield (T_YIELD)"

  343 @56: /* empty */

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

  345 @57: /* empty */

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

  347 yield_expr: "yield (T_YIELD)" expr_without_variable
  348           | "yield (T_YIELD)" variable
  349           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr_without_variable
  350           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" variable

  351 combined_scalar_offset: combined_scalar '[' dim_offset ']'
  352                       | combined_scalar_offset '[' dim_offset ']'
  353                       | "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset ']'

  354 combined_scalar: "array (T_ARRAY)" '(' array_pair_list ')'
  355                | '[' array_pair_list ']'

  356 function: "function (T_FUNCTION)"

  357 lexical_vars: /* empty */
  358             | "use (T_USE)" '(' lexical_var_list ')'

  359 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)"
  360                 | lexical_var_list ',' '&' "variable (T_VARIABLE)"
  361                 | "variable (T_VARIABLE)"
  362                 | '&' "variable (T_VARIABLE)"

  363 @58: /* empty */

  364 function_call: namespace_name @58 function_call_parameter_list

  365 @59: /* empty */

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list

  367 @60: /* empty */

  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @60 function_call_parameter_list

  369 @61: /* empty */

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list

  371 $@62: /* empty */

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list

  373 $@63: /* empty */

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list

  375 $@64: /* empty */

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list

  377 $@65: /* empty */

  378 function_call: variable_without_objects $@65 function_call_parameter_list

  379 class_name: "static (T_STATIC)"
  380           | namespace_name
  381           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  382           | "\\ (T_NS_SEPARATOR)" namespace_name

  383 fully_qualified_class_name: namespace_name
  384                           | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  385                           | "\\ (T_NS_SEPARATOR)" namespace_name

  386 class_name_reference: class_name
  387                     | dynamic_class_name_reference

  388 $@66: /* empty */

  389 $@67: /* empty */

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 dynamic_class_name_variable_properties
  391                             | base_variable

  392 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property
  393                                       | /* empty */

  394 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property

  395 exit_expr: /* empty */
  396          | '(' ')'
  397          | parenthesis_expr

  398 backticks_expr: /* empty */
  399               | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  400               | encaps_list

  401 ctor_arguments: /* empty */
  402               | function_call_parameter_list

  403 common_scalar: "integer number (T_LNUMBER)"
  404              | "floating-point number (T_DNUMBER)"
  405              | "quoted-string (T_CONSTANT_ENCAPSED_STRING)"
  406              | "__LINE__ (T_LINE)"
  407              | "__FILE__ (T_FILE)"
  408              | "__DIR__ (T_DIR)"
  409              | "__TRAIT__ (T_TRAIT_C)"
  410              | "__METHOD__ (T_METHOD_C)"
  411              | "__FUNCTION__ (T_FUNC_C)"
  412              | "__NAMESPACE__ (T_NS_C)"
  413              | "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  414              | "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)"

  415 static_scalar: common_scalar
  416              | static_class_name_scalar
  417              | namespace_name
  418              | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  419              | "\\ (T_NS_SEPARATOR)" namespace_name
  420              | '+' static_scalar
  421              | '-' static_scalar
  422              | "array (T_ARRAY)" '(' static_array_pair_list ')'
  423              | '[' static_array_pair_list ']'
  424              | static_class_constant
  425              | "__CLASS__ (T_CLASS_C)"

  426 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  427 scalar: "variable name (T_STRING_VARNAME)"
  428       | class_name_scalar
  429       | class_constant
  430       | namespace_name
  431       | "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name
  432       | "\\ (T_NS_SEPARATOR)" namespace_name
  433       | common_scalar
  434       | '"' encaps_list '"'
  435       | "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)"
  436       | "__CLASS__ (T_CLASS_C)"

  437 static_array_pair_list: /* empty */
  438                       | non_empty_static_array_pair_list possible_comma

  439 possible_comma: /* empty */
  440               | ','

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list ',' static_scalar
  443                                 | static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | static_scalar

  445 expr: r_variable
  446     | expr_without_variable

  447 parenthesis_expr: '(' expr ')'
  448                 | '(' yield_expr ')'

  449 r_variable: variable

  450 w_variable: variable

  451 rw_variable: variable

  452 $@68: /* empty */

  453 $@69: /* empty */

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not variable_properties
  455         | base_variable_with_function_calls

  456 variable_properties: variable_properties variable_property
  457                    | /* empty */

  458 $@70: /* empty */

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@70 method_or_not

  460 array_method_dereference: array_method_dereference '[' dim_offset ']'
  461                         | method '[' dim_offset ']'

  462 @71: /* empty */

  463 method: @71 function_call_parameter_list

  464 method_or_not: method
  465              | array_method_dereference
  466              | /* empty */

  467 variable_without_objects: reference_variable
  468                         | simple_indirect_reference reference_variable

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  470              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

  471 variable_class_name: reference_variable

  472 array_function_dereference: array_function_dereference '[' dim_offset ']'

  473 $@72: /* empty */

  474 array_function_dereference: function_call $@72 '[' dim_offset ']'

  475 base_variable_with_function_calls: base_variable
  476                                  | array_function_dereference
  477                                  | function_call

  478 base_variable: reference_variable
  479              | simple_indirect_reference reference_variable
  480              | static_member

  481 reference_variable: reference_variable '[' dim_offset ']'
  482                   | reference_variable '{' expr '}'
  483                   | compound_variable

  484 compound_variable: "variable (T_VARIABLE)"
  485                  | '$' '{' expr '}'

  486 dim_offset: /* empty */
  487           | expr

  488 object_property: object_dim_list

  489 $@73: /* empty */

  490 object_property: variable_without_objects $@73

  491 object_dim_list: object_dim_list '[' dim_offset ']'
  492                | object_dim_list '{' expr '}'
  493                | variable_name

  494 variable_name: "identifier (T_STRING)"
  495              | '{' expr '}'

  496 simple_indirect_reference: '$'
  497                          | simple_indirect_reference '$'

  498 assignment_list: assignment_list ',' assignment_list_element
  499                | assignment_list_element

  500 assignment_list_element: variable

  501 $@74: /* empty */

  502 assignment_list_element: "list (T_LIST)" '(' $@74 assignment_list ')'
  503                        | /* empty */

  504 array_pair_list: /* empty */
  505                | non_empty_array_pair_list possible_comma

  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list ',' expr
  508                          | expr "=> (T_DOUBLE_ARROW)" expr
  509                          | expr
  510                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  511                          | non_empty_array_pair_list ',' '&' w_variable
  512                          | expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  513                          | '&' w_variable

  514 encaps_list: encaps_list encaps_var
  515            | encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"
  516            | encaps_var
  517            | "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var

  518 encaps_var: "variable (T_VARIABLE)"

  519 $@75: /* empty */

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 encaps_var_offset ']'
  521           | "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"
  522           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}'
  523           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}'
  524           | "{$ (T_CURLY_OPEN)" variable '}'

  525 encaps_var_offset: "identifier (T_STRING)"
  526                  | "number (T_NUM_STRING)"
  527                  | "variable (T_VARIABLE)"

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')'
  529                           | "empty (T_EMPTY)" '(' variable ')'
  530                           | "empty (T_EMPTY)" '(' expr_without_variable ')'
  531                           | "include (T_INCLUDE)" expr
  532                           | "include_once (T_INCLUDE_ONCE)" expr
  533                           | "eval (T_EVAL)" '(' expr ')'
  534                           | "require (T_REQUIRE)" expr
  535                           | "require_once (T_REQUIRE_ONCE)" expr

  536 isset_variables: isset_variable

  537 $@76: /* empty */

  538 isset_variables: isset_variables ',' $@76 isset_variable

  539 isset_variable: variable
  540               | expr_without_variable

  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  542               | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

  543 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

  544 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"


Terminals, with rules where they appear

"end of file" (0) 0
'!' (33) 306
'"' (34) 434
'$' (36) 187 188 485 496 497
'%' (37) 301
'&' (38) 104 127 164 165 168 169 180 183 265 267 294 360 362 510 511
    512 513
'(' (40) 10 32 51 67 70 73 75 87 97 106 129 175 176 177 200 263 320
    344 346 354 358 396 422 447 448 502 528 529 530 533
')' (41) 10 32 51 67 70 73 75 87 97 106 129 175 176 177 200 263 320
    344 346 354 358 396 422 447 448 502 528 529 530 533
'*' (42) 299
'+' (43) 297 304 420
',' (44) 18 24 99 123 137 167 168 169 170 181 182 183 184 189 190 203
    214 236 237 240 242 247 359 360 440 441 442 498 506 507 510 511
    538
'-' (45) 298 305 421
'.' (46) 296
'/' (47) 300
':' (58) 34 41 131 133 135 140 141 147 150 156 160 323 325
';' (59) 10 11 16 17 32 41 47 51 54 55 56 57 58 59 60 61 62 63 64 66
    67 76 80 81 131 133 135 139 140 141 148 150 196 197 204 210 211
    222
'<' (60) 312
'=' (61) 24 25 136 137 165 166 169 170 190 192 237 239 240 241 263
    264 265 267
'>' (62) 314
'?' (63) 323 325
'@' (64) 336
'[' (91) 251 252 351 352 353 355 423 460 461 472 474 481 491 520 523
']' (93) 251 252 351 352 353 355 423 460 461 472 474 481 491 520 523
'^' (94) 295
'`' (96) 340
'{' (123) 13 15 35 79 87 90 97 106 108 110 138 139 188 205 223 344
    346 482 485 492 495
'|' (124) 293
'}' (125) 13 15 35 79 87 90 97 106 108 110 138 139 188 205 223 344
    346 482 485 492 495 522 523 524
'~' (126) 307
error (256)
"require_once (T_REQUIRE_ONCE)" (258) 535
"require (T_REQUIRE)" (259) 534
"eval (T_EVAL)" (260) 533
"include_once (T_INCLUDE_ONCE)" (261) 532
"include (T_INCLUDE)" (262) 531
"or (T_LOGICAL_OR)" (263) 289
"xor (T_LOGICAL_XOR)" (264) 292
"and (T_LOGICAL_AND)" (265) 291
"print (T_PRINT)" (266) 341
"yield (T_YIELD)" (267) 342 347 348 349 350
">>= (T_SR_EQUAL)" (268) 279
"<<= (T_SL_EQUAL)" (269) 278
"^= (T_XOR_EQUAL)" (270) 277
"|= (T_OR_EQUAL)" (271) 276
"&= (T_AND_EQUAL)" (272) 275
"%= (T_MOD_EQUAL)" (273) 274
".= (T_CONCAT_EQUAL)" (274) 273
"/= (T_DIV_EQUAL)" (275) 272
"*= (T_MUL_EQUAL)" (276) 271
"-= (T_MINUS_EQUAL)" (277) 270
"+= (T_PLUS_EQUAL)" (278) 269
"|| (T_BOOLEAN_OR)" (279) 285
"&& (T_BOOLEAN_AND)" (280) 287
"!== (T_IS_NOT_IDENTICAL)" (281) 309
"=== (T_IS_IDENTICAL)" (282) 308
"!= (T_IS_NOT_EQUAL)" (283) 311
"== (T_IS_EQUAL)" (284) 310
">= (T_IS_GREATER_OR_EQUAL)" (285) 315
"<= (T_IS_SMALLER_OR_EQUAL)" (286) 313
">> (T_SR)" (287) 303
"<< (T_SL)" (288) 302
"instanceof (T_INSTANCEOF)" (289) 316
"(unset) (T_UNSET_CAST)" (290) 333
"(bool) (T_BOOL_CAST)" (291) 332
"(object) (T_OBJECT_CAST)" (292) 331
"(array) (T_ARRAY_CAST)" (293) 330
"(string) (T_STRING_CAST)" (294) 329
"(double) (T_DOUBLE_CAST)" (295) 328
"(int) (T_INT_CAST)" (296) 327
"-- (T_DEC)" (297) 282 283
"++ (T_INC)" (298) 280 281
"clone (T_CLONE)" (299) 268
"new (T_NEW)" (300) 261 267
"exit (T_EXIT)" (301) 334
"if (T_IF)" (302) 38 41
"elseif (T_ELSEIF)" (303) 153 156
"else (T_ELSE)" (304) 158 160
"endif (T_ENDIF)" (305) 41
"integer number (T_LNUMBER)" (306) 403
"floating-point number (T_DNUMBER)" (307) 404
"identifier (T_STRING)" (308) 5 6 21 23 24 25 34 81 106 108 110 136
    137 200 215 217 218 240 241 426 494 521 525 541 542
"variable name (T_STRING_VARNAME)" (309) 427 523
"variable (T_VARIABLE)" (310) 87 97 163 164 165 166 167 168 169 170
    186 189 190 191 192 236 237 238 239 359 360 361 362 484 518 520
    521 527
"number (T_NUM_STRING)" (311) 526
T_INLINE_HTML (312) 65
T_CHARACTER (313)
T_BAD_CHARACTER (314)
"quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" (315) 399
    413 515 517
"quoted-string (T_CONSTANT_ENCAPSED_STRING)" (316) 353 405
"echo (T_ECHO)" (317) 64
"do (T_DO)" (318) 47
"while (T_WHILE)" (319) 44 47
"endwhile (T_ENDWHILE)" (320) 150
"for (T_FOR)" (321) 51
"endfor (T_ENDFOR)" (322) 131
"foreach (T_FOREACH)" (323) 70 73
"endforeach (T_ENDFOREACH)" (324) 133
"declare (T_DECLARE)" (325) 75
"enddeclare (T_ENDDECLARE)" (326) 135
"as (T_AS)" (327) 21 23 70 73 218 219
"switch (T_SWITCH)" (328) 53
"endswitch (T_ENDSWITCH)" (329) 140 141
"case (T_CASE)" (330) 144
"default (T_DEFAULT)" (331) 146
"break (T_BREAK)" (332) 54 55
"continue (T_CONTINUE)" (333) 56 57
"goto (T_GOTO)" (334) 81
"function (T_FUNCTION)" (335) 356
"const (T_CONST)" (336) 25 241
"return (T_RETURN)" (337) 58 59 60
"try (T_TRY)" (338) 79
"catch (T_CATCH)" (339) 87 97
"finally (T_FINALLY)" (340) 90
"throw (T_THROW)" (341) 80
"use (T_USE)" (342) 16 201 358
"insteadof (T_INSTEADOF)" (343) 212
"global (T_GLOBAL)" (344) 62
"public (T_PUBLIC)" (345) 230
"protected (T_PROTECTED)" (346) 231
"private (T_PRIVATE)" (347) 232
"final (T_FINAL)" (348) 114 235
"abstract (T_ABSTRACT)" (349) 112 234
"static (T_STATIC)" (350) 63 233 346 379
"var (T_VAR)" (351) 225
"unset (T_UNSET)" (352) 67
"isset (T_ISSET)" (353) 528
"empty (T_EMPTY)" (354) 529 530
"__halt_compiler (T_HALT_COMPILER)" (355) 10 32
"class (T_CLASS)" (356) 111 112 114 543 544
"trait (T_TRAIT)" (357) 113
"interface (T_INTERFACE)" (358) 117
"extends (T_EXTENDS)" (359) 116 119
"implements (T_IMPLEMENTS)" (360) 121
"-> (T_OBJECT_OPERATOR)" (361) 390 394 454 459 521
"=> (T_DOUBLE_ARROW)" (362) 125 349 350 441 443 506 508 510 512
"list (T_LIST)" (363) 129 263 502
"array (T_ARRAY)" (364) 172 354 422
"callable (T_CALLABLE)" (365) 173
"__CLASS__ (T_CLASS_C)" (366) 425 436
"__TRAIT__ (T_TRAIT_C)" (367) 409
"__METHOD__ (T_METHOD_C)" (368) 410
"__FUNCTION__ (T_FUNC_C)" (369) 411
"__LINE__ (T_LINE)" (370) 406
"__FILE__ (T_FILE)" (371) 407
"comment (T_COMMENT)" (372)
"doc comment (T_DOC_COMMENT)" (373)
"open tag (T_OPEN_TAG)" (374)
"open tag with echo (T_OPEN_TAG_WITH_ECHO)" (375)
"close tag (T_CLOSE_TAG)" (376)
"whitespace (T_WHITESPACE)" (377)
"heredoc start (T_START_HEREDOC)" (378) 413 414 435
"heredoc end (T_END_HEREDOC)" (379) 413 414 435
"${ (T_DOLLAR_OPEN_CURLY_BRACES)" (380) 522 523
"{$ (T_CURLY_OPEN)" (381) 524
":: (T_PAAMAYIM_NEKUDOTAYIM)" (382) 217 370 372 374 376 426 469 470
    541 542 543 544
"namespace (T_NAMESPACE)" (383) 11 13 15 366 381 384 418 431
"__NAMESPACE__ (T_NS_C)" (384) 412
"__DIR__ (T_DIR)" (385) 408
"\\ (T_NS_SEPARATOR)" (386) 6 22 23 366 368 381 382 384 385 418 419
    431 432


Nonterminals, with rules where they appear

$accept (160)
    on left: 0
start (161)
    on left: 1, on right: 0
top_statement_list (162)
    on left: 3 4, on right: 1 3 13 15
$@1 (163)
    on left: 2, on right: 3
namespace_name (164)
    on left: 5 6, on right: 6 11 13 20 21 22 23 364 366 368 380 381
    382 383 384 385 417 418 419 430 431 432
top_statement (165)
    on left: 7 8 9 10 11 13 15 16 17, on right: 3
$@2 (166)
    on left: 12, on right: 13
$@3 (167)
    on left: 14, on right: 15
use_declarations (168)
    on left: 18 19, on right: 16 18
use_declaration (169)
    on left: 20 21 22 23, on right: 18 19
constant_declaration (170)
    on left: 24 25, on right: 17 24
inner_statement_list (171)
    on left: 27 28, on right: 27 35 41 79 87 90 97 106 131 133 135
    144 146 150 156 160 223 344 346
$@4 (172)
    on left: 26, on right: 27
inner_statement (173)
    on left: 29 30 31 32, on right: 27
statement (174)
    on left: 33 34, on right: 7 29 38 47 130 132 134 149 153 158
unticked_statement (175)
    on left: 35 38 41 44 47 51 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 70 73 75 76 79 80 81, on right: 33
$@5 (176)
    on left: 36, on right: 38
$@6 (177)
    on left: 37, on right: 38
$@7 (178)
    on left: 39, on right: 41
$@8 (179)
    on left: 40, on right: 41
$@9 (180)
    on left: 42, on right: 44
@10 (181)
    on left: 43, on right: 44
$@11 (182)
    on left: 45, on right: 47
$@12 (183)
    on left: 46, on right: 47
$@13 (184)
    on left: 48, on right: 51
$@14 (185)
    on left: 49, on right: 51
$@15 (186)
    on left: 50, on right: 51
$@16 (187)
    on left: 52, on right: 53
$@17 (188)
    on left: 68, on right: 70
$@18 (189)
    on left: 69, on right: 70
$@19 (190)
    on left: 71, on right: 73
$@20 (191)
    on left: 72, on right: 73
$@21 (192)
    on left: 74, on right: 75
$@22 (193)
    on left: 77, on right: 79
$@23 (194)
    on left: 78, on right: 79
catch_statement (195)
    on left: 82 87, on right: 79
$@24 (196)
    on left: 83, on right: 87
$@25 (197)
    on left: 84, on right: 87
$@26 (198)
    on left: 85, on right: 87
$@27 (199)
    on left: 86, on right: 87
finally_statement (200)
    on left: 88 90, on right: 79
$@28 (201)
    on left: 89, on right: 90
additional_catches (202)
    on left: 91 92, on right: 87
non_empty_additional_catches (203)
    on left: 93 94, on right: 91 94
additional_catch (204)
    on left: 97, on right: 93 94
@29 (205)
    on left: 95, on right: 97
$@30 (206)
    on left: 96, on right: 97
unset_variables (207)
    on left: 98 99, on right: 67 99
unset_variable (208)
    on left: 100, on right: 98 99
function_declaration_statement (209)
    on left: 101, on right: 8 30
class_declaration_statement (210)
    on left: 102, on right: 9 31
is_reference (211)
    on left: 103 104, on right: 106 200 344 346
unticked_function_declaration_statement (212)
    on left: 106, on right: 101
$@31 (213)
    on left: 105, on right: 106
unticked_class_declaration_statement (214)
    on left: 108 110, on right: 102
$@32 (215)
    on left: 107, on right: 108
$@33 (216)
    on left: 109, on right: 110
class_entry_type (217)
    on left: 111 112 113 114, on right: 108
extends_from (218)
    on left: 115 116, on right: 108
interface_entry (219)
    on left: 117, on right: 110
interface_extends_list (220)
    on left: 118 119, on right: 110
implements_list (221)
    on left: 120 121, on right: 108
interface_list (222)
    on left: 122 123, on right: 119 121 123
foreach_optional_arg (223)
    on left: 124 125, on right: 70 73
foreach_variable (224)
    on left: 126 127 129, on right: 70 73 125
$@34 (225)
    on left: 128, on right: 129
for_statement (226)
    on left: 130 131, on right: 51
foreach_statement (227)
    on left: 132 133, on right: 70 73
declare_statement (228)
    on left: 134 135, on right: 75
declare_list (229)
    on left: 136 137, on right: 75 137
switch_case_list (230)
    on left: 138 139 140 141, on right: 53
case_list (231)
    on left: 142 144 146, on right: 138 139 140 141 144 146
$@35 (232)
    on left: 143, on right: 144
$@36 (233)
    on left: 145, on right: 146
case_separator (234)
    on left: 147 148, on right: 144 146
while_statement (235)
    on left: 149 150, on right: 44
elseif_list (236)
    on left: 151 153, on right: 38 153
$@37 (237)
    on left: 152, on right: 153
new_elseif_list (238)
    on left: 154 156, on right: 41 156
$@38 (239)
    on left: 155, on right: 156
else_single (240)
    on left: 157 158, on right: 38
new_else_single (241)
    on left: 159 160, on right: 41
parameter_list (242)
    on left: 161 162, on right: 106 200 344 346
non_empty_parameter_list (243)
    on left: 163 164 165 166 167 168 169 170, on right: 161 167 168
    169 170
optional_class_type (244)
    on left: 171 172 173 174, on right: 163 164 165 166 167 168 169
    170
function_call_parameter_list (245)
    on left: 175 176 177, on right: 364 366 368 370 372 374 376 378
    402 463
non_empty_function_call_parameter_list (246)
    on left: 178 179 180 181 182 183, on right: 176 181 182 183
global_var_list (247)
    on left: 184 185, on right: 62 184
global_var (248)
    on left: 186 187 188, on right: 184 185
static_var_list (249)
    on left: 189 190 191 192, on right: 63 189 190
class_statement_list (250)
    on left: 193 194, on right: 108 110 193
class_statement (251)
    on left: 196 197 198 200, on right: 193
$@39 (252)
    on left: 195, on right: 196
$@40 (253)
    on left: 199, on right: 200
trait_use_statement (254)
    on left: 201, on right: 198
trait_list (255)
    on left: 202 203, on right: 201 203
trait_adaptations (256)
    on left: 204 205, on right: 201
trait_adaptation_list (257)
    on left: 206 207, on right: 205
non_empty_trait_adaptation_list (258)
    on left: 208 209, on right: 207 209
trait_adaptation_statement (259)
    on left: 210 211, on right: 208 209
trait_precedence (260)
    on left: 212, on right: 210
trait_reference_list (261)
    on left: 213 214, on right: 212 214
trait_method_reference (262)
    on left: 215 216, on right: 218 219
trait_method_reference_fully_qualified (263)
    on left: 217, on right: 212 216
trait_alias (264)
    on left: 218 219, on right: 211
trait_modifiers (265)
    on left: 220 221, on right: 218
method_body (266)
    on left: 222 223, on right: 200
variable_modifiers (267)
    on left: 224 225, on right: 196
method_modifiers (268)
    on left: 226 227, on right: 200
non_empty_member_modifiers (269)
    on left: 228 229, on right: 224 227 229
member_modifier (270)
    on left: 230 231 232 233 234 235, on right: 219 221 228 229
class_variable_declaration (271)
    on left: 236 237 238 239, on right: 196 236 237
class_constant_declaration (272)
    on left: 240 241, on right: 197 240
echo_expr_list (273)
    on left: 242 243, on right: 64 242
for_expr (274)
    on left: 244 245, on right: 51
non_empty_for_expr (275)
    on left: 247 248, on right: 245 247
$@41 (276)
    on left: 246, on right: 247
chaining_method_or_property (277)
    on left: 249 250, on right: 249 254 256
chaining_dereference (278)
    on left: 251 252, on right: 251 254 255
chaining_instance_call (279)
    on left: 254 255 256, on right: 259
$@42 (280)
    on left: 253, on right: 254
instance_call (281)
    on left: 257 259, on right: 320
$@43 (282)
    on left: 258, on right: 259
new_expr (283)
    on left: 261, on right: 318 320
$@44 (284)
    on left: 260, on right: 261
expr_without_variable (285)
    on left: 263 264 265 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 285 287 289 291 292 293 294 295 296 297
    298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313
    314 315 316 317 318 320 323 325 326 327 328 329 330 331 332 333
    334 336 337 338 339 340 341 342 344 346, on right: 59 73 178 181
    347 349 446 530 540
$@45 (286)
    on left: 262, on right: 263
$@46 (287)
    on left: 266, on right: 267
$@47 (288)
    on left: 284, on right: 285
$@48 (289)
    on left: 286, on right: 287
$@49 (290)
    on left: 288, on right: 289
$@50 (291)
    on left: 290, on right: 291
@51 (292)
    on left: 319, on right: 320
$@52 (293)
    on left: 321, on right: 323
$@53 (294)
    on left: 322, on right: 323
$@54 (295)
    on left: 324, on right: 325
$@55 (296)
    on left: 335, on right: 336
@56 (297)
    on left: 343, on right: 344
@57 (298)
    on left: 345, on right: 346
yield_expr (299)
    on left: 347 348 349 350, on right: 61 177 448
combined_scalar_offset (300)
    on left: 351 352 353, on right: 338 352
combined_scalar (301)
    on left: 354 355, on right: 339 351
function (302)
    on left: 356, on right: 106 200 344 346
lexical_vars (303)
    on left: 357 358, on right: 344 346
lexical_var_list (304)
    on left: 359 360 361 362, on right: 358 359 360
function_call (305)
    on left: 364 366 368 370 372 374 376 378, on right: 474 477
@58 (306)
    on left: 363, on right: 364
@59 (307)
    on left: 365, on right: 366
@60 (308)
    on left: 367, on right: 368
@61 (309)
    on left: 369, on right: 370
$@62 (310)
    on left: 371, on right: 372
$@63 (311)
    on left: 373, on right: 374
$@64 (312)
    on left: 375, on right: 376
$@65 (313)
    on left: 377, on right: 378
class_name (314)
    on left: 379 380 381 382, on right: 370 372 386 426 469 541 543
    544
fully_qualified_class_name (315)
    on left: 383 384 385, on right: 87 97 116 122 123 174 202 203 213
    214 217
class_name_reference (316)
    on left: 386 387, on right: 261 267 316
dynamic_class_name_reference (317)
    on left: 390 391, on right: 387
$@66 (318)
    on left: 388, on right: 390
$@67 (319)
    on left: 389, on right: 390
dynamic_class_name_variable_properties (320)
    on left: 392 393, on right: 390 392
dynamic_class_name_variable_property (321)
    on left: 394, on right: 392
exit_expr (322)
    on left: 395 396 397, on right: 334
backticks_expr (323)
    on left: 398 399 400, on right: 340
ctor_arguments (324)
    on left: 401 402, on right: 261 267
common_scalar (325)
    on left: 403 404 405 406 407 408 409 410 411 412 413 414, on right:
    415 433
static_scalar (326)
    on left: 415 416 417 418 419 420 421 422 423 424 425, on right:
    24 25 136 137 165 166 169 170 190 192 237 239 240 241 420 421 441
    442 443 444
static_class_constant (327)
    on left: 426, on right: 424
scalar (328)
    on left: 427 428 429 430 431 432 433 434 435 436, on right: 337
static_array_pair_list (329)
    on left: 437 438, on right: 422 423
possible_comma (330)
    on left: 439 440, on right: 438 505
non_empty_static_array_pair_list (331)
    on left: 441 442 443 444, on right: 438 441 442
expr (332)
    on left: 445 446, on right: 55 57 66 80 144 188 242 243 247 248
    263 264 268 269 270 271 272 273 274 275 276 277 278 279 285 287
    289 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305
    306 307 308 309 310 311 312 313 314 315 316 323 325 327 328 329
    330 331 332 333 336 341 349 350 447 482 485 487 492 495 506 507
    508 509 510 512 522 523 531 532 533 534 535
parenthesis_expr (333)
    on left: 447 448, on right: 38 41 44 47 53 153 156 317 397
r_variable (334)
    on left: 449, on right: 187 445
w_variable (335)
    on left: 450, on right: 180 183 510 511 512 513
rw_variable (336)
    on left: 451, on right: 280 281 282 283
variable (337)
    on left: 454 455, on right: 60 70 100 126 127 179 182 264 265 267
    269 270 271 272 273 274 275 276 277 278 279 348 350 449 450 451
    500 524 529 539
$@68 (338)
    on left: 452, on right: 454
$@69 (339)
    on left: 453, on right: 454
variable_properties (340)
    on left: 456 457, on right: 454 456
variable_property (341)
    on left: 459, on right: 249 250 456
$@70 (342)
    on left: 458, on right: 459
array_method_dereference (343)
    on left: 460 461, on right: 460 465
method (344)
    on left: 463, on right: 461 464
@71 (345)
    on left: 462, on right: 463
method_or_not (346)
    on left: 464 465 466, on right: 454 459
variable_without_objects (347)
    on left: 467 468, on right: 372 376 378 469 470 490
static_member (348)
    on left: 469 470, on right: 480
variable_class_name (349)
    on left: 471, on right: 374 376 470 542
array_function_dereference (350)
    on left: 472 474, on right: 472 476
$@72 (351)
    on left: 473, on right: 474
base_variable_with_function_calls (352)
    on left: 475 476 477, on right: 454 455
base_variable (353)
    on left: 478 479 480, on right: 390 391 475
reference_variable (354)
    on left: 481 482 483, on right: 467 468 471 478 479 481 482
compound_variable (355)
    on left: 484 485, on right: 483
dim_offset (356)
    on left: 486 487, on right: 251 252 351 352 353 460 461 472 474
    481 491
object_property (357)
    on left: 488 490, on right: 390 394 454 459
$@73 (358)
    on left: 489, on right: 490
object_dim_list (359)
    on left: 491 492 493, on right: 488 491 492
variable_name (360)
    on left: 494 495, on right: 370 374 493
simple_indirect_reference (361)
    on left: 496 497, on right: 468 479 497
assignment_list (362)
    on left: 498 499, on right: 129 263 498 502
assignment_list_element (363)
    on left: 500 502 503, on right: 498 499
$@74 (364)
    on left: 501, on right: 502
array_pair_list (365)
    on left: 504 505, on right: 354 355
non_empty_array_pair_list (366)
    on left: 506 507 508 509 510 511 512 513, on right: 505 506 507
    510 511
encaps_list (367)
    on left: 514 515 516 517, on right: 400 434 435 514 515
encaps_var (368)
    on left: 518 520 521 522 523 524, on right: 514 516 517
$@75 (369)
    on left: 519, on right: 520
encaps_var_offset (370)
    on left: 525 526 527, on right: 520
internal_functions_in_yacc (371)
    on left: 528 529 530 531 532 533 534 535, on right: 326
isset_variables (372)
    on left: 536 538, on right: 528 538
$@76 (373)
    on left: 537, on right: 538
isset_variable (374)
    on left: 539 540, on right: 536 538
class_constant (375)
    on left: 541 542, on right: 429
static_class_name_scalar (376)
    on left: 543, on right: 416
class_name_scalar (377)
    on left: 544, on right: 428


state 0

    0 $accept: . start "end of file"

    $default  reduce using rule 4 (top_statement_list)

    start               go to state 1
    top_statement_list  go to state 2


state 1

    0 $accept: start . "end of file"

    "end of file"  shift, and go to state 3


state 2

    1 start: top_statement_list .
    3 top_statement_list: top_statement_list . $@1 top_statement

    "end of file"  reduce using rule 1 (start)
    $default       reduce using rule 2 ($@1)

    $@1  go to state 4


state 3

    0 $accept: start "end of file" .

    $default  accept


state 4

    3 top_statement_list: top_statement_list $@1 . top_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "const (T_CONST)"                             shift, and go to state 49
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "use (T_USE)"                                 shift, and go to state 53
    "global (T_GLOBAL)"                           shift, and go to state 54
    "final (T_FINAL)"                             shift, and go to state 55
    "abstract (T_ABSTRACT)"                       shift, and go to state 56
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 61
    "class (T_CLASS)"                             shift, and go to state 62
    "trait (T_TRAIT)"                             shift, and go to state 63
    "interface (T_INTERFACE)"                     shift, and go to state 64
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 74
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                           go to state 84
    top_statement                            go to state 85
    constant_declaration                     go to state 86
    statement                                go to state 87
    unticked_statement                       go to state 88
    function_declaration_statement           go to state 89
    class_declaration_statement              go to state 90
    unticked_function_declaration_statement  go to state 91
    unticked_class_declaration_statement     go to state 92
    class_entry_type                         go to state 93
    interface_entry                          go to state 94
    new_expr                                 go to state 95
    expr_without_variable                    go to state 96
    yield_expr                               go to state 97
    combined_scalar_offset                   go to state 98
    combined_scalar                          go to state 99
    function                                 go to state 100
    function_call                            go to state 101
    class_name                               go to state 102
    common_scalar                            go to state 103
    scalar                                   go to state 104
    expr                                     go to state 105
    parenthesis_expr                         go to state 106
    r_variable                               go to state 107
    rw_variable                              go to state 108
    variable                                 go to state 109
    variable_without_objects                 go to state 110
    static_member                            go to state 111
    variable_class_name                      go to state 112
    array_function_dereference               go to state 113
    base_variable_with_function_calls        go to state 114
    base_variable                            go to state 115
    reference_variable                       go to state 116
    compound_variable                        go to state 117
    simple_indirect_reference                go to state 118
    internal_functions_in_yacc               go to state 119
    class_constant                           go to state 120
    class_name_scalar                        go to state 121


state 5

  535 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 127
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 6

  534 internal_functions_in_yacc: "require (T_REQUIRE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 128
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 7

  533 internal_functions_in_yacc: "eval (T_EVAL)" . '(' expr ')'

    '('  shift, and go to state 129


state 8

  532 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 130
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 9

  531 internal_functions_in_yacc: "include (T_INCLUDE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 131
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 10

  341 expr_without_variable: "print (T_PRINT)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 132
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 11

  342 expr_without_variable: "yield (T_YIELD)" .
  347 yield_expr: "yield (T_YIELD)" . expr_without_variable
  348           | "yield (T_YIELD)" . variable
  349           | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" expr_without_variable
  350           | "yield (T_YIELD)" . expr "=> (T_DOUBLE_ARROW)" variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 342 (expr_without_variable)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 133
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 134
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 135
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 12

  304 expr_without_variable: '+' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 136
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 13

  305 expr_without_variable: '-' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 137
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 14

  306 expr_without_variable: '!' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 138
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 15

  307 expr_without_variable: '~' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 139
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 16

  336 expr_without_variable: '@' . $@55 expr

    $default  reduce using rule 335 ($@55)

    $@55  go to state 140


state 17

  333 expr_without_variable: "(unset) (T_UNSET_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 141
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 18

  332 expr_without_variable: "(bool) (T_BOOL_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 142
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 19

  331 expr_without_variable: "(object) (T_OBJECT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 143
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 20

  330 expr_without_variable: "(array) (T_ARRAY_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 144
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 21

  329 expr_without_variable: "(string) (T_STRING_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 145
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 22

  328 expr_without_variable: "(double) (T_DOUBLE_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 146
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 23

  327 expr_without_variable: "(int) (T_INT_CAST)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 147
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 24

  283 expr_without_variable: "-- (T_DEC)" . rw_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    rw_variable                        go to state 153
    variable                           go to state 154
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 25

  281 expr_without_variable: "++ (T_INC)" . rw_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    rw_variable                        go to state 156
    variable                           go to state 154
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 26

  355 combined_scalar: '[' . array_pair_list ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 157
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 504 (array_pair_list)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 158
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    array_pair_list                    go to state 159
    non_empty_array_pair_list          go to state 160
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 27

  268 expr_without_variable: "clone (T_CLONE)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 161
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 28

  261 new_expr: "new (T_NEW)" . class_name_reference $@44 ctor_arguments

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 162
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 163
    '$'                        shift, and go to state 81

    namespace_name                go to state 164
    class_name                    go to state 165
    class_name_reference          go to state 166
    dynamic_class_name_reference  go to state 167
    static_member                 go to state 111
    variable_class_name           go to state 168
    base_variable                 go to state 169
    reference_variable            go to state 170
    compound_variable             go to state 117
    simple_indirect_reference     go to state 171


state 29

  334 expr_without_variable: "exit (T_EXIT)" . exit_expr

    '('  shift, and go to state 172

    $default  reduce using rule 395 (exit_expr)

    exit_expr         go to state 173
    parenthesis_expr  go to state 174


state 30

   38 unticked_statement: "if (T_IF)" . parenthesis_expr $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" . parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    '('  shift, and go to state 175

    parenthesis_expr  go to state 176


state 31

  403 common_scalar: "integer number (T_LNUMBER)" .

    $default  reduce using rule 403 (common_scalar)


state 32

  404 common_scalar: "floating-point number (T_DNUMBER)" .

    $default  reduce using rule 404 (common_scalar)


state 33

    5 namespace_name: "identifier (T_STRING)" .
   34 statement: "identifier (T_STRING)" . ':'

    ':'  shift, and go to state 177

    $default  reduce using rule 5 (namespace_name)


state 34

  427 scalar: "variable name (T_STRING_VARNAME)" .

    $default  reduce using rule 427 (scalar)


state 35

  484 compound_variable: "variable (T_VARIABLE)" .

    $default  reduce using rule 484 (compound_variable)


state 36

   65 unticked_statement: T_INLINE_HTML .

    $default  reduce using rule 65 (unticked_statement)


state 37

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" . '[' dim_offset ']'
  405 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    '['  shift, and go to state 178

    $default  reduce using rule 405 (common_scalar)


state 38

   64 unticked_statement: "echo (T_ECHO)" . echo_expr_list ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    echo_expr_list                     go to state 179
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 180
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 39

   47 unticked_statement: "do (T_DO)" . $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';'

    $default  reduce using rule 45 ($@11)

    $@11  go to state 181


state 40

   44 unticked_statement: "while (T_WHILE)" . $@9 parenthesis_expr @10 while_statement

    $default  reduce using rule 42 ($@9)

    $@9  go to state 182


state 41

   51 unticked_statement: "for (T_FOR)" . '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    '('  shift, and go to state 183


state 42

   70 unticked_statement: "foreach (T_FOREACH)" . '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   73                   | "foreach (T_FOREACH)" . '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    '('  shift, and go to state 184


state 43

   75 unticked_statement: "declare (T_DECLARE)" . $@21 '(' declare_list ')' declare_statement

    $default  reduce using rule 74 ($@21)

    $@21  go to state 185


state 44

   53 unticked_statement: "switch (T_SWITCH)" . parenthesis_expr $@16 switch_case_list

    '('  shift, and go to state 175

    parenthesis_expr  go to state 186


state 45

   54 unticked_statement: "break (T_BREAK)" . ';'
   55                   | "break (T_BREAK)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 187
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 188
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 46

   56 unticked_statement: "continue (T_CONTINUE)" . ';'
   57                   | "continue (T_CONTINUE)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 189
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 190
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 47

   81 unticked_statement: "goto (T_GOTO)" . "identifier (T_STRING)" ';'

    "identifier (T_STRING)"  shift, and go to state 191


state 48

  356 function: "function (T_FUNCTION)" .

    $default  reduce using rule 356 (function)


state 49

   25 constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 192


state 50

   58 unticked_statement: "return (T_RETURN)" . ';'
   59                   | "return (T_RETURN)" . expr_without_variable ';'
   60                   | "return (T_RETURN)" . variable ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 193
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 194
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 196
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 51

   79 unticked_statement: "try (T_TRY)" . $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement

    $default  reduce using rule 77 ($@22)

    $@22  go to state 197


state 52

   80 unticked_statement: "throw (T_THROW)" . expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 198
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 53

   16 top_statement: "use (T_USE)" . use_declarations ';'

    "identifier (T_STRING)"  shift, and go to state 123
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 199

    namespace_name    go to state 200
    use_declarations  go to state 201
    use_declaration   go to state 202


state 54

   62 unticked_statement: "global (T_GLOBAL)" . global_var_list ';'

    "variable (T_VARIABLE)"  shift, and go to state 203
    '$'                      shift, and go to state 204

    global_var_list  go to state 205
    global_var       go to state 206


state 55

  114 class_entry_type: "final (T_FINAL)" . "class (T_CLASS)"

    "class (T_CLASS)"  shift, and go to state 207


state 56

  112 class_entry_type: "abstract (T_ABSTRACT)" . "class (T_CLASS)"

    "class (T_CLASS)"  shift, and go to state 208


state 57

   63 unticked_statement: "static (T_STATIC)" . static_var_list ';'
  346 expr_without_variable: "static (T_STATIC)" . function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'
  379 class_name: "static (T_STATIC)" .

    "variable (T_VARIABLE)"  shift, and go to state 209
    "function (T_FUNCTION)"  shift, and go to state 48

    $default  reduce using rule 379 (class_name)

    static_var_list  go to state 210
    function         go to state 211


state 58

   67 unticked_statement: "unset (T_UNSET)" . '(' unset_variables ')' ';'

    '('  shift, and go to state 212


state 59

  528 internal_functions_in_yacc: "isset (T_ISSET)" . '(' isset_variables ')'

    '('  shift, and go to state 213


state 60

  529 internal_functions_in_yacc: "empty (T_EMPTY)" . '(' variable ')'
  530                           | "empty (T_EMPTY)" . '(' expr_without_variable ')'

    '('  shift, and go to state 214


state 61

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 215


state 62

  111 class_entry_type: "class (T_CLASS)" .

    $default  reduce using rule 111 (class_entry_type)


state 63

  113 class_entry_type: "trait (T_TRAIT)" .

    $default  reduce using rule 113 (class_entry_type)


state 64

  117 interface_entry: "interface (T_INTERFACE)" .

    $default  reduce using rule 117 (interface_entry)


state 65

  263 expr_without_variable: "list (T_LIST)" . '(' $@45 assignment_list ')' '=' expr

    '('  shift, and go to state 216


state 66

  354 combined_scalar: "array (T_ARRAY)" . '(' array_pair_list ')'

    '('  shift, and go to state 217


state 67

  436 scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 436 (scalar)


state 68

  409 common_scalar: "__TRAIT__ (T_TRAIT_C)" .

    $default  reduce using rule 409 (common_scalar)


state 69

  410 common_scalar: "__METHOD__ (T_METHOD_C)" .

    $default  reduce using rule 410 (common_scalar)


state 70

  411 common_scalar: "__FUNCTION__ (T_FUNC_C)" .

    $default  reduce using rule 411 (common_scalar)


state 71

  406 common_scalar: "__LINE__ (T_LINE)" .

    $default  reduce using rule 406 (common_scalar)


state 72

  407 common_scalar: "__FILE__ (T_FILE)" .

    $default  reduce using rule 407 (common_scalar)


state 73

  413 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  414              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"
  435 scalar: "heredoc start (T_START_HEREDOC)" . encaps_list "heredoc end (T_END_HEREDOC)"

    "variable (T_VARIABLE)"                                     shift, and go to state 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 219
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 220
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 222

    encaps_list  go to state 223
    encaps_var   go to state 224


state 74

   11 top_statement: "namespace (T_NAMESPACE)" . namespace_name ';'
   13              | "namespace (T_NAMESPACE)" . namespace_name '{' $@2 top_statement_list '}'
   15              | "namespace (T_NAMESPACE)" . '{' $@3 top_statement_list '}'
  366 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  431 scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "identifier (T_STRING)"  shift, and go to state 123
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 225
    '{'                      shift, and go to state 226

    namespace_name  go to state 227


state 75

  412 common_scalar: "__NAMESPACE__ (T_NS_C)" .

    $default  reduce using rule 412 (common_scalar)


state 76

  408 common_scalar: "__DIR__ (T_DIR)" .

    $default  reduce using rule 408 (common_scalar)


state 77

  368 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  432 scalar: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 228


state 78

  320 expr_without_variable: '(' . new_expr ')' @51 instance_call
  447 parenthesis_expr: '(' . expr ')'
  448                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 229
    expr_without_variable              go to state 96
    yield_expr                         go to state 230
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 231
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 79

   76 unticked_statement: ';' .

    $default  reduce using rule 76 (unticked_statement)


state 80

   35 unticked_statement: '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 232


state 81

  485 compound_variable: '$' . '{' expr '}'
  496 simple_indirect_reference: '$' .

    '{'  shift, and go to state 233

    $default  reduce using rule 496 (simple_indirect_reference)


state 82

  340 expr_without_variable: '`' . backticks_expr '`'

    "variable (T_VARIABLE)"                                     shift, and go to state 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 234
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 222

    $default  reduce using rule 398 (backticks_expr)

    backticks_expr  go to state 235
    encaps_list     go to state 236
    encaps_var      go to state 224


state 83

  434 scalar: '"' . encaps_list '"'

    "variable (T_VARIABLE)"                                     shift, and go to state 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 237
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 222

    encaps_list  go to state 238
    encaps_var   go to state 224


state 84

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  364 function_call: namespace_name . @58 function_call_parameter_list
  380 class_name: namespace_name .
  430 scalar: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 380 (class_name)
    '('                            reduce using rule 363 (@58)
    $default                       reduce using rule 430 (scalar)

    @58  go to state 240


state 85

    3 top_statement_list: top_statement_list $@1 top_statement .

    $default  reduce using rule 3 (top_statement_list)


state 86

   17 top_statement: constant_declaration . ';'
   24 constant_declaration: constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 241
    ';'  shift, and go to state 242


state 87

    7 top_statement: statement .

    $default  reduce using rule 7 (top_statement)


state 88

   33 statement: unticked_statement .

    $default  reduce using rule 33 (statement)


state 89

    8 top_statement: function_declaration_statement .

    $default  reduce using rule 8 (top_statement)


state 90

    9 top_statement: class_declaration_statement .

    $default  reduce using rule 9 (top_statement)


state 91

  101 function_declaration_statement: unticked_function_declaration_statement .

    $default  reduce using rule 101 (function_declaration_statement)


state 92

  102 class_declaration_statement: unticked_class_declaration_statement .

    $default  reduce using rule 102 (class_declaration_statement)


state 93

  108 unticked_class_declaration_statement: class_entry_type . "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 243


state 94

  110 unticked_class_declaration_statement: interface_entry . "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 244


state 95

  318 expr_without_variable: new_expr .

    $default  reduce using rule 318 (expr_without_variable)


state 96

  446 expr: expr_without_variable .

    $default  reduce using rule 446 (expr)


state 97

   61 unticked_statement: yield_expr . ';'

    ';'  shift, and go to state 245


state 98

  338 expr_without_variable: combined_scalar_offset .
  352 combined_scalar_offset: combined_scalar_offset . '[' dim_offset ']'

    '['  shift, and go to state 246

    $default  reduce using rule 338 (expr_without_variable)


state 99

  339 expr_without_variable: combined_scalar .
  351 combined_scalar_offset: combined_scalar . '[' dim_offset ']'

    '['  shift, and go to state 247

    $default  reduce using rule 339 (expr_without_variable)


state 100

  106 unticked_function_declaration_statement: function . is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}'
  344 expr_without_variable: function . is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 248

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 249


state 101

  474 array_function_dereference: function_call . $@72 '[' dim_offset ']'
  477 base_variable_with_function_calls: function_call .

    '['       reduce using rule 473 ($@72)
    $default  reduce using rule 477 (base_variable_with_function_calls)

    $@72  go to state 250


state 102

  370 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list
  372              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  541 class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  544 class_name_scalar: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 251


state 103

  433 scalar: common_scalar .

    $default  reduce using rule 433 (scalar)


state 104

  337 expr_without_variable: scalar .

    $default  reduce using rule 337 (expr_without_variable)


state 105

   66 unticked_statement: expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ';'                           shift, and go to state 278


state 106

  317 expr_without_variable: parenthesis_expr .

    $default  reduce using rule 317 (expr_without_variable)


state 107

  445 expr: r_variable .

    $default  reduce using rule 445 (expr)


state 108

  280 expr_without_variable: rw_variable . "++ (T_INC)"
  282                      | rw_variable . "-- (T_DEC)"

    "-- (T_DEC)"  shift, and go to state 279
    "++ (T_INC)"  shift, and go to state 280


state 109

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


state 110

  378 function_call: variable_without_objects . $@65 function_call_parameter_list

    $default  reduce using rule 377 ($@65)

    $@65  go to state 293


state 111

  480 base_variable: static_member .

    $default  reduce using rule 480 (base_variable)


state 112

  374 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list
  376              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects
  542 class_constant: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 294


state 113

  472 array_function_dereference: array_function_dereference . '[' dim_offset ']'
  476 base_variable_with_function_calls: array_function_dereference .

    '['  shift, and go to state 295

    $default  reduce using rule 476 (base_variable_with_function_calls)


state 114

  454 variable: base_variable_with_function_calls . "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not variable_properties
  455         | base_variable_with_function_calls .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 296

    $default  reduce using rule 455 (variable)


state 115

  475 base_variable_with_function_calls: base_variable .

    $default  reduce using rule 475 (base_variable_with_function_calls)


state 116

  467 variable_without_objects: reference_variable .
  471 variable_class_name: reference_variable .
  478 base_variable: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 471 (variable_class_name)
    '('                            reduce using rule 467 (variable_without_objects)
    $default                       reduce using rule 478 (base_variable)


state 117

  483 reference_variable: compound_variable .

    $default  reduce using rule 483 (reference_variable)


state 118

  468 variable_without_objects: simple_indirect_reference . reference_variable
  479 base_variable: simple_indirect_reference . reference_variable
  497 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 299

    reference_variable  go to state 300
    compound_variable   go to state 117


state 119

  326 expr_without_variable: internal_functions_in_yacc .

    $default  reduce using rule 326 (expr_without_variable)


state 120

  429 scalar: class_constant .

    $default  reduce using rule 429 (scalar)


state 121

  428 scalar: class_name_scalar .

    $default  reduce using rule 428 (scalar)


state 122

  342 expr_without_variable: "yield (T_YIELD)" .

    $default  reduce using rule 342 (expr_without_variable)


state 123

    5 namespace_name: "identifier (T_STRING)" .

    $default  reduce using rule 5 (namespace_name)


state 124

  346 expr_without_variable: "static (T_STATIC)" . function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'
  379 class_name: "static (T_STATIC)" .

    "function (T_FUNCTION)"  shift, and go to state 48

    $default  reduce using rule 379 (class_name)

    function  go to state 211


state 125

  366 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  431 scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 225


state 126

  344 expr_without_variable: function . is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 248

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 301


state 127

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  535 internal_functions_in_yacc: "require_once (T_REQUIRE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 535 (internal_functions_in_yacc)


state 128

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  534 internal_functions_in_yacc: "require (T_REQUIRE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 534 (internal_functions_in_yacc)


state 129

  533 internal_functions_in_yacc: "eval (T_EVAL)" '(' . expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 302
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 130

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  532 internal_functions_in_yacc: "include_once (T_INCLUDE_ONCE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 532 (internal_functions_in_yacc)


state 131

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  531 internal_functions_in_yacc: "include (T_INCLUDE)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 531 (internal_functions_in_yacc)


state 132

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  341                      | "print (T_PRINT)" expr .

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 341 (expr_without_variable)


state 133

  347 yield_expr: "yield (T_YIELD)" expr_without_variable .
  446 expr: expr_without_variable .

    ')'       reduce using rule 347 (yield_expr)
    ';'       reduce using rule 347 (yield_expr)
    $default  reduce using rule 446 (expr)


state 134

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  349 yield_expr: "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" expr_without_variable
  350           | "yield (T_YIELD)" expr . "=> (T_DOUBLE_ARROW)" variable

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 303


state 135

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  348 yield_expr: "yield (T_YIELD)" variable .
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 348 (yield_expr)
    ';'           reduce using rule 348 (yield_expr)
    $default      reduce using rule 449 (r_variable)


state 136

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  304                      | '+' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $default  reduce using rule 304 (expr_without_variable)


state 137

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  305                      | '-' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $default  reduce using rule 305 (expr_without_variable)


state 138

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  306                      | '!' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 306 (expr_without_variable)


state 139

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  307                      | '~' expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $default  reduce using rule 307 (expr_without_variable)


state 140

  336 expr_without_variable: '@' $@55 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 304
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 141

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  333                      | "(unset) (T_UNSET_CAST)" expr .

    $default  reduce using rule 333 (expr_without_variable)


state 142

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  332                      | "(bool) (T_BOOL_CAST)" expr .

    $default  reduce using rule 332 (expr_without_variable)


state 143

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  331                      | "(object) (T_OBJECT_CAST)" expr .

    $default  reduce using rule 331 (expr_without_variable)


state 144

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  330                      | "(array) (T_ARRAY_CAST)" expr .

    $default  reduce using rule 330 (expr_without_variable)


state 145

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  329                      | "(string) (T_STRING_CAST)" expr .

    $default  reduce using rule 329 (expr_without_variable)


state 146

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  328                      | "(double) (T_DOUBLE_CAST)" expr .

    $default  reduce using rule 328 (expr_without_variable)


state 147

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  327                      | "(int) (T_INT_CAST)" expr .

    $default  reduce using rule 327 (expr_without_variable)


state 148

  379 class_name: "static (T_STATIC)" .

    $default  reduce using rule 379 (class_name)


state 149

  366 function_call: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 305


state 150

  368 function_call: "\\ (T_NS_SEPARATOR)" . namespace_name @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 306


state 151

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  364 function_call: namespace_name . @58 function_call_parameter_list
  380 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 380 (class_name)
    $default                       reduce using rule 363 (@58)

    @58  go to state 240


state 152

  370 function_call: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list
  372              | class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 307


state 153

  283 expr_without_variable: "-- (T_DEC)" rw_variable .

    $default  reduce using rule 283 (expr_without_variable)


state 154

  451 rw_variable: variable .

    $default  reduce using rule 451 (rw_variable)


state 155

  374 function_call: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list
  376              | variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 308


state 156

  281 expr_without_variable: "++ (T_INC)" rw_variable .

    $default  reduce using rule 281 (expr_without_variable)


state 157

  513 non_empty_array_pair_list: '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    w_variable                         go to state 309
    variable                           go to state 310
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 158

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  508 non_empty_array_pair_list: expr . "=> (T_DOUBLE_ARROW)" expr
  509                          | expr .
  512                          | expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 311

    $default  reduce using rule 509 (non_empty_array_pair_list)


state 159

  355 combined_scalar: '[' array_pair_list . ']'

    ']'  shift, and go to state 312


state 160

  505 array_pair_list: non_empty_array_pair_list . possible_comma
  506 non_empty_array_pair_list: non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list . ',' expr
  510                          | non_empty_array_pair_list . ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  511                          | non_empty_array_pair_list . ',' '&' w_variable

    ','  shift, and go to state 313

    $default  reduce using rule 439 (possible_comma)

    possible_comma  go to state 314


state 161

  268 expr_without_variable: "clone (T_CLONE)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    $default  reduce using rule 268 (expr_without_variable)


state 162

  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 315


state 163

  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 316


state 164

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  380 class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 380 (class_name)


state 165

  386 class_name_reference: class_name .
  469 static_member: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 317

    $default  reduce using rule 386 (class_name_reference)


state 166

  261 new_expr: "new (T_NEW)" class_name_reference . $@44 ctor_arguments

    $default  reduce using rule 260 ($@44)

    $@44  go to state 318


state 167

  387 class_name_reference: dynamic_class_name_reference .

    $default  reduce using rule 387 (class_name_reference)


state 168

  470 static_member: variable_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 319


state 169

  390 dynamic_class_name_reference: base_variable . "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 dynamic_class_name_variable_properties
  391                             | base_variable .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 320

    $default  reduce using rule 391 (dynamic_class_name_reference)


state 170

  471 variable_class_name: reference_variable .
  478 base_variable: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 471 (variable_class_name)
    $default                       reduce using rule 478 (base_variable)


state 171

  479 base_variable: simple_indirect_reference . reference_variable
  497 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 299

    reference_variable  go to state 321
    compound_variable   go to state 117


state 172

  396 exit_expr: '(' . ')'
  447 parenthesis_expr: '(' . expr ')'
  448                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ')'                                           shift, and go to state 322
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 230
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 231
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 173

  334 expr_without_variable: "exit (T_EXIT)" exit_expr .

    $default  reduce using rule 334 (expr_without_variable)


state 174

  397 exit_expr: parenthesis_expr .

    $default  reduce using rule 397 (exit_expr)


state 175

  447 parenthesis_expr: '(' . expr ')'
  448                 | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 230
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 231
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 176

   38 unticked_statement: "if (T_IF)" parenthesis_expr . $@5 statement $@6 elseif_list else_single
   41                   | "if (T_IF)" parenthesis_expr . ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    ':'  shift, and go to state 323

    $default  reduce using rule 36 ($@5)

    $@5  go to state 324


state 177

   34 statement: "identifier (T_STRING)" ':' .

    $default  reduce using rule 34 (statement)


state 178

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 326
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 179

   64 unticked_statement: "echo (T_ECHO)" echo_expr_list . ';'
  242 echo_expr_list: echo_expr_list . ',' expr

    ','  shift, and go to state 327
    ';'  shift, and go to state 328


state 180

  243 echo_expr_list: expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 243 (echo_expr_list)


state 181

   47 unticked_statement: "do (T_DO)" $@11 . statement "while (T_WHILE)" $@12 parenthesis_expr ';'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 329
    unticked_statement                 go to state 88
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 182

   44 unticked_statement: "while (T_WHILE)" $@9 . parenthesis_expr @10 while_statement

    '('  shift, and go to state 175

    parenthesis_expr  go to state 330


state 183

   51 unticked_statement: "for (T_FOR)" '(' . for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 244 (for_expr)

    namespace_name                     go to state 84
    for_expr                           go to state 331
    non_empty_for_expr                 go to state 332
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 333
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 184

   70 unticked_statement: "foreach (T_FOREACH)" '(' . variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
   73                   | "foreach (T_FOREACH)" '(' . expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 334
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 335
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 185

   75 unticked_statement: "declare (T_DECLARE)" $@21 . '(' declare_list ')' declare_statement

    '('  shift, and go to state 336


state 186

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr . $@16 switch_case_list

    $default  reduce using rule 52 ($@16)

    $@16  go to state 337


state 187

   54 unticked_statement: "break (T_BREAK)" ';' .

    $default  reduce using rule 54 (unticked_statement)


state 188

   55 unticked_statement: "break (T_BREAK)" expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ';'                           shift, and go to state 338


state 189

   56 unticked_statement: "continue (T_CONTINUE)" ';' .

    $default  reduce using rule 56 (unticked_statement)


state 190

   57 unticked_statement: "continue (T_CONTINUE)" expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ';'                           shift, and go to state 339


state 191

   81 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" . ';'

    ';'  shift, and go to state 340


state 192

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 341


state 193

   58 unticked_statement: "return (T_RETURN)" ';' .

    $default  reduce using rule 58 (unticked_statement)


state 194

   59 unticked_statement: "return (T_RETURN)" expr_without_variable . ';'
  446 expr: expr_without_variable .

    ';'  shift, and go to state 342

    $default  reduce using rule 446 (expr)


state 195

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277


state 196

   60 unticked_statement: "return (T_RETURN)" variable . ';'
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292
    ';'                    shift, and go to state 343

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


state 197

   79 unticked_statement: "try (T_TRY)" $@22 . '{' inner_statement_list '}' catch_statement $@23 finally_statement

    '{'  shift, and go to state 344


state 198

   80 unticked_statement: "throw (T_THROW)" expr . ';'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ';'                           shift, and go to state 345


state 199

   22 use_declaration: "\\ (T_NS_SEPARATOR)" . namespace_name
   23                | "\\ (T_NS_SEPARATOR)" . namespace_name "as (T_AS)" "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 346


state 200

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   20 use_declaration: namespace_name .
   21                | namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 347
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 20 (use_declaration)


state 201

   16 top_statement: "use (T_USE)" use_declarations . ';'
   18 use_declarations: use_declarations . ',' use_declaration

    ','  shift, and go to state 348
    ';'  shift, and go to state 349


state 202

   19 use_declarations: use_declaration .

    $default  reduce using rule 19 (use_declarations)


state 203

  186 global_var: "variable (T_VARIABLE)" .

    $default  reduce using rule 186 (global_var)


state 204

  187 global_var: '$' . r_variable
  188           | '$' . '{' expr '}'

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '{'                        shift, and go to state 350
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    r_variable                         go to state 351
    variable                           go to state 352
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 205

   62 unticked_statement: "global (T_GLOBAL)" global_var_list . ';'
  184 global_var_list: global_var_list . ',' global_var

    ','  shift, and go to state 353
    ';'  shift, and go to state 354


state 206

  185 global_var_list: global_var .

    $default  reduce using rule 185 (global_var_list)


state 207

  114 class_entry_type: "final (T_FINAL)" "class (T_CLASS)" .

    $default  reduce using rule 114 (class_entry_type)


state 208

  112 class_entry_type: "abstract (T_ABSTRACT)" "class (T_CLASS)" .

    $default  reduce using rule 112 (class_entry_type)


state 209

  191 static_var_list: "variable (T_VARIABLE)" .
  192                | "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 355

    $default  reduce using rule 191 (static_var_list)


state 210

   63 unticked_statement: "static (T_STATIC)" static_var_list . ';'
  189 static_var_list: static_var_list . ',' "variable (T_VARIABLE)"
  190                | static_var_list . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 356
    ';'  shift, and go to state 357


state 211

  346 expr_without_variable: "static (T_STATIC)" function . is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '&'  shift, and go to state 248

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 358


state 212

   67 unticked_statement: "unset (T_UNSET)" '(' . unset_variables ')' ';'

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    unset_variables                    go to state 359
    unset_variable                     go to state 360
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 361
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 213

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' . isset_variables ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 362
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 363
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    isset_variables                    go to state 364
    isset_variable                     go to state 365
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 214

  529 internal_functions_in_yacc: "empty (T_EMPTY)" '(' . variable ')'
  530                           | "empty (T_EMPTY)" '(' . expr_without_variable ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 366
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 367
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 215

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 368


state 216

  263 expr_without_variable: "list (T_LIST)" '(' . $@45 assignment_list ')' '=' expr

    $default  reduce using rule 262 ($@45)

    $@45  go to state 369


state 217

  354 combined_scalar: "array (T_ARRAY)" '(' . array_pair_list ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 157
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 504 (array_pair_list)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 158
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    array_pair_list                    go to state 370
    non_empty_array_pair_list          go to state 160
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 218

  518 encaps_var: "variable (T_VARIABLE)" .
  520           | "variable (T_VARIABLE)" . '[' $@75 encaps_var_offset ']'
  521           | "variable (T_VARIABLE)" . "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)"

    '['                       shift, and go to state 371
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 372

    $default  reduce using rule 518 (encaps_var)


state 219

  413 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"
  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 218
    "heredoc end (T_END_HEREDOC)"      shift, and go to state 373
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                shift, and go to state 222

    encaps_var  go to state 374


state 220

  414 common_scalar: "heredoc start (T_START_HEREDOC)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 414 (common_scalar)


state 221

  522 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . expr '}'
  523           | "${ (T_DOLLAR_OPEN_CURLY_BRACES)" . "variable name (T_STRING_VARNAME)" '[' expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 375
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 376
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 222

  524 encaps_var: "{$ (T_CURLY_OPEN)" . variable '}'

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 377
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 223

  435 scalar: "heredoc start (T_START_HEREDOC)" encaps_list . "heredoc end (T_END_HEREDOC)"
  514 encaps_list: encaps_list . encaps_var
  515            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 378
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 379
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 222

    encaps_var  go to state 380


state 224

  516 encaps_list: encaps_var .

    $default  reduce using rule 516 (encaps_list)


state 225

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  431 scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 381


state 226

   15 top_statement: "namespace (T_NAMESPACE)" '{' . $@3 top_statement_list '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 382


state 227

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   11 top_statement: "namespace (T_NAMESPACE)" namespace_name . ';'
   13              | "namespace (T_NAMESPACE)" namespace_name . '{' $@2 top_statement_list '}'

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239
    ';'                    shift, and go to state 383
    '{'                    shift, and go to state 384


state 228

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  432 scalar: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 382 (class_name)
    '('                            reduce using rule 367 (@60)
    $default                       reduce using rule 432 (scalar)

    @60  go to state 385


state 229

  318 expr_without_variable: new_expr .
  320                      | '(' new_expr . ')' @51 instance_call

    ')'  shift, and go to state 386

    ')'       [reduce using rule 318 (expr_without_variable)]
    $default  reduce using rule 318 (expr_without_variable)


state 230

  448 parenthesis_expr: '(' yield_expr . ')'

    ')'  shift, and go to state 387


state 231

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  447 parenthesis_expr: '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ')'                           shift, and go to state 388


state 232

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   35 unticked_statement: '{' inner_statement_list . '}'

    '}'  shift, and go to state 389

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 233

  485 compound_variable: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 391
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 234

  399 backticks_expr: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .
  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 218
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                shift, and go to state 222

    $default  reduce using rule 399 (backticks_expr)

    encaps_var  go to state 374


state 235

  340 expr_without_variable: '`' backticks_expr . '`'

    '`'  shift, and go to state 392


state 236

  400 backticks_expr: encaps_list .
  514 encaps_list: encaps_list . encaps_var
  515            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 378
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 222

    $default  reduce using rule 400 (backticks_expr)

    encaps_var  go to state 380


state 237

  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . encaps_var

    "variable (T_VARIABLE)"            shift, and go to state 218
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"  shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                shift, and go to state 222

    encaps_var  go to state 374


state 238

  434 scalar: '"' encaps_list . '"'
  514 encaps_list: encaps_list . encaps_var
  515            | encaps_list . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"

    "variable (T_VARIABLE)"                                     shift, and go to state 218
    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 378
    "${ (T_DOLLAR_OPEN_CURLY_BRACES)"                           shift, and go to state 221
    "{$ (T_CURLY_OPEN)"                                         shift, and go to state 222
    '"'                                                         shift, and go to state 393

    encaps_var  go to state 380


state 239

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 394


state 240

  364 function_call: namespace_name @58 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 396


state 241

   24 constant_declaration: constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 397


state 242

   17 top_statement: constant_declaration ';' .

    $default  reduce using rule 17 (top_statement)


state 243

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" . extends_from $@32 implements_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 398

    $default  reduce using rule 115 (extends_from)

    extends_from  go to state 399


state 244

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" . $@33 interface_extends_list '{' class_statement_list '}'

    $default  reduce using rule 109 ($@33)

    $@33  go to state 400


state 245

   61 unticked_statement: yield_expr ';' .

    $default  reduce using rule 61 (unticked_statement)


state 246

  352 combined_scalar_offset: combined_scalar_offset '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 401
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 247

  351 combined_scalar_offset: combined_scalar '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 402
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 248

  104 is_reference: '&' .

    $default  reduce using rule 104 (is_reference)


state 249

  106 unticked_function_declaration_statement: function is_reference . "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}'
  344 expr_without_variable: function is_reference . @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"  shift, and go to state 403

    $default  reduce using rule 343 (@56)

    @56  go to state 404


state 250

  474 array_function_dereference: function_call $@72 . '[' dim_offset ']'

    '['  shift, and go to state 405


state 251

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name @61 function_call_parameter_list
  372              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"
  544 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "class (T_CLASS)"

    "identifier (T_STRING)"  shift, and go to state 406
    "variable (T_VARIABLE)"  shift, and go to state 35
    "class (T_CLASS)"        shift, and go to state 407
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 409
    reference_variable         go to state 410
    compound_variable          go to state 117
    variable_name              go to state 411
    simple_indirect_reference  go to state 412


state 252

  289 expr_without_variable: expr "or (T_LOGICAL_OR)" . $@49 expr

    $default  reduce using rule 288 ($@49)

    $@49  go to state 413


state 253

  292 expr_without_variable: expr "xor (T_LOGICAL_XOR)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 414
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 254

  291 expr_without_variable: expr "and (T_LOGICAL_AND)" . $@50 expr

    $default  reduce using rule 290 ($@50)

    $@50  go to state 415


state 255

  323 expr_without_variable: expr '?' . $@52 expr ':' $@53 expr
  325                      | expr '?' . ':' $@54 expr

    ':'  shift, and go to state 416

    $default  reduce using rule 321 ($@52)

    $@52  go to state 417


state 256

  285 expr_without_variable: expr "|| (T_BOOLEAN_OR)" . $@47 expr

    $default  reduce using rule 284 ($@47)

    $@47  go to state 418


state 257

  287 expr_without_variable: expr "&& (T_BOOLEAN_AND)" . $@48 expr

    $default  reduce using rule 286 ($@48)

    $@48  go to state 419


state 258

  293 expr_without_variable: expr '|' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 420
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 259

  295 expr_without_variable: expr '^' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 421
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 260

  294 expr_without_variable: expr '&' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 422
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 261

  309 expr_without_variable: expr "!== (T_IS_NOT_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 423
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 262

  308 expr_without_variable: expr "=== (T_IS_IDENTICAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 424
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 263

  311 expr_without_variable: expr "!= (T_IS_NOT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 425
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 264

  310 expr_without_variable: expr "== (T_IS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 426
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 265

  312 expr_without_variable: expr '<' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 427
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 266

  314 expr_without_variable: expr '>' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 428
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 267

  315 expr_without_variable: expr ">= (T_IS_GREATER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 429
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 268

  313 expr_without_variable: expr "<= (T_IS_SMALLER_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 430
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 269

  303 expr_without_variable: expr ">> (T_SR)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 431
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 270

  302 expr_without_variable: expr "<< (T_SL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 432
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 271

  297 expr_without_variable: expr '+' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 433
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 272

  298 expr_without_variable: expr '-' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 434
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 273

  296 expr_without_variable: expr '.' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 435
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 274

  299 expr_without_variable: expr '*' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 436
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 275

  300 expr_without_variable: expr '/' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 437
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 276

  301 expr_without_variable: expr '%' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 438
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 277

  316 expr_without_variable: expr "instanceof (T_INSTANCEOF)" . class_name_reference

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 162
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 163
    '$'                        shift, and go to state 81

    namespace_name                go to state 164
    class_name                    go to state 165
    class_name_reference          go to state 439
    dynamic_class_name_reference  go to state 167
    static_member                 go to state 111
    variable_class_name           go to state 168
    base_variable                 go to state 169
    reference_variable            go to state 170
    compound_variable             go to state 117
    simple_indirect_reference     go to state 171


state 278

   66 unticked_statement: expr ';' .

    $default  reduce using rule 66 (unticked_statement)


state 279

  282 expr_without_variable: rw_variable "-- (T_DEC)" .

    $default  reduce using rule 282 (expr_without_variable)


state 280

  280 expr_without_variable: rw_variable "++ (T_INC)" .

    $default  reduce using rule 280 (expr_without_variable)


state 281

  264 expr_without_variable: variable '=' . expr
  265                      | variable '=' . '&' variable
  267                      | variable '=' . '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 440
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 441
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 282

  279 expr_without_variable: variable ">>= (T_SR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 442
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 283

  278 expr_without_variable: variable "<<= (T_SL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 443
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 284

  277 expr_without_variable: variable "^= (T_XOR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 444
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 285

  276 expr_without_variable: variable "|= (T_OR_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 445
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 286

  275 expr_without_variable: variable "&= (T_AND_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 446
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 287

  274 expr_without_variable: variable "%= (T_MOD_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 447
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 288

  273 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 448
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 289

  272 expr_without_variable: variable "/= (T_DIV_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 449
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 290

  271 expr_without_variable: variable "*= (T_MUL_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 450
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 291

  270 expr_without_variable: variable "-= (T_MINUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 451
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 292

  269 expr_without_variable: variable "+= (T_PLUS_EQUAL)" . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 452
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 293

  378 function_call: variable_without_objects $@65 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 453


state 294

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name $@63 function_call_parameter_list
  376              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects
  542 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 454
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 455
    reference_variable         go to state 410
    compound_variable          go to state 117
    variable_name              go to state 456
    simple_indirect_reference  go to state 412


state 295

  472 array_function_dereference: array_function_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 457
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 296

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" . $@68 object_property $@69 method_or_not variable_properties

    $default  reduce using rule 452 ($@68)

    $@68  go to state 458


state 297

  481 reference_variable: reference_variable '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 459
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 298

  482 reference_variable: reference_variable '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 460
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 299

  485 compound_variable: '$' . '{' expr '}'
  497 simple_indirect_reference: simple_indirect_reference '$' .

    '{'  shift, and go to state 233

    $default  reduce using rule 497 (simple_indirect_reference)


state 300

  468 variable_without_objects: simple_indirect_reference reference_variable .
  479 base_variable: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    '('       reduce using rule 468 (variable_without_objects)
    $default  reduce using rule 479 (base_variable)


state 301

  344 expr_without_variable: function is_reference . @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $default  reduce using rule 343 (@56)

    @56  go to state 404


state 302

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  533 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr . ')'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ')'                           shift, and go to state 461


state 303

  349 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . expr_without_variable
  350           | "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" . variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 462
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 463
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 304

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  336                      | '@' $@55 expr .

    $default  reduce using rule 336 (expr_without_variable)


state 305

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 464


state 306

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name . @60 function_call_parameter_list
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 382 (class_name)
    $default                       reduce using rule 367 (@60)

    @60  go to state 385


state 307

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name @61 function_call_parameter_list
  372              | class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@62 function_call_parameter_list
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  shift, and go to state 465
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 409
    reference_variable         go to state 410
    compound_variable          go to state 117
    variable_name              go to state 411
    simple_indirect_reference  go to state 412


state 308

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_name $@63 function_call_parameter_list
  376              | variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects $@64 function_call_parameter_list
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "identifier (T_STRING)"  shift, and go to state 465
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 455
    reference_variable         go to state 410
    compound_variable          go to state 117
    variable_name              go to state 456
    simple_indirect_reference  go to state 412


state 309

  513 non_empty_array_pair_list: '&' w_variable .

    $default  reduce using rule 513 (non_empty_array_pair_list)


state 310

  450 w_variable: variable .

    $default  reduce using rule 450 (w_variable)


state 311

  508 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" . expr
  512                          | expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 466
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 467
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 312

  355 combined_scalar: '[' array_pair_list ']' .

    $default  reduce using rule 355 (combined_scalar)


state 313

  440 possible_comma: ',' .
  506 non_empty_array_pair_list: non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list ',' . expr
  510                          | non_empty_array_pair_list ',' . expr "=> (T_DOUBLE_ARROW)" '&' w_variable
  511                          | non_empty_array_pair_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 468
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 440 (possible_comma)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 469
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 314

  505 array_pair_list: non_empty_array_pair_list possible_comma .

    $default  reduce using rule 505 (array_pair_list)


state 315

  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 470


state 316

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 382 (class_name)


state 317

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 471
    reference_variable         go to state 410
    compound_variable          go to state 117
    simple_indirect_reference  go to state 412


state 318

  261 new_expr: "new (T_NEW)" class_name_reference $@44 . ctor_arguments

    '('  shift, and go to state 395

    $default  reduce using rule 401 (ctor_arguments)

    function_call_parameter_list  go to state 472
    ctor_arguments                go to state 473


state 319

  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . variable_without_objects

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 474
    reference_variable         go to state 410
    compound_variable          go to state 117
    simple_indirect_reference  go to state 412


state 320

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" . $@66 object_property $@67 dynamic_class_name_variable_properties

    $default  reduce using rule 388 ($@66)

    $@66  go to state 475


state 321

  479 base_variable: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    $default  reduce using rule 479 (base_variable)


state 322

  396 exit_expr: '(' ')' .

    $default  reduce using rule 396 (exit_expr)


state 323

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' . $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 39 ($@7)

    $@7  go to state 476


state 324

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 . statement $@6 elseif_list else_single

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 477
    unticked_statement                 go to state 88
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 325

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  487 dim_offset: expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 487 (dim_offset)


state 326

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset . ']'

    ']'  shift, and go to state 478


state 327

  242 echo_expr_list: echo_expr_list ',' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 479
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 328

   64 unticked_statement: "echo (T_ECHO)" echo_expr_list ';' .

    $default  reduce using rule 64 (unticked_statement)


state 329

   47 unticked_statement: "do (T_DO)" $@11 statement . "while (T_WHILE)" $@12 parenthesis_expr ';'

    "while (T_WHILE)"  shift, and go to state 480


state 330

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr . @10 while_statement

    $default  reduce using rule 43 (@10)

    @10  go to state 481


state 331

   51 unticked_statement: "for (T_FOR)" '(' for_expr . ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    ';'  shift, and go to state 482


state 332

  245 for_expr: non_empty_for_expr .
  247 non_empty_for_expr: non_empty_for_expr . ',' $@41 expr

    ','  shift, and go to state 483

    $default  reduce using rule 245 (for_expr)


state 333

  248 non_empty_for_expr: expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 248 (non_empty_for_expr)


state 334

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable . "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement
  446 expr: expr_without_variable .

    "as (T_AS)"  shift, and go to state 484

    $default  reduce using rule 446 (expr)


state 335

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable . "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292
    "as (T_AS)"            shift, and go to state 485

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


state 336

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' . declare_list ')' declare_statement

    "identifier (T_STRING)"  shift, and go to state 486

    declare_list  go to state 487


state 337

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 . switch_case_list

    ':'  shift, and go to state 488
    '{'  shift, and go to state 489

    switch_case_list  go to state 490


state 338

   55 unticked_statement: "break (T_BREAK)" expr ';' .

    $default  reduce using rule 55 (unticked_statement)


state 339

   57 unticked_statement: "continue (T_CONTINUE)" expr ';' .

    $default  reduce using rule 57 (unticked_statement)


state 340

   81 unticked_statement: "goto (T_GOTO)" "identifier (T_STRING)" ';' .

    $default  reduce using rule 81 (unticked_statement)


state 341

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 503
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 342

   59 unticked_statement: "return (T_RETURN)" expr_without_variable ';' .

    $default  reduce using rule 59 (unticked_statement)


state 343

   60 unticked_statement: "return (T_RETURN)" variable ';' .

    $default  reduce using rule 60 (unticked_statement)


state 344

   79 unticked_statement: "try (T_TRY)" $@22 '{' . inner_statement_list '}' catch_statement $@23 finally_statement

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 506


state 345

   80 unticked_statement: "throw (T_THROW)" expr ';' .

    $default  reduce using rule 80 (unticked_statement)


state 346

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
   22 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name .
   23                | "\\ (T_NS_SEPARATOR)" namespace_name . "as (T_AS)" "identifier (T_STRING)"

    "as (T_AS)"            shift, and go to state 507
    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 22 (use_declaration)


state 347

   21 use_declaration: namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 508


state 348

   18 use_declarations: use_declarations ',' . use_declaration

    "identifier (T_STRING)"  shift, and go to state 123
    "\\ (T_NS_SEPARATOR)"    shift, and go to state 199

    namespace_name   go to state 200
    use_declaration  go to state 509


state 349

   16 top_statement: "use (T_USE)" use_declarations ';' .

    $default  reduce using rule 16 (top_statement)


state 350

  188 global_var: '$' '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 510
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 351

  187 global_var: '$' r_variable .

    $default  reduce using rule 187 (global_var)


state 352

  449 r_variable: variable .

    $default  reduce using rule 449 (r_variable)


state 353

  184 global_var_list: global_var_list ',' . global_var

    "variable (T_VARIABLE)"  shift, and go to state 203
    '$'                      shift, and go to state 204

    global_var  go to state 511


state 354

   62 unticked_statement: "global (T_GLOBAL)" global_var_list ';' .

    $default  reduce using rule 62 (unticked_statement)


state 355

  192 static_var_list: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 512
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 356

  189 static_var_list: static_var_list ',' . "variable (T_VARIABLE)"
  190                | static_var_list ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 513


state 357

   63 unticked_statement: "static (T_STATIC)" static_var_list ';' .

    $default  reduce using rule 63 (unticked_statement)


state 358

  346 expr_without_variable: "static (T_STATIC)" function is_reference . @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    $default  reduce using rule 345 (@57)

    @57  go to state 514


state 359

   67 unticked_statement: "unset (T_UNSET)" '(' unset_variables . ')' ';'
   99 unset_variables: unset_variables . ',' unset_variable

    ','  shift, and go to state 515
    ')'  shift, and go to state 516


state 360

   98 unset_variables: unset_variable .

    $default  reduce using rule 98 (unset_variables)


state 361

  100 unset_variable: variable .

    $default  reduce using rule 100 (unset_variable)


state 362

  446 expr: expr_without_variable .
  540 isset_variable: expr_without_variable .

    ','       reduce using rule 540 (isset_variable)
    ')'       reduce using rule 540 (isset_variable)
    $default  reduce using rule 446 (expr)


state 363

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .
  539 isset_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292

    ','           reduce using rule 539 (isset_variable)
    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 539 (isset_variable)
    $default      reduce using rule 449 (r_variable)


state 364

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables . ')'
  538 isset_variables: isset_variables . ',' $@76 isset_variable

    ','  shift, and go to state 517
    ')'  shift, and go to state 518


state 365

  536 isset_variables: isset_variable .

    $default  reduce using rule 536 (isset_variables)


state 366

  446 expr: expr_without_variable .
  530 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr_without_variable . ')'

    ')'  shift, and go to state 519

    $default  reduce using rule 446 (expr)


state 367

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .
  529 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable . ')'

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292
    ')'                    shift, and go to state 520

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    $default      reduce using rule 449 (r_variable)


state 368

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 521


state 369

  263 expr_without_variable: "list (T_LIST)" '(' $@45 . assignment_list ')' '=' expr

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 522
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    $default  reduce using rule 503 (assignment_list_element)

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 523
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    assignment_list                    go to state 524
    assignment_list_element            go to state 525


state 370

  354 combined_scalar: "array (T_ARRAY)" '(' array_pair_list . ')'

    ')'  shift, and go to state 526


state 371

  520 encaps_var: "variable (T_VARIABLE)" '[' . $@75 encaps_var_offset ']'

    $default  reduce using rule 519 ($@75)

    $@75  go to state 527


state 372

  521 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 528


state 373

  413 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 413 (common_scalar)


state 374

  517 encaps_list: "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" encaps_var .

    $default  reduce using rule 517 (encaps_list)


state 375

  427 scalar: "variable name (T_STRING_VARNAME)" .
  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" . '[' expr ']' '}'

    '['  shift, and go to state 529

    $default  reduce using rule 427 (scalar)


state 376

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  522 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    '}'                           shift, and go to state 530


state 377

  524 encaps_var: "{$ (T_CURLY_OPEN)" variable . '}'

    '}'  shift, and go to state 531


state 378

  515 encaps_list: encaps_list "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" .

    $default  reduce using rule 515 (encaps_list)


state 379

  435 scalar: "heredoc start (T_START_HEREDOC)" encaps_list "heredoc end (T_END_HEREDOC)" .

    $default  reduce using rule 435 (scalar)


state 380

  514 encaps_list: encaps_list encaps_var .

    $default  reduce using rule 514 (encaps_list)


state 381

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  431 scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 381 (class_name)
    '('                            reduce using rule 365 (@59)
    $default                       reduce using rule 431 (scalar)

    @59  go to state 532


state 382

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 . top_statement_list '}'

    $default  reduce using rule 4 (top_statement_list)

    top_statement_list  go to state 533


state 383

   11 top_statement: "namespace (T_NAMESPACE)" namespace_name ';' .

    $default  reduce using rule 11 (top_statement)


state 384

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' . $@2 top_statement_list '}'

    $default  reduce using rule 12 ($@2)

    $@2  go to state 534


state 385

  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @60 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 535


state 386

  320 expr_without_variable: '(' new_expr ')' . @51 instance_call

    $default  reduce using rule 319 (@51)

    @51  go to state 536


state 387

  448 parenthesis_expr: '(' yield_expr ')' .

    $default  reduce using rule 448 (parenthesis_expr)


state 388

  447 parenthesis_expr: '(' expr ')' .

    $default  reduce using rule 447 (parenthesis_expr)


state 389

   35 unticked_statement: '{' inner_statement_list '}' .

    $default  reduce using rule 35 (unticked_statement)


state 390

   27 inner_statement_list: inner_statement_list $@4 . inner_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "final (T_FINAL)"                             shift, and go to state 55
    "abstract (T_ABSTRACT)"                       shift, and go to state 56
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "__halt_compiler (T_HALT_COMPILER)"           shift, and go to state 537
    "class (T_CLASS)"                             shift, and go to state 62
    "trait (T_TRAIT)"                             shift, and go to state 63
    "interface (T_INTERFACE)"                     shift, and go to state 64
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                           go to state 84
    inner_statement                          go to state 538
    statement                                go to state 539
    unticked_statement                       go to state 88
    function_declaration_statement           go to state 540
    class_declaration_statement              go to state 541
    unticked_function_declaration_statement  go to state 91
    unticked_class_declaration_statement     go to state 92
    class_entry_type                         go to state 93
    interface_entry                          go to state 94
    new_expr                                 go to state 95
    expr_without_variable                    go to state 96
    yield_expr                               go to state 97
    combined_scalar_offset                   go to state 98
    combined_scalar                          go to state 99
    function                                 go to state 100
    function_call                            go to state 101
    class_name                               go to state 102
    common_scalar                            go to state 103
    scalar                                   go to state 104
    expr                                     go to state 105
    parenthesis_expr                         go to state 106
    r_variable                               go to state 107
    rw_variable                              go to state 108
    variable                                 go to state 109
    variable_without_objects                 go to state 110
    static_member                            go to state 111
    variable_class_name                      go to state 112
    array_function_dereference               go to state 113
    base_variable_with_function_calls        go to state 114
    base_variable                            go to state 115
    reference_variable                       go to state 116
    compound_variable                        go to state 117
    simple_indirect_reference                go to state 118
    internal_functions_in_yacc               go to state 119
    class_constant                           go to state 120
    class_name_scalar                        go to state 121


state 391

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  485 compound_variable: '$' '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    '}'                           shift, and go to state 542


state 392

  340 expr_without_variable: '`' backticks_expr '`' .

    $default  reduce using rule 340 (expr_without_variable)


state 393

  434 scalar: '"' encaps_list '"' .

    $default  reduce using rule 434 (scalar)


state 394

    6 namespace_name: namespace_name "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 6 (namespace_name)


state 395

  175 function_call_parameter_list: '(' . ')'
  176                             | '(' . non_empty_function_call_parameter_list ')'
  177                             | '(' . yield_expr ')'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '&'                                           shift, and go to state 543
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ')'                                           shift, and go to state 544
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                          go to state 84
    non_empty_function_call_parameter_list  go to state 545
    new_expr                                go to state 95
    expr_without_variable                   go to state 546
    yield_expr                              go to state 547
    combined_scalar_offset                  go to state 98
    combined_scalar                         go to state 99
    function                                go to state 126
    function_call                           go to state 101
    class_name                              go to state 102
    common_scalar                           go to state 103
    scalar                                  go to state 104
    expr                                    go to state 195
    parenthesis_expr                        go to state 106
    r_variable                              go to state 107
    rw_variable                             go to state 108
    variable                                go to state 548
    variable_without_objects                go to state 110
    static_member                           go to state 111
    variable_class_name                     go to state 112
    array_function_dereference              go to state 113
    base_variable_with_function_calls       go to state 114
    base_variable                           go to state 115
    reference_variable                      go to state 116
    compound_variable                       go to state 117
    simple_indirect_reference               go to state 118
    internal_functions_in_yacc              go to state 119
    class_constant                          go to state 120
    class_name_scalar                       go to state 121


state 396

  364 function_call: namespace_name @58 function_call_parameter_list .

    $default  reduce using rule 364 (function_call)


state 397

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 549


state 398

  116 extends_from: "extends (T_EXTENDS)" . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 553


state 399

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from . $@32 implements_list '{' class_statement_list '}'

    $default  reduce using rule 107 ($@32)

    $@32  go to state 554


state 400

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 . interface_extends_list '{' class_statement_list '}'

    "extends (T_EXTENDS)"  shift, and go to state 555

    $default  reduce using rule 118 (interface_extends_list)

    interface_extends_list  go to state 556


state 401

  352 combined_scalar_offset: combined_scalar_offset '[' dim_offset . ']'

    ']'  shift, and go to state 557


state 402

  351 combined_scalar_offset: combined_scalar '[' dim_offset . ']'

    ']'  shift, and go to state 558


state 403

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" . $@31 '(' parameter_list ')' '{' inner_statement_list '}'

    $default  reduce using rule 105 ($@31)

    $@31  go to state 559


state 404

  344 expr_without_variable: function is_reference @56 . '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  shift, and go to state 560


state 405

  474 array_function_dereference: function_call $@72 '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 561
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 406

  494 variable_name: "identifier (T_STRING)" .
  541 class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       reduce using rule 494 (variable_name)
    $default  reduce using rule 541 (class_constant)


state 407

  544 class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)" .

    $default  reduce using rule 544 (class_name_scalar)


state 408

  495 variable_name: '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 562
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 409

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . $@62 function_call_parameter_list
  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('       reduce using rule 371 ($@62)
    $default  reduce using rule 469 (static_member)

    $@62  go to state 563


state 410

  467 variable_without_objects: reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    $default  reduce using rule 467 (variable_without_objects)


state 411

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . @61 function_call_parameter_list

    $default  reduce using rule 369 (@61)

    @61  go to state 564


state 412

  468 variable_without_objects: simple_indirect_reference . reference_variable
  497 simple_indirect_reference: simple_indirect_reference . '$'

    "variable (T_VARIABLE)"  shift, and go to state 35
    '$'                      shift, and go to state 299

    reference_variable  go to state 565
    compound_variable   go to state 117


state 413

  289 expr_without_variable: expr "or (T_LOGICAL_OR)" $@49 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 566
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 414

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  292                      | expr "xor (T_LOGICAL_XOR)" expr .
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 292 (expr_without_variable)


state 415

  291 expr_without_variable: expr "and (T_LOGICAL_AND)" $@50 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 567
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 416

  325 expr_without_variable: expr '?' ':' . $@54 expr

    $default  reduce using rule 324 ($@54)

    $@54  go to state 568


state 417

  323 expr_without_variable: expr '?' $@52 . expr ':' $@53 expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 569
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 418

  285 expr_without_variable: expr "|| (T_BOOLEAN_OR)" $@47 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 570
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 419

  287 expr_without_variable: expr "&& (T_BOOLEAN_AND)" $@48 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 571
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 420

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  293                      | expr '|' expr .
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 293 (expr_without_variable)


state 421

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  295                      | expr '^' expr .
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 295 (expr_without_variable)


state 422

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  294                      | expr '&' expr .
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 294 (expr_without_variable)


state 423

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  309                      | expr "!== (T_IS_NOT_IDENTICAL)" expr .
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 309 (expr_without_variable)


state 424

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  308                      | expr "=== (T_IS_IDENTICAL)" expr .
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 308 (expr_without_variable)


state 425

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  311                      | expr "!= (T_IS_NOT_EQUAL)" expr .
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 311 (expr_without_variable)


state 426

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  310                      | expr "== (T_IS_EQUAL)" expr .
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    "!== (T_IS_NOT_IDENTICAL)"  error (nonassociative)
    "=== (T_IS_IDENTICAL)"      error (nonassociative)
    "!= (T_IS_NOT_EQUAL)"       error (nonassociative)
    "== (T_IS_EQUAL)"           error (nonassociative)

    $default  reduce using rule 310 (expr_without_variable)


state 427

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  312                      | expr '<' expr .
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  shift, and go to state 269
    "<< (T_SL)"                  shift, and go to state 270
    '+'                          shift, and go to state 271
    '-'                          shift, and go to state 272
    '.'                          shift, and go to state 273
    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 312 (expr_without_variable)


state 428

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  314                      | expr '>' expr .
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  shift, and go to state 269
    "<< (T_SL)"                  shift, and go to state 270
    '+'                          shift, and go to state 271
    '-'                          shift, and go to state 272
    '.'                          shift, and go to state 273
    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 314 (expr_without_variable)


state 429

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  315                      | expr ">= (T_IS_GREATER_OR_EQUAL)" expr .
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  shift, and go to state 269
    "<< (T_SL)"                  shift, and go to state 270
    '+'                          shift, and go to state 271
    '-'                          shift, and go to state 272
    '.'                          shift, and go to state 273
    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 315 (expr_without_variable)


state 430

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  313                      | expr "<= (T_IS_SMALLER_OR_EQUAL)" expr .
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    ">> (T_SR)"                  shift, and go to state 269
    "<< (T_SL)"                  shift, and go to state 270
    '+'                          shift, and go to state 271
    '-'                          shift, and go to state 272
    '.'                          shift, and go to state 273
    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    '<'                           error (nonassociative)
    '>'                           error (nonassociative)
    ">= (T_IS_GREATER_OR_EQUAL)"  error (nonassociative)
    "<= (T_IS_SMALLER_OR_EQUAL)"  error (nonassociative)

    $default  reduce using rule 313 (expr_without_variable)


state 431

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  303                      | expr ">> (T_SR)" expr .
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '+'                          shift, and go to state 271
    '-'                          shift, and go to state 272
    '.'                          shift, and go to state 273
    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 303 (expr_without_variable)


state 432

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  302                      | expr "<< (T_SL)" expr .
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '+'                          shift, and go to state 271
    '-'                          shift, and go to state 272
    '.'                          shift, and go to state 273
    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 302 (expr_without_variable)


state 433

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  297                      | expr '+' expr .
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 297 (expr_without_variable)


state 434

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  298                      | expr '-' expr .
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 298 (expr_without_variable)


state 435

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  296                      | expr '.' expr .
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '*'                          shift, and go to state 274
    '/'                          shift, and go to state 275
    '%'                          shift, and go to state 276
    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 296 (expr_without_variable)


state 436

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  299                      | expr '*' expr .
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 299 (expr_without_variable)


state 437

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  300                      | expr '/' expr .
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 300 (expr_without_variable)


state 438

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  301                      | expr '%' expr .
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "instanceof (T_INSTANCEOF)"  shift, and go to state 277

    $default  reduce using rule 301 (expr_without_variable)


state 439

  316 expr_without_variable: expr "instanceof (T_INSTANCEOF)" class_name_reference .

    $default  reduce using rule 316 (expr_without_variable)


state 440

  265 expr_without_variable: variable '=' '&' . variable
  267                      | variable '=' '&' . "new (T_NEW)" class_name_reference $@46 ctor_arguments

    "new (T_NEW)"              shift, and go to state 572
    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 573
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 441

  264 expr_without_variable: variable '=' expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 264 (expr_without_variable)


state 442

  279 expr_without_variable: variable ">>= (T_SR_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 279 (expr_without_variable)


state 443

  278 expr_without_variable: variable "<<= (T_SL_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 278 (expr_without_variable)


state 444

  277 expr_without_variable: variable "^= (T_XOR_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 277 (expr_without_variable)


state 445

  276 expr_without_variable: variable "|= (T_OR_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 276 (expr_without_variable)


state 446

  275 expr_without_variable: variable "&= (T_AND_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 275 (expr_without_variable)


state 447

  274 expr_without_variable: variable "%= (T_MOD_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 274 (expr_without_variable)


state 448

  273 expr_without_variable: variable ".= (T_CONCAT_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 273 (expr_without_variable)


state 449

  272 expr_without_variable: variable "/= (T_DIV_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 272 (expr_without_variable)


state 450

  271 expr_without_variable: variable "*= (T_MUL_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 271 (expr_without_variable)


state 451

  270 expr_without_variable: variable "-= (T_MINUS_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 270 (expr_without_variable)


state 452

  269 expr_without_variable: variable "+= (T_PLUS_EQUAL)" expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 269 (expr_without_variable)


state 453

  378 function_call: variable_without_objects $@65 function_call_parameter_list .

    $default  reduce using rule 378 (function_call)


state 454

  494 variable_name: "identifier (T_STRING)" .
  542 class_constant: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    '('       reduce using rule 494 (variable_name)
    $default  reduce using rule 542 (class_constant)


state 455

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects . $@64 function_call_parameter_list
  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    '('       reduce using rule 375 ($@64)
    $default  reduce using rule 470 (static_member)

    $@64  go to state 574


state 456

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name . $@63 function_call_parameter_list

    $default  reduce using rule 373 ($@63)

    $@63  go to state 575


state 457

  472 array_function_dereference: array_function_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 576


state 458

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 . object_property $@69 method_or_not variable_properties

    "identifier (T_STRING)"  shift, and go to state 465
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 577
    reference_variable         go to state 410
    compound_variable          go to state 117
    object_property            go to state 578
    object_dim_list            go to state 579
    variable_name              go to state 580
    simple_indirect_reference  go to state 412


state 459

  481 reference_variable: reference_variable '[' dim_offset . ']'

    ']'  shift, and go to state 581


state 460

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  482 reference_variable: reference_variable '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    '}'                           shift, and go to state 582


state 461

  533 internal_functions_in_yacc: "eval (T_EVAL)" '(' expr ')' .

    $default  reduce using rule 533 (internal_functions_in_yacc)


state 462

  349 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" expr_without_variable .
  446 expr: expr_without_variable .

    ')'       reduce using rule 349 (yield_expr)
    ';'       reduce using rule 349 (yield_expr)
    $default  reduce using rule 446 (expr)


state 463

  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  350 yield_expr: "yield (T_YIELD)" expr "=> (T_DOUBLE_ARROW)" variable .
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292

    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 350 (yield_expr)
    ';'           reduce using rule 350 (yield_expr)
    $default      reduce using rule 449 (r_variable)


state 464

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name . @59 function_call_parameter_list
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 381 (class_name)
    $default                       reduce using rule 365 (@59)

    @59  go to state 532


state 465

  494 variable_name: "identifier (T_STRING)" .

    $default  reduce using rule 494 (variable_name)


state 466

  512 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    w_variable                         go to state 583
    variable                           go to state 310
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 467

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  508 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 508 (non_empty_array_pair_list)


state 468

  511 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    w_variable                         go to state 584
    variable                           go to state 310
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 469

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" expr
  507                          | non_empty_array_pair_list ',' expr .
  510                          | non_empty_array_pair_list ',' expr . "=> (T_DOUBLE_ARROW)" '&' w_variable

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    "=> (T_DOUBLE_ARROW)"         shift, and go to state 585

    $default  reduce using rule 507 (non_empty_array_pair_list)


state 470

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 381 (class_name)


state 471

  469 static_member: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $default  reduce using rule 469 (static_member)


state 472

  402 ctor_arguments: function_call_parameter_list .

    $default  reduce using rule 402 (ctor_arguments)


state 473

  261 new_expr: "new (T_NEW)" class_name_reference $@44 ctor_arguments .

    $default  reduce using rule 261 (new_expr)


state 474

  470 static_member: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects .

    $default  reduce using rule 470 (static_member)


state 475

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 . object_property $@67 dynamic_class_name_variable_properties

    "identifier (T_STRING)"  shift, and go to state 465
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 577
    reference_variable         go to state 410
    compound_variable          go to state 117
    object_property            go to state 586
    object_dim_list            go to state 579
    variable_name              go to state 580
    simple_indirect_reference  go to state 412


state 476

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 . inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 587


state 477

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement . $@6 elseif_list else_single

    $default  reduce using rule 37 ($@6)

    $@6  go to state 588


state 478

  353 combined_scalar_offset: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" '[' dim_offset ']' .

    $default  reduce using rule 353 (combined_scalar_offset)


state 479

  242 echo_expr_list: echo_expr_list ',' expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 242 (echo_expr_list)


state 480

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" . $@12 parenthesis_expr ';'

    $default  reduce using rule 46 ($@12)

    $@12  go to state 589


state 481

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 . while_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 590
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 591
    unticked_statement                 go to state 88
    while_statement                    go to state 592
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 482

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' . $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement

    $default  reduce using rule 48 ($@13)

    $@13  go to state 593


state 483

  247 non_empty_for_expr: non_empty_for_expr ',' . $@41 expr

    $default  reduce using rule 246 ($@41)

    $@41  go to state 594


state 484

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" . $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    $default  reduce using rule 71 ($@19)

    $@19  go to state 595


state 485

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" . $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement

    $default  reduce using rule 68 ($@17)

    $@17  go to state 596


state 486

  136 declare_list: "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 597


state 487

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list . ')' declare_statement
  137 declare_list: declare_list . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 598
    ')'  shift, and go to state 599


state 488

  140 switch_case_list: ':' . case_list "endswitch (T_ENDSWITCH)" ';'
  141                 | ':' . ';' case_list "endswitch (T_ENDSWITCH)" ';'

    ';'  shift, and go to state 600

    $default  reduce using rule 142 (case_list)

    case_list  go to state 601


state 489

  138 switch_case_list: '{' . case_list '}'
  139                 | '{' . ';' case_list '}'

    ';'  shift, and go to state 602

    $default  reduce using rule 142 (case_list)

    case_list  go to state 603


state 490

   53 unticked_statement: "switch (T_SWITCH)" parenthesis_expr $@16 switch_case_list .

    $default  reduce using rule 53 (unticked_statement)


state 491

  420 static_scalar: '+' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 604
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 492

  421 static_scalar: '-' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 605
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 493

  423 static_scalar: '[' . static_array_pair_list ']'

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    $default  reduce using rule 437 (static_array_pair_list)

    namespace_name                    go to state 500
    class_name                        go to state 501
    common_scalar                     go to state 502
    static_scalar                     go to state 606
    static_class_constant             go to state 504
    static_array_pair_list            go to state 607
    non_empty_static_array_pair_list  go to state 608
    static_class_name_scalar          go to state 505


state 494

  405 common_scalar: "quoted-string (T_CONSTANT_ENCAPSED_STRING)" .

    $default  reduce using rule 405 (common_scalar)


state 495

  422 static_scalar: "array (T_ARRAY)" . '(' static_array_pair_list ')'

    '('  shift, and go to state 609


state 496

  425 static_scalar: "__CLASS__ (T_CLASS_C)" .

    $default  reduce using rule 425 (static_scalar)


state 497

  413 common_scalar: "heredoc start (T_START_HEREDOC)" . "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" "heredoc end (T_END_HEREDOC)"
  414              | "heredoc start (T_START_HEREDOC)" . "heredoc end (T_END_HEREDOC)"

    "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)"  shift, and go to state 610
    "heredoc end (T_END_HEREDOC)"                               shift, and go to state 220


state 498

  381 class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name
  418 static_scalar: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 611


state 499

  382 class_name: "\\ (T_NS_SEPARATOR)" . namespace_name
  419 static_scalar: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 612


state 500

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  380 class_name: namespace_name .
  417 static_scalar: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 380 (class_name)
    $default                       reduce using rule 417 (static_scalar)


state 501

  426 static_class_constant: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"
  543 static_class_name_scalar: class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 613


state 502

  415 static_scalar: common_scalar .

    $default  reduce using rule 415 (static_scalar)


state 503

   25 constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 25 (constant_declaration)


state 504

  424 static_scalar: static_class_constant .

    $default  reduce using rule 424 (static_scalar)


state 505

  416 static_scalar: static_class_name_scalar .

    $default  reduce using rule 416 (static_scalar)


state 506

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list . '}' catch_statement $@23 finally_statement

    '}'  shift, and go to state 614

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 507

   23 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 615


state 508

   21 use_declaration: namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 21 (use_declaration)


state 509

   18 use_declarations: use_declarations ',' use_declaration .

    $default  reduce using rule 18 (use_declarations)


state 510

  188 global_var: '$' '{' expr . '}'
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    '}'                           shift, and go to state 616


state 511

  184 global_var_list: global_var_list ',' global_var .

    $default  reduce using rule 184 (global_var_list)


state 512

  192 static_var_list: "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 192 (static_var_list)


state 513

  189 static_var_list: static_var_list ',' "variable (T_VARIABLE)" .
  190                | static_var_list ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 617

    $default  reduce using rule 189 (static_var_list)


state 514

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 . '(' parameter_list ')' lexical_vars '{' inner_statement_list '}'

    '('  shift, and go to state 618


state 515

   99 unset_variables: unset_variables ',' . unset_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    unset_variable                     go to state 619
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 361
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 516

   67 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' . ';'

    ';'  shift, and go to state 620


state 517

  538 isset_variables: isset_variables ',' . $@76 isset_variable

    $default  reduce using rule 537 ($@76)

    $@76  go to state 621


state 518

  528 internal_functions_in_yacc: "isset (T_ISSET)" '(' isset_variables ')' .

    $default  reduce using rule 528 (internal_functions_in_yacc)


state 519

  530 internal_functions_in_yacc: "empty (T_EMPTY)" '(' expr_without_variable ')' .

    $default  reduce using rule 530 (internal_functions_in_yacc)


state 520

  529 internal_functions_in_yacc: "empty (T_EMPTY)" '(' variable ')' .

    $default  reduce using rule 529 (internal_functions_in_yacc)


state 521

   10 top_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 10 (top_statement)


state 522

  502 assignment_list_element: "list (T_LIST)" . '(' $@74 assignment_list ')'

    '('  shift, and go to state 622


state 523

  500 assignment_list_element: variable .

    $default  reduce using rule 500 (assignment_list_element)


state 524

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list . ')' '=' expr
  498 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 623
    ')'  shift, and go to state 624


state 525

  499 assignment_list: assignment_list_element .

    $default  reduce using rule 499 (assignment_list)


state 526

  354 combined_scalar: "array (T_ARRAY)" '(' array_pair_list ')' .

    $default  reduce using rule 354 (combined_scalar)


state 527

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 . encaps_var_offset ']'

    "identifier (T_STRING)"  shift, and go to state 625
    "variable (T_VARIABLE)"  shift, and go to state 626
    "number (T_NUM_STRING)"  shift, and go to state 627

    encaps_var_offset  go to state 628


state 528

  521 encaps_var: "variable (T_VARIABLE)" "-> (T_OBJECT_OPERATOR)" "identifier (T_STRING)" .

    $default  reduce using rule 521 (encaps_var)


state 529

  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' . expr ']' '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 629
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 530

  522 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" expr '}' .

    $default  reduce using rule 522 (encaps_var)


state 531

  524 encaps_var: "{$ (T_CURLY_OPEN)" variable '}' .

    $default  reduce using rule 524 (encaps_var)


state 532

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @59 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 630


state 533

    3 top_statement_list: top_statement_list . $@1 top_statement
   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list . '}'

    '}'  shift, and go to state 631

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


state 534

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 . top_statement_list '}'

    $default  reduce using rule 4 (top_statement_list)

    top_statement_list  go to state 632


state 535

  368 function_call: "\\ (T_NS_SEPARATOR)" namespace_name @60 function_call_parameter_list .

    $default  reduce using rule 368 (function_call)


state 536

  320 expr_without_variable: '(' new_expr ')' @51 . instance_call

    '['                       reduce using rule 258 ($@43)
    "-> (T_OBJECT_OPERATOR)"  reduce using rule 258 ($@43)
    $default                  reduce using rule 257 (instance_call)

    instance_call  go to state 633
    $@43           go to state 634


state 537

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" . '(' ')' ';'

    '('  shift, and go to state 635


state 538

   27 inner_statement_list: inner_statement_list $@4 inner_statement .

    $default  reduce using rule 27 (inner_statement_list)


state 539

   29 inner_statement: statement .

    $default  reduce using rule 29 (inner_statement)


state 540

   30 inner_statement: function_declaration_statement .

    $default  reduce using rule 30 (inner_statement)


state 541

   31 inner_statement: class_declaration_statement .

    $default  reduce using rule 31 (inner_statement)


state 542

  485 compound_variable: '$' '{' expr '}' .

    $default  reduce using rule 485 (compound_variable)


state 543

  180 non_empty_function_call_parameter_list: '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    w_variable                         go to state 636
    variable                           go to state 310
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 544

  175 function_call_parameter_list: '(' ')' .

    $default  reduce using rule 175 (function_call_parameter_list)


state 545

  176 function_call_parameter_list: '(' non_empty_function_call_parameter_list . ')'
  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list . ',' expr_without_variable
  182                                       | non_empty_function_call_parameter_list . ',' variable
  183                                       | non_empty_function_call_parameter_list . ',' '&' w_variable

    ','  shift, and go to state 637
    ')'  shift, and go to state 638


state 546

  178 non_empty_function_call_parameter_list: expr_without_variable .
  446 expr: expr_without_variable .

    ','       reduce using rule 178 (non_empty_function_call_parameter_list)
    ')'       reduce using rule 178 (non_empty_function_call_parameter_list)
    $default  reduce using rule 446 (expr)


state 547

  177 function_call_parameter_list: '(' yield_expr . ')'

    ')'  shift, and go to state 639


state 548

  179 non_empty_function_call_parameter_list: variable .
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292

    ','           reduce using rule 179 (non_empty_function_call_parameter_list)
    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 179 (non_empty_function_call_parameter_list)
    $default      reduce using rule 449 (r_variable)


state 549

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 640
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 550

  384 fully_qualified_class_name: "namespace (T_NAMESPACE)" . "\\ (T_NS_SEPARATOR)" namespace_name

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 641


state 551

  385 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 642


state 552

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  383 fully_qualified_class_name: namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 383 (fully_qualified_class_name)


state 553

  116 extends_from: "extends (T_EXTENDS)" fully_qualified_class_name .

    $default  reduce using rule 116 (extends_from)


state 554

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 . implements_list '{' class_statement_list '}'

    "implements (T_IMPLEMENTS)"  shift, and go to state 643

    $default  reduce using rule 120 (implements_list)

    implements_list  go to state 644


state 555

  119 interface_extends_list: "extends (T_EXTENDS)" . interface_list

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    interface_list              go to state 645
    fully_qualified_class_name  go to state 646


state 556

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list . '{' class_statement_list '}'

    '{'  shift, and go to state 647


state 557

  352 combined_scalar_offset: combined_scalar_offset '[' dim_offset ']' .

    $default  reduce using rule 352 (combined_scalar_offset)


state 558

  351 combined_scalar_offset: combined_scalar '[' dim_offset ']' .

    $default  reduce using rule 351 (combined_scalar_offset)


state 559

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 . '(' parameter_list ')' '{' inner_statement_list '}'

    '('  shift, and go to state 648


state 560

  344 expr_without_variable: function is_reference @56 '(' . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 123
    "array (T_ARRAY)"          shift, and go to state 649
    "callable (T_CALLABLE)"    shift, and go to state 650
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 651
    non_empty_parameter_list    go to state 652
    optional_class_type         go to state 653
    fully_qualified_class_name  go to state 654


state 561

  474 array_function_dereference: function_call $@72 '[' dim_offset . ']'

    ']'  shift, and go to state 655


state 562

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  495 variable_name: '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    '}'                           shift, and go to state 656


state 563

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 657


state 564

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 658


state 565

  468 variable_without_objects: simple_indirect_reference reference_variable .
  481 reference_variable: reference_variable . '[' dim_offset ']'
  482                   | reference_variable . '{' expr '}'

    '['  shift, and go to state 297
    '{'  shift, and go to state 298

    $default  reduce using rule 468 (variable_without_objects)


state 566

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  289                      | expr "or (T_LOGICAL_OR)" $@49 expr .
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 289 (expr_without_variable)


state 567

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  291                      | expr "and (T_LOGICAL_AND)" $@50 expr .
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 291 (expr_without_variable)


state 568

  325 expr_without_variable: expr '?' ':' $@54 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 659
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 569

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  323                      | expr '?' $@52 expr . ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    ':'                           shift, and go to state 660
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277


state 570

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  285                      | expr "|| (T_BOOLEAN_OR)" $@47 expr .
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 285 (expr_without_variable)


state 571

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  287                      | expr "&& (T_BOOLEAN_AND)" $@48 expr .
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 287 (expr_without_variable)


state 572

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" . class_name_reference $@46 ctor_arguments

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 162
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 163
    '$'                        shift, and go to state 81

    namespace_name                go to state 164
    class_name                    go to state 165
    class_name_reference          go to state 661
    dynamic_class_name_reference  go to state 167
    static_member                 go to state 111
    variable_class_name           go to state 168
    base_variable                 go to state 169
    reference_variable            go to state 170
    compound_variable             go to state 117
    simple_indirect_reference     go to state 171


state 573

  265 expr_without_variable: variable '=' '&' variable .

    $default  reduce using rule 265 (expr_without_variable)


state 574

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 662


state 575

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 663


state 576

  472 array_function_dereference: array_function_dereference '[' dim_offset ']' .

    $default  reduce using rule 472 (array_function_dereference)


state 577

  490 object_property: variable_without_objects . $@73

    $default  reduce using rule 489 ($@73)

    $@73  go to state 664


state 578

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property . $@69 method_or_not variable_properties

    $default  reduce using rule 453 ($@69)

    $@69  go to state 665


state 579

  488 object_property: object_dim_list .
  491 object_dim_list: object_dim_list . '[' dim_offset ']'
  492                | object_dim_list . '{' expr '}'

    '['  shift, and go to state 666
    '{'  shift, and go to state 667

    $default  reduce using rule 488 (object_property)


state 580

  493 object_dim_list: variable_name .

    $default  reduce using rule 493 (object_dim_list)


state 581

  481 reference_variable: reference_variable '[' dim_offset ']' .

    $default  reduce using rule 481 (reference_variable)


state 582

  482 reference_variable: reference_variable '{' expr '}' .

    $default  reduce using rule 482 (reference_variable)


state 583

  512 non_empty_array_pair_list: expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $default  reduce using rule 512 (non_empty_array_pair_list)


state 584

  511 non_empty_array_pair_list: non_empty_array_pair_list ',' '&' w_variable .

    $default  reduce using rule 511 (non_empty_array_pair_list)


state 585

  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . expr
  510                          | non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 668
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 669
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 586

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property . $@67 dynamic_class_name_variable_properties

    $default  reduce using rule 389 ($@67)

    $@67  go to state 670


state 587

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list . $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    "elseif (T_ELSEIF)"  reduce using rule 40 ($@8)
    "else (T_ELSE)"      reduce using rule 40 ($@8)
    "endif (T_ENDIF)"    reduce using rule 40 ($@8)
    $default             reduce using rule 26 ($@4)

    $@4  go to state 390
    $@8  go to state 671


state 588

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 . elseif_list else_single

    $default  reduce using rule 151 (elseif_list)

    elseif_list  go to state 672


state 589

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 . parenthesis_expr ';'

    '('  shift, and go to state 175

    parenthesis_expr  go to state 673


state 590

  150 while_statement: ':' . inner_statement_list "endwhile (T_ENDWHILE)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 674


state 591

  149 while_statement: statement .

    $default  reduce using rule 149 (while_statement)


state 592

   44 unticked_statement: "while (T_WHILE)" $@9 parenthesis_expr @10 while_statement .

    $default  reduce using rule 44 (unticked_statement)


state 593

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 . for_expr ';' $@14 for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 244 (for_expr)

    namespace_name                     go to state 84
    for_expr                           go to state 675
    non_empty_for_expr                 go to state 332
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 333
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 594

  247 non_empty_for_expr: non_empty_for_expr ',' $@41 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 676
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 595

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 . foreach_variable foreach_optional_arg ')' $@20 foreach_statement

    '&'                        shift, and go to state 677
    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 678
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    foreach_variable                   go to state 679
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 680
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 596

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 . foreach_variable foreach_optional_arg ')' $@18 foreach_statement

    '&'                        shift, and go to state 677
    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 678
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    foreach_variable                   go to state 681
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 680
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 597

  136 declare_list: "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 682
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 598

  137 declare_list: declare_list ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 683


state 599

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' . declare_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 684
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 685
    unticked_statement                 go to state 88
    declare_statement                  go to state 686
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 600

  141 switch_case_list: ':' ';' . case_list "endswitch (T_ENDSWITCH)" ';'

    $default  reduce using rule 142 (case_list)

    case_list  go to state 687


state 601

  140 switch_case_list: ':' case_list . "endswitch (T_ENDSWITCH)" ';'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 688
    "case (T_CASE)"            shift, and go to state 689
    "default (T_DEFAULT)"      shift, and go to state 690


state 602

  139 switch_case_list: '{' ';' . case_list '}'

    $default  reduce using rule 142 (case_list)

    case_list  go to state 691


state 603

  138 switch_case_list: '{' case_list . '}'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "case (T_CASE)"        shift, and go to state 689
    "default (T_DEFAULT)"  shift, and go to state 690
    '}'                    shift, and go to state 692


state 604

  420 static_scalar: '+' static_scalar .

    $default  reduce using rule 420 (static_scalar)


state 605

  421 static_scalar: '-' static_scalar .

    $default  reduce using rule 421 (static_scalar)


state 606

  443 non_empty_static_array_pair_list: static_scalar . "=> (T_DOUBLE_ARROW)" static_scalar
  444                                 | static_scalar .

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 693

    $default  reduce using rule 444 (non_empty_static_array_pair_list)


state 607

  423 static_scalar: '[' static_array_pair_list . ']'

    ']'  shift, and go to state 694


state 608

  438 static_array_pair_list: non_empty_static_array_pair_list . possible_comma
  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list . ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list . ',' static_scalar

    ','  shift, and go to state 695

    $default  reduce using rule 439 (possible_comma)

    possible_comma  go to state 696


state 609

  422 static_scalar: "array (T_ARRAY)" '(' . static_array_pair_list ')'

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    $default  reduce using rule 437 (static_array_pair_list)

    namespace_name                    go to state 500
    class_name                        go to state 501
    common_scalar                     go to state 502
    static_scalar                     go to state 606
    static_class_constant             go to state 504
    static_array_pair_list            go to state 697
    non_empty_static_array_pair_list  go to state 608
    static_class_name_scalar          go to state 505


state 610

  413 common_scalar: "heredoc start (T_START_HEREDOC)" "quoted-string and whitespace (T_ENCAPSED_AND_WHITESPACE)" . "heredoc end (T_END_HEREDOC)"

    "heredoc end (T_END_HEREDOC)"  shift, and go to state 373


state 611

  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name
  418 static_scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 698


state 612

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  382 class_name: "\\ (T_NS_SEPARATOR)" namespace_name .
  419 static_scalar: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 382 (class_name)
    $default                       reduce using rule 419 (static_scalar)


state 613

  426 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"
  543 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "class (T_CLASS)"

    "identifier (T_STRING)"  shift, and go to state 699
    "class (T_CLASS)"        shift, and go to state 700


state 614

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' . catch_statement $@23 finally_statement

    "catch (T_CATCH)"  shift, and go to state 701

    $default  reduce using rule 82 (catch_statement)

    catch_statement  go to state 702


state 615

   23 use_declaration: "\\ (T_NS_SEPARATOR)" namespace_name "as (T_AS)" "identifier (T_STRING)" .

    $default  reduce using rule 23 (use_declaration)


state 616

  188 global_var: '$' '{' expr '}' .

    $default  reduce using rule 188 (global_var)


state 617

  190 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 703
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 618

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' . parameter_list ')' lexical_vars '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 123
    "array (T_ARRAY)"          shift, and go to state 649
    "callable (T_CALLABLE)"    shift, and go to state 650
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 704
    non_empty_parameter_list    go to state 652
    optional_class_type         go to state 653
    fully_qualified_class_name  go to state 654


state 619

   99 unset_variables: unset_variables ',' unset_variable .

    $default  reduce using rule 99 (unset_variables)


state 620

   67 unticked_statement: "unset (T_UNSET)" '(' unset_variables ')' ';' .

    $default  reduce using rule 67 (unticked_statement)


state 621

  538 isset_variables: isset_variables ',' $@76 . isset_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 362
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 363
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    isset_variable                     go to state 705
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 622

  502 assignment_list_element: "list (T_LIST)" '(' . $@74 assignment_list ')'

    $default  reduce using rule 501 ($@74)

    $@74  go to state 706


state 623

  498 assignment_list: assignment_list ',' . assignment_list_element

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 522
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    $default  reduce using rule 503 (assignment_list_element)

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 523
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    assignment_list_element            go to state 707


state 624

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' . '=' expr

    '='  shift, and go to state 708


state 625

  525 encaps_var_offset: "identifier (T_STRING)" .

    $default  reduce using rule 525 (encaps_var_offset)


state 626

  527 encaps_var_offset: "variable (T_VARIABLE)" .

    $default  reduce using rule 527 (encaps_var_offset)


state 627

  526 encaps_var_offset: "number (T_NUM_STRING)" .

    $default  reduce using rule 526 (encaps_var_offset)


state 628

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 encaps_var_offset . ']'

    ']'  shift, and go to state 709


state 629

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr . ']' '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ']'                           shift, and go to state 710


state 630

  366 function_call: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name @59 function_call_parameter_list .

    $default  reduce using rule 366 (function_call)


state 631

   15 top_statement: "namespace (T_NAMESPACE)" '{' $@3 top_statement_list '}' .

    $default  reduce using rule 15 (top_statement)


state 632

    3 top_statement_list: top_statement_list . $@1 top_statement
   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list . '}'

    '}'  shift, and go to state 711

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


state 633

  320 expr_without_variable: '(' new_expr ')' @51 instance_call .

    $default  reduce using rule 320 (expr_without_variable)


state 634

  259 instance_call: $@43 . chaining_instance_call

    '['                       shift, and go to state 712
    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 713

    chaining_method_or_property  go to state 714
    chaining_dereference         go to state 715
    chaining_instance_call       go to state 716
    variable_property            go to state 717


state 635

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' . ')' ';'

    ')'  shift, and go to state 718


state 636

  180 non_empty_function_call_parameter_list: '&' w_variable .

    $default  reduce using rule 180 (non_empty_function_call_parameter_list)


state 637

  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' . expr_without_variable
  182                                       | non_empty_function_call_parameter_list ',' . variable
  183                                       | non_empty_function_call_parameter_list ',' . '&' w_variable

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '&'                                           shift, and go to state 719
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 720
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 195
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 721
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 638

  176 function_call_parameter_list: '(' non_empty_function_call_parameter_list ')' .

    $default  reduce using rule 176 (function_call_parameter_list)


state 639

  177 function_call_parameter_list: '(' yield_expr ')' .

    $default  reduce using rule 177 (function_call_parameter_list)


state 640

   24 constant_declaration: constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 24 (constant_declaration)


state 641

  384 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" . namespace_name

    "identifier (T_STRING)"  shift, and go to state 123

    namespace_name  go to state 722


state 642

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  385 fully_qualified_class_name: "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 385 (fully_qualified_class_name)


state 643

  121 implements_list: "implements (T_IMPLEMENTS)" . interface_list

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    interface_list              go to state 723
    fully_qualified_class_name  go to state 646


state 644

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list . '{' class_statement_list '}'

    '{'  shift, and go to state 724


state 645

  119 interface_extends_list: "extends (T_EXTENDS)" interface_list .
  123 interface_list: interface_list . ',' fully_qualified_class_name

    ','  shift, and go to state 725

    $default  reduce using rule 119 (interface_extends_list)


state 646

  122 interface_list: fully_qualified_class_name .

    $default  reduce using rule 122 (interface_list)


state 647

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' . class_statement_list '}'

    $default  reduce using rule 194 (class_statement_list)

    class_statement_list  go to state 726


state 648

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' . parameter_list ')' '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 123
    "array (T_ARRAY)"          shift, and go to state 649
    "callable (T_CALLABLE)"    shift, and go to state 650
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 727
    non_empty_parameter_list    go to state 652
    optional_class_type         go to state 653
    fully_qualified_class_name  go to state 654


state 649

  172 optional_class_type: "array (T_ARRAY)" .

    $default  reduce using rule 172 (optional_class_type)


state 650

  173 optional_class_type: "callable (T_CALLABLE)" .

    $default  reduce using rule 173 (optional_class_type)


state 651

  344 expr_without_variable: function is_reference @56 '(' parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  shift, and go to state 728


state 652

  161 parameter_list: non_empty_parameter_list .
  167 non_empty_parameter_list: non_empty_parameter_list . ',' optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list . ',' optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list . ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list . ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 729

    $default  reduce using rule 161 (parameter_list)


state 653

  163 non_empty_parameter_list: optional_class_type . "variable (T_VARIABLE)"
  164                         | optional_class_type . '&' "variable (T_VARIABLE)"
  165                         | optional_class_type . '&' "variable (T_VARIABLE)" '=' static_scalar
  166                         | optional_class_type . "variable (T_VARIABLE)" '=' static_scalar

    '&'                      shift, and go to state 730
    "variable (T_VARIABLE)"  shift, and go to state 731


state 654

  174 optional_class_type: fully_qualified_class_name .

    $default  reduce using rule 174 (optional_class_type)


state 655

  474 array_function_dereference: function_call $@72 '[' dim_offset ']' .

    $default  reduce using rule 474 (array_function_dereference)


state 656

  495 variable_name: '{' expr '}' .

    $default  reduce using rule 495 (variable_name)


state 657

  372 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@62 function_call_parameter_list .

    $default  reduce using rule 372 (function_call)


state 658

  370 function_call: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name @61 function_call_parameter_list .

    $default  reduce using rule 370 (function_call)


state 659

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  325                      | expr '?' ':' $@54 expr .

    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 325 (expr_without_variable)


state 660

  323 expr_without_variable: expr '?' $@52 expr ':' . $@53 expr

    $default  reduce using rule 322 ($@53)

    $@53  go to state 732


state 661

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference . $@46 ctor_arguments

    $default  reduce using rule 266 ($@46)

    $@46  go to state 733


state 662

  376 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_without_objects $@64 function_call_parameter_list .

    $default  reduce using rule 376 (function_call)


state 663

  374 function_call: variable_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" variable_name $@63 function_call_parameter_list .

    $default  reduce using rule 374 (function_call)


state 664

  490 object_property: variable_without_objects $@73 .

    $default  reduce using rule 490 (object_property)


state 665

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 . method_or_not variable_properties

    '('       reduce using rule 462 (@71)
    $default  reduce using rule 466 (method_or_not)

    array_method_dereference  go to state 734
    method                    go to state 735
    @71                       go to state 736
    method_or_not             go to state 737


state 666

  491 object_dim_list: object_dim_list '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 738
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 667

  492 object_dim_list: object_dim_list '{' . expr '}'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 739
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 668

  510 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    w_variable                         go to state 740
    variable                           go to state 310
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 669

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  506 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" expr .

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 506 (non_empty_array_pair_list)


state 670

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 . dynamic_class_name_variable_properties

    $default  reduce using rule 393 (dynamic_class_name_variable_properties)

    dynamic_class_name_variable_properties  go to state 741


state 671

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 . new_elseif_list new_else_single "endif (T_ENDIF)" ';'

    $default  reduce using rule 154 (new_elseif_list)

    new_elseif_list  go to state 742


state 672

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list . else_single
  153 elseif_list: elseif_list . "elseif (T_ELSEIF)" parenthesis_expr $@37 statement

    "elseif (T_ELSEIF)"  shift, and go to state 743
    "else (T_ELSE)"      shift, and go to state 744

    "elseif (T_ELSEIF)"  [reduce using rule 157 (else_single)]
    "else (T_ELSE)"      [reduce using rule 157 (else_single)]
    $default             reduce using rule 157 (else_single)

    else_single  go to state 745


state 673

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr . ';'

    ';'  shift, and go to state 746


state 674

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  150 while_statement: ':' inner_statement_list . "endwhile (T_ENDWHILE)" ';'

    "endwhile (T_ENDWHILE)"  shift, and go to state 747

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 675

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr . ';' $@14 for_expr ')' $@15 for_statement

    ';'  shift, and go to state 748


state 676

  247 non_empty_for_expr: non_empty_for_expr ',' $@41 expr .
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 247 (non_empty_for_expr)


state 677

  127 foreach_variable: '&' . variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 749
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 678

  129 foreach_variable: "list (T_LIST)" . '(' $@34 assignment_list ')'

    '('  shift, and go to state 750


state 679

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable . foreach_optional_arg ')' $@20 foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 751

    $default  reduce using rule 124 (foreach_optional_arg)

    foreach_optional_arg  go to state 752


state 680

  126 foreach_variable: variable .

    $default  reduce using rule 126 (foreach_variable)


state 681

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable . foreach_optional_arg ')' $@18 foreach_statement

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 751

    $default  reduce using rule 124 (foreach_optional_arg)

    foreach_optional_arg  go to state 753


state 682

  136 declare_list: "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 136 (declare_list)


state 683

  137 declare_list: declare_list ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 754


state 684

  135 declare_statement: ':' . inner_statement_list "enddeclare (T_ENDDECLARE)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 755


state 685

  134 declare_statement: statement .

    $default  reduce using rule 134 (declare_statement)


state 686

   75 unticked_statement: "declare (T_DECLARE)" $@21 '(' declare_list ')' declare_statement .

    $default  reduce using rule 75 (unticked_statement)


state 687

  141 switch_case_list: ':' ';' case_list . "endswitch (T_ENDSWITCH)" ';'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "endswitch (T_ENDSWITCH)"  shift, and go to state 756
    "case (T_CASE)"            shift, and go to state 689
    "default (T_DEFAULT)"      shift, and go to state 690


state 688

  140 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 757


state 689

  144 case_list: case_list "case (T_CASE)" . expr case_separator $@35 inner_statement_list

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 758
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 690

  146 case_list: case_list "default (T_DEFAULT)" . case_separator $@36 inner_statement_list

    ':'  shift, and go to state 759
    ';'  shift, and go to state 760

    case_separator  go to state 761


state 691

  139 switch_case_list: '{' ';' case_list . '}'
  144 case_list: case_list . "case (T_CASE)" expr case_separator $@35 inner_statement_list
  146          | case_list . "default (T_DEFAULT)" case_separator $@36 inner_statement_list

    "case (T_CASE)"        shift, and go to state 689
    "default (T_DEFAULT)"  shift, and go to state 690
    '}'                    shift, and go to state 762


state 692

  138 switch_case_list: '{' case_list '}' .

    $default  reduce using rule 138 (switch_case_list)


state 693

  443 non_empty_static_array_pair_list: static_scalar "=> (T_DOUBLE_ARROW)" . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 763
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 694

  423 static_scalar: '[' static_array_pair_list ']' .

    $default  reduce using rule 423 (static_scalar)


state 695

  440 possible_comma: ',' .
  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' . static_scalar "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list ',' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    $default  reduce using rule 440 (possible_comma)

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 764
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 696

  438 static_array_pair_list: non_empty_static_array_pair_list possible_comma .

    $default  reduce using rule 438 (static_array_pair_list)


state 697

  422 static_scalar: "array (T_ARRAY)" '(' static_array_pair_list . ')'

    ')'  shift, and go to state 765


state 698

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  381 class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .
  418 static_scalar: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  reduce using rule 381 (class_name)
    $default                       reduce using rule 418 (static_scalar)


state 699

  426 static_class_constant: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 426 (static_class_constant)


state 700

  543 static_class_name_scalar: class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "class (T_CLASS)" .

    $default  reduce using rule 543 (static_class_name_scalar)


state 701

   87 catch_statement: "catch (T_CATCH)" . '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    '('  shift, and go to state 766


state 702

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement . $@23 finally_statement

    $default  reduce using rule 78 ($@23)

    $@23  go to state 767


state 703

  190 static_var_list: static_var_list ',' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 190 (static_var_list)


state 704

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list . ')' lexical_vars '{' inner_statement_list '}'

    ')'  shift, and go to state 768


state 705

  538 isset_variables: isset_variables ',' $@76 isset_variable .

    $default  reduce using rule 538 (isset_variables)


state 706

  502 assignment_list_element: "list (T_LIST)" '(' $@74 . assignment_list ')'

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 522
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    $default  reduce using rule 503 (assignment_list_element)

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 523
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    assignment_list                    go to state 769
    assignment_list_element            go to state 525


state 707

  498 assignment_list: assignment_list ',' assignment_list_element .

    $default  reduce using rule 498 (assignment_list)


state 708

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' '=' . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 770
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 709

  520 encaps_var: "variable (T_VARIABLE)" '[' $@75 encaps_var_offset ']' .

    $default  reduce using rule 520 (encaps_var)


state 710

  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' . '}'

    '}'  shift, and go to state 771


state 711

   13 top_statement: "namespace (T_NAMESPACE)" namespace_name '{' $@2 top_statement_list '}' .

    $default  reduce using rule 13 (top_statement)


state 712

  252 chaining_dereference: '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 772
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 713

  459 variable_property: "-> (T_OBJECT_OPERATOR)" . object_property $@70 method_or_not

    "identifier (T_STRING)"  shift, and go to state 465
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 577
    reference_variable         go to state 410
    compound_variable          go to state 117
    object_property            go to state 773
    object_dim_list            go to state 579
    variable_name              go to state 580
    simple_indirect_reference  go to state 412


state 714

  249 chaining_method_or_property: chaining_method_or_property . variable_property
  256 chaining_instance_call: chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 713

    $default  reduce using rule 256 (chaining_instance_call)

    variable_property  go to state 774


state 715

  251 chaining_dereference: chaining_dereference . '[' dim_offset ']'
  254 chaining_instance_call: chaining_dereference . $@42 chaining_method_or_property
  255                       | chaining_dereference .

    '['  shift, and go to state 775

    "-> (T_OBJECT_OPERATOR)"  reduce using rule 253 ($@42)
    $default                  reduce using rule 255 (chaining_instance_call)

    $@42  go to state 776


state 716

  259 instance_call: $@43 chaining_instance_call .

    $default  reduce using rule 259 (instance_call)


state 717

  250 chaining_method_or_property: variable_property .

    $default  reduce using rule 250 (chaining_method_or_property)


state 718

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' . ';'

    ';'  shift, and go to state 777


state 719

  183 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' . w_variable

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    w_variable                         go to state 778
    variable                           go to state 310
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 720

  181 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' expr_without_variable .
  446 expr: expr_without_variable .

    ','       reduce using rule 181 (non_empty_function_call_parameter_list)
    ')'       reduce using rule 181 (non_empty_function_call_parameter_list)
    $default  reduce using rule 446 (expr)


state 721

  182 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' variable .
  264 expr_without_variable: variable . '=' expr
  265                      | variable . '=' '&' variable
  267                      | variable . '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments
  269                      | variable . "+= (T_PLUS_EQUAL)" expr
  270                      | variable . "-= (T_MINUS_EQUAL)" expr
  271                      | variable . "*= (T_MUL_EQUAL)" expr
  272                      | variable . "/= (T_DIV_EQUAL)" expr
  273                      | variable . ".= (T_CONCAT_EQUAL)" expr
  274                      | variable . "%= (T_MOD_EQUAL)" expr
  275                      | variable . "&= (T_AND_EQUAL)" expr
  276                      | variable . "|= (T_OR_EQUAL)" expr
  277                      | variable . "^= (T_XOR_EQUAL)" expr
  278                      | variable . "<<= (T_SL_EQUAL)" expr
  279                      | variable . ">>= (T_SR_EQUAL)" expr
  449 r_variable: variable .
  451 rw_variable: variable .

    '='                    shift, and go to state 281
    ">>= (T_SR_EQUAL)"     shift, and go to state 282
    "<<= (T_SL_EQUAL)"     shift, and go to state 283
    "^= (T_XOR_EQUAL)"     shift, and go to state 284
    "|= (T_OR_EQUAL)"      shift, and go to state 285
    "&= (T_AND_EQUAL)"     shift, and go to state 286
    "%= (T_MOD_EQUAL)"     shift, and go to state 287
    ".= (T_CONCAT_EQUAL)"  shift, and go to state 288
    "/= (T_DIV_EQUAL)"     shift, and go to state 289
    "*= (T_MUL_EQUAL)"     shift, and go to state 290
    "-= (T_MINUS_EQUAL)"   shift, and go to state 291
    "+= (T_PLUS_EQUAL)"    shift, and go to state 292

    ','           reduce using rule 182 (non_empty_function_call_parameter_list)
    "-- (T_DEC)"  reduce using rule 451 (rw_variable)
    "++ (T_INC)"  reduce using rule 451 (rw_variable)
    ')'           reduce using rule 182 (non_empty_function_call_parameter_list)
    $default      reduce using rule 449 (r_variable)


state 722

    6 namespace_name: namespace_name . "\\ (T_NS_SEPARATOR)" "identifier (T_STRING)"
  384 fully_qualified_class_name: "namespace (T_NAMESPACE)" "\\ (T_NS_SEPARATOR)" namespace_name .

    "\\ (T_NS_SEPARATOR)"  shift, and go to state 239

    $default  reduce using rule 384 (fully_qualified_class_name)


state 723

  121 implements_list: "implements (T_IMPLEMENTS)" interface_list .
  123 interface_list: interface_list . ',' fully_qualified_class_name

    ','  shift, and go to state 725

    $default  reduce using rule 121 (implements_list)


state 724

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' . class_statement_list '}'

    $default  reduce using rule 194 (class_statement_list)

    class_statement_list  go to state 779


state 725

  123 interface_list: interface_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 780


state 726

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list . '}'
  193 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          shift, and go to state 781
    "use (T_USE)"              shift, and go to state 782
    "public (T_PUBLIC)"        shift, and go to state 783
    "protected (T_PROTECTED)"  shift, and go to state 784
    "private (T_PRIVATE)"      shift, and go to state 785
    "final (T_FINAL)"          shift, and go to state 786
    "abstract (T_ABSTRACT)"    shift, and go to state 787
    "static (T_STATIC)"        shift, and go to state 788
    "var (T_VAR)"              shift, and go to state 789
    '}'                        shift, and go to state 790

    $default  reduce using rule 226 (method_modifiers)

    class_statement             go to state 791
    trait_use_statement         go to state 792
    variable_modifiers          go to state 793
    method_modifiers            go to state 794
    non_empty_member_modifiers  go to state 795
    member_modifier             go to state 796
    class_constant_declaration  go to state 797


state 727

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list . ')' '{' inner_statement_list '}'

    ')'  shift, and go to state 798


state 728

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 799

    $default  reduce using rule 357 (lexical_vars)

    lexical_vars  go to state 800


state 729

  167 non_empty_parameter_list: non_empty_parameter_list ',' . optional_class_type "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' . optional_class_type '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' . optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' . optional_class_type "variable (T_VARIABLE)" '=' static_scalar

    "identifier (T_STRING)"    shift, and go to state 123
    "array (T_ARRAY)"          shift, and go to state 649
    "callable (T_CALLABLE)"    shift, and go to state 650
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    optional_class_type         go to state 801
    fully_qualified_class_name  go to state 654


state 730

  164 non_empty_parameter_list: optional_class_type '&' . "variable (T_VARIABLE)"
  165                         | optional_class_type '&' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 802


state 731

  163 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" .
  166                         | optional_class_type "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 803

    $default  reduce using rule 163 (non_empty_parameter_list)


state 732

  323 expr_without_variable: expr '?' $@52 expr ':' $@53 . expr

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 804
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 733

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@46 . ctor_arguments

    '('  shift, and go to state 395

    $default  reduce using rule 401 (ctor_arguments)

    function_call_parameter_list  go to state 472
    ctor_arguments                go to state 805


state 734

  460 array_method_dereference: array_method_dereference . '[' dim_offset ']'
  465 method_or_not: array_method_dereference .

    '['  shift, and go to state 806

    $default  reduce using rule 465 (method_or_not)


state 735

  461 array_method_dereference: method . '[' dim_offset ']'
  464 method_or_not: method .

    '['  shift, and go to state 807

    $default  reduce using rule 464 (method_or_not)


state 736

  463 method: @71 . function_call_parameter_list

    '('  shift, and go to state 395

    function_call_parameter_list  go to state 808


state 737

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not . variable_properties

    $default  reduce using rule 457 (variable_properties)

    variable_properties  go to state 809


state 738

  491 object_dim_list: object_dim_list '[' dim_offset . ']'

    ']'  shift, and go to state 810


state 739

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr
  492 object_dim_list: object_dim_list '{' expr . '}'

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    '}'                           shift, and go to state 811


state 740

  510 non_empty_array_pair_list: non_empty_array_pair_list ',' expr "=> (T_DOUBLE_ARROW)" '&' w_variable .

    $default  reduce using rule 510 (non_empty_array_pair_list)


state 741

  390 dynamic_class_name_reference: base_variable "-> (T_OBJECT_OPERATOR)" $@66 object_property $@67 dynamic_class_name_variable_properties .
  392 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties . dynamic_class_name_variable_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 812

    $default  reduce using rule 390 (dynamic_class_name_reference)

    dynamic_class_name_variable_property  go to state 813


state 742

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list . new_else_single "endif (T_ENDIF)" ';'
  156 new_elseif_list: new_elseif_list . "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 inner_statement_list

    "elseif (T_ELSEIF)"  shift, and go to state 814
    "else (T_ELSE)"      shift, and go to state 815

    $default  reduce using rule 159 (new_else_single)

    new_else_single  go to state 816


state 743

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" . parenthesis_expr $@37 statement

    '('  shift, and go to state 175

    parenthesis_expr  go to state 817


state 744

  158 else_single: "else (T_ELSE)" . statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 818
    unticked_statement                 go to state 88
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 745

   38 unticked_statement: "if (T_IF)" parenthesis_expr $@5 statement $@6 elseif_list else_single .

    $default  reduce using rule 38 (unticked_statement)


state 746

   47 unticked_statement: "do (T_DO)" $@11 statement "while (T_WHILE)" $@12 parenthesis_expr ';' .

    $default  reduce using rule 47 (unticked_statement)


state 747

  150 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" . ';'

    ';'  shift, and go to state 819


state 748

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' . $@14 for_expr ')' $@15 for_statement

    $default  reduce using rule 49 ($@14)

    $@14  go to state 820


state 749

  127 foreach_variable: '&' variable .

    $default  reduce using rule 127 (foreach_variable)


state 750

  129 foreach_variable: "list (T_LIST)" '(' . $@34 assignment_list ')'

    $default  reduce using rule 128 ($@34)

    $@34  go to state 821


state 751

  125 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" . foreach_variable

    '&'                        shift, and go to state 677
    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 678
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    namespace_name                     go to state 151
    foreach_variable                   go to state 822
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 680
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118


state 752

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg . ')' $@20 foreach_statement

    ')'  shift, and go to state 823


state 753

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg . ')' $@18 foreach_statement

    ')'  shift, and go to state 824


state 754

  137 declare_list: declare_list ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 825
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 755

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  135 declare_statement: ':' inner_statement_list . "enddeclare (T_ENDDECLARE)" ';'

    "enddeclare (T_ENDDECLARE)"  shift, and go to state 826

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 756

  141 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" . ';'

    ';'  shift, and go to state 827


state 757

  140 switch_case_list: ':' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 140 (switch_case_list)


state 758

  144 case_list: case_list "case (T_CASE)" expr . case_separator $@35 inner_statement_list
  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    "or (T_LOGICAL_OR)"           shift, and go to state 252
    "xor (T_LOGICAL_XOR)"         shift, and go to state 253
    "and (T_LOGICAL_AND)"         shift, and go to state 254
    '?'                           shift, and go to state 255
    ':'                           shift, and go to state 759
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277
    ';'                           shift, and go to state 760

    case_separator  go to state 828


state 759

  147 case_separator: ':' .

    $default  reduce using rule 147 (case_separator)


state 760

  148 case_separator: ';' .

    $default  reduce using rule 148 (case_separator)


state 761

  146 case_list: case_list "default (T_DEFAULT)" case_separator . $@36 inner_statement_list

    $default  reduce using rule 145 ($@36)

    $@36  go to state 829


state 762

  139 switch_case_list: '{' ';' case_list '}' .

    $default  reduce using rule 139 (switch_case_list)


state 763

  443 non_empty_static_array_pair_list: static_scalar "=> (T_DOUBLE_ARROW)" static_scalar .

    $default  reduce using rule 443 (non_empty_static_array_pair_list)


state 764

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar . "=> (T_DOUBLE_ARROW)" static_scalar
  442                                 | non_empty_static_array_pair_list ',' static_scalar .

    "=> (T_DOUBLE_ARROW)"  shift, and go to state 830

    $default  reduce using rule 442 (non_empty_static_array_pair_list)


state 765

  422 static_scalar: "array (T_ARRAY)" '(' static_array_pair_list ')' .

    $default  reduce using rule 422 (static_scalar)


state 766

   87 catch_statement: "catch (T_CATCH)" '(' . $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 83 ($@24)

    $@24  go to state 831


state 767

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 . finally_statement

    "finally (T_FINALLY)"  shift, and go to state 832

    $default  reduce using rule 88 (finally_statement)

    finally_statement  go to state 833


state 768

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' . lexical_vars '{' inner_statement_list '}'

    "use (T_USE)"  shift, and go to state 799

    $default  reduce using rule 357 (lexical_vars)

    lexical_vars  go to state 834


state 769

  498 assignment_list: assignment_list . ',' assignment_list_element
  502 assignment_list_element: "list (T_LIST)" '(' $@74 assignment_list . ')'

    ','  shift, and go to state 623
    ')'  shift, and go to state 835


state 770

  263 expr_without_variable: "list (T_LIST)" '(' $@45 assignment_list ')' '=' expr .
  285                      | expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  325                      | expr . '?' ':' $@54 expr

    '?'                           shift, and go to state 255
    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 263 (expr_without_variable)


state 771

  523 encaps_var: "${ (T_DOLLAR_OPEN_CURLY_BRACES)" "variable name (T_STRING_VARNAME)" '[' expr ']' '}' .

    $default  reduce using rule 523 (encaps_var)


state 772

  252 chaining_dereference: '[' dim_offset . ']'

    ']'  shift, and go to state 836


state 773

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property . $@70 method_or_not

    $default  reduce using rule 458 ($@70)

    $@70  go to state 837


state 774

  249 chaining_method_or_property: chaining_method_or_property variable_property .

    $default  reduce using rule 249 (chaining_method_or_property)


state 775

  251 chaining_dereference: chaining_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 838
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 776

  254 chaining_instance_call: chaining_dereference $@42 . chaining_method_or_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 713

    chaining_method_or_property  go to state 839
    variable_property            go to state 717


state 777

   32 inner_statement: "__halt_compiler (T_HALT_COMPILER)" '(' ')' ';' .

    $default  reduce using rule 32 (inner_statement)


state 778

  183 non_empty_function_call_parameter_list: non_empty_function_call_parameter_list ',' '&' w_variable .

    $default  reduce using rule 183 (non_empty_function_call_parameter_list)


state 779

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list . '}'
  193 class_statement_list: class_statement_list . class_statement

    "const (T_CONST)"          shift, and go to state 781
    "use (T_USE)"              shift, and go to state 782
    "public (T_PUBLIC)"        shift, and go to state 783
    "protected (T_PROTECTED)"  shift, and go to state 784
    "private (T_PRIVATE)"      shift, and go to state 785
    "final (T_FINAL)"          shift, and go to state 786
    "abstract (T_ABSTRACT)"    shift, and go to state 787
    "static (T_STATIC)"        shift, and go to state 788
    "var (T_VAR)"              shift, and go to state 789
    '}'                        shift, and go to state 840

    $default  reduce using rule 226 (method_modifiers)

    class_statement             go to state 791
    trait_use_statement         go to state 792
    variable_modifiers          go to state 793
    method_modifiers            go to state 794
    non_empty_member_modifiers  go to state 795
    member_modifier             go to state 796
    class_constant_declaration  go to state 797


state 780

  123 interface_list: interface_list ',' fully_qualified_class_name .

    $default  reduce using rule 123 (interface_list)


state 781

  241 class_constant_declaration: "const (T_CONST)" . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 841


state 782

  201 trait_use_statement: "use (T_USE)" . trait_list trait_adaptations

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    trait_list                  go to state 842
    fully_qualified_class_name  go to state 843


state 783

  230 member_modifier: "public (T_PUBLIC)" .

    $default  reduce using rule 230 (member_modifier)


state 784

  231 member_modifier: "protected (T_PROTECTED)" .

    $default  reduce using rule 231 (member_modifier)


state 785

  232 member_modifier: "private (T_PRIVATE)" .

    $default  reduce using rule 232 (member_modifier)


state 786

  235 member_modifier: "final (T_FINAL)" .

    $default  reduce using rule 235 (member_modifier)


state 787

  234 member_modifier: "abstract (T_ABSTRACT)" .

    $default  reduce using rule 234 (member_modifier)


state 788

  233 member_modifier: "static (T_STATIC)" .

    $default  reduce using rule 233 (member_modifier)


state 789

  225 variable_modifiers: "var (T_VAR)" .

    $default  reduce using rule 225 (variable_modifiers)


state 790

  110 unticked_class_declaration_statement: interface_entry "identifier (T_STRING)" $@33 interface_extends_list '{' class_statement_list '}' .

    $default  reduce using rule 110 (unticked_class_declaration_statement)


state 791

  193 class_statement_list: class_statement_list class_statement .

    $default  reduce using rule 193 (class_statement_list)


state 792

  198 class_statement: trait_use_statement .

    $default  reduce using rule 198 (class_statement)


state 793

  196 class_statement: variable_modifiers . $@39 class_variable_declaration ';'

    $default  reduce using rule 195 ($@39)

    $@39  go to state 844


state 794

  200 class_statement: method_modifiers . function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

    "function (T_FUNCTION)"  shift, and go to state 48

    function  go to state 845


state 795

  224 variable_modifiers: non_empty_member_modifiers .
  227 method_modifiers: non_empty_member_modifiers .
  229 non_empty_member_modifiers: non_empty_member_modifiers . member_modifier

    "public (T_PUBLIC)"        shift, and go to state 783
    "protected (T_PROTECTED)"  shift, and go to state 784
    "private (T_PRIVATE)"      shift, and go to state 785
    "final (T_FINAL)"          shift, and go to state 786
    "abstract (T_ABSTRACT)"    shift, and go to state 787
    "static (T_STATIC)"        shift, and go to state 788

    "function (T_FUNCTION)"  reduce using rule 227 (method_modifiers)
    $default                 reduce using rule 224 (variable_modifiers)

    member_modifier  go to state 846


state 796

  228 non_empty_member_modifiers: member_modifier .

    $default  reduce using rule 228 (non_empty_member_modifiers)


state 797

  197 class_statement: class_constant_declaration . ';'
  240 class_constant_declaration: class_constant_declaration . ',' "identifier (T_STRING)" '=' static_scalar

    ','  shift, and go to state 847
    ';'  shift, and go to state 848


state 798

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' . '{' inner_statement_list '}'

    '{'  shift, and go to state 849


state 799

  358 lexical_vars: "use (T_USE)" . '(' lexical_var_list ')'

    '('  shift, and go to state 850


state 800

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  shift, and go to state 851


state 801

  167 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type . "variable (T_VARIABLE)"
  168                         | non_empty_parameter_list ',' optional_class_type . '&' "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type . '&' "variable (T_VARIABLE)" '=' static_scalar
  170                         | non_empty_parameter_list ',' optional_class_type . "variable (T_VARIABLE)" '=' static_scalar

    '&'                      shift, and go to state 852
    "variable (T_VARIABLE)"  shift, and go to state 853


state 802

  164 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" .
  165                         | optional_class_type '&' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 854

    $default  reduce using rule 164 (non_empty_parameter_list)


state 803

  166 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 855
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 804

  285 expr_without_variable: expr . "|| (T_BOOLEAN_OR)" $@47 expr
  287                      | expr . "&& (T_BOOLEAN_AND)" $@48 expr
  289                      | expr . "or (T_LOGICAL_OR)" $@49 expr
  291                      | expr . "and (T_LOGICAL_AND)" $@50 expr
  292                      | expr . "xor (T_LOGICAL_XOR)" expr
  293                      | expr . '|' expr
  294                      | expr . '&' expr
  295                      | expr . '^' expr
  296                      | expr . '.' expr
  297                      | expr . '+' expr
  298                      | expr . '-' expr
  299                      | expr . '*' expr
  300                      | expr . '/' expr
  301                      | expr . '%' expr
  302                      | expr . "<< (T_SL)" expr
  303                      | expr . ">> (T_SR)" expr
  308                      | expr . "=== (T_IS_IDENTICAL)" expr
  309                      | expr . "!== (T_IS_NOT_IDENTICAL)" expr
  310                      | expr . "== (T_IS_EQUAL)" expr
  311                      | expr . "!= (T_IS_NOT_EQUAL)" expr
  312                      | expr . '<' expr
  313                      | expr . "<= (T_IS_SMALLER_OR_EQUAL)" expr
  314                      | expr . '>' expr
  315                      | expr . ">= (T_IS_GREATER_OR_EQUAL)" expr
  316                      | expr . "instanceof (T_INSTANCEOF)" class_name_reference
  323                      | expr . '?' $@52 expr ':' $@53 expr
  323                      | expr '?' $@52 expr ':' $@53 expr .
  325                      | expr . '?' ':' $@54 expr

    "|| (T_BOOLEAN_OR)"           shift, and go to state 256
    "&& (T_BOOLEAN_AND)"          shift, and go to state 257
    '|'                           shift, and go to state 258
    '^'                           shift, and go to state 259
    '&'                           shift, and go to state 260
    "!== (T_IS_NOT_IDENTICAL)"    shift, and go to state 261
    "=== (T_IS_IDENTICAL)"        shift, and go to state 262
    "!= (T_IS_NOT_EQUAL)"         shift, and go to state 263
    "== (T_IS_EQUAL)"             shift, and go to state 264
    '<'                           shift, and go to state 265
    '>'                           shift, and go to state 266
    ">= (T_IS_GREATER_OR_EQUAL)"  shift, and go to state 267
    "<= (T_IS_SMALLER_OR_EQUAL)"  shift, and go to state 268
    ">> (T_SR)"                   shift, and go to state 269
    "<< (T_SL)"                   shift, and go to state 270
    '+'                           shift, and go to state 271
    '-'                           shift, and go to state 272
    '.'                           shift, and go to state 273
    '*'                           shift, and go to state 274
    '/'                           shift, and go to state 275
    '%'                           shift, and go to state 276
    "instanceof (T_INSTANCEOF)"   shift, and go to state 277

    $default  reduce using rule 323 (expr_without_variable)


state 805

  267 expr_without_variable: variable '=' '&' "new (T_NEW)" class_name_reference $@46 ctor_arguments .

    $default  reduce using rule 267 (expr_without_variable)


state 806

  460 array_method_dereference: array_method_dereference '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 856
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 807

  461 array_method_dereference: method '[' . dim_offset ']'

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 486 (dim_offset)

    namespace_name                     go to state 84
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 325
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    dim_offset                         go to state 857
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 808

  463 method: @71 function_call_parameter_list .

    $default  reduce using rule 463 (method)


state 809

  454 variable: base_variable_with_function_calls "-> (T_OBJECT_OPERATOR)" $@68 object_property $@69 method_or_not variable_properties .
  456 variable_properties: variable_properties . variable_property

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 713

    $default  reduce using rule 454 (variable)

    variable_property  go to state 858


state 810

  491 object_dim_list: object_dim_list '[' dim_offset ']' .

    $default  reduce using rule 491 (object_dim_list)


state 811

  492 object_dim_list: object_dim_list '{' expr '}' .

    $default  reduce using rule 492 (object_dim_list)


state 812

  394 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" . object_property

    "identifier (T_STRING)"  shift, and go to state 465
    "variable (T_VARIABLE)"  shift, and go to state 35
    '{'                      shift, and go to state 408
    '$'                      shift, and go to state 81

    variable_without_objects   go to state 577
    reference_variable         go to state 410
    compound_variable          go to state 117
    object_property            go to state 859
    object_dim_list            go to state 579
    variable_name              go to state 580
    simple_indirect_reference  go to state 412


state 813

  392 dynamic_class_name_variable_properties: dynamic_class_name_variable_properties dynamic_class_name_variable_property .

    $default  reduce using rule 392 (dynamic_class_name_variable_properties)


state 814

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" . parenthesis_expr ':' $@38 inner_statement_list

    '('  shift, and go to state 175

    parenthesis_expr  go to state 860


state 815

  160 new_else_single: "else (T_ELSE)" . ':' inner_statement_list

    ':'  shift, and go to state 861


state 816

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single . "endif (T_ENDIF)" ';'

    "endif (T_ENDIF)"  shift, and go to state 862


state 817

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr . $@37 statement

    $default  reduce using rule 152 ($@37)

    $@37  go to state 863


state 818

  158 else_single: "else (T_ELSE)" statement .

    $default  reduce using rule 158 (else_single)


state 819

  150 while_statement: ':' inner_statement_list "endwhile (T_ENDWHILE)" ';' .

    $default  reduce using rule 150 (while_statement)


state 820

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 . for_expr ')' $@15 for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 122
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "function (T_FUNCTION)"                       shift, and go to state 48
    "static (T_STATIC)"                           shift, and go to state 124
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    $default  reduce using rule 244 (for_expr)

    namespace_name                     go to state 84
    for_expr                           go to state 864
    non_empty_for_expr                 go to state 332
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 333
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 821

  129 foreach_variable: "list (T_LIST)" '(' $@34 . assignment_list ')'

    "identifier (T_STRING)"    shift, and go to state 123
    "variable (T_VARIABLE)"    shift, and go to state 35
    "static (T_STATIC)"        shift, and go to state 148
    "list (T_LIST)"            shift, and go to state 522
    "namespace (T_NAMESPACE)"  shift, and go to state 149
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 150
    '$'                        shift, and go to state 81

    $default  reduce using rule 503 (assignment_list_element)

    namespace_name                     go to state 151
    function_call                      go to state 101
    class_name                         go to state 152
    variable                           go to state 523
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 155
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    assignment_list                    go to state 865
    assignment_list_element            go to state 525


state 822

  125 foreach_optional_arg: "=> (T_DOUBLE_ARROW)" foreach_variable .

    $default  reduce using rule 125 (foreach_optional_arg)


state 823

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' . $@20 foreach_statement

    $default  reduce using rule 72 ($@20)

    $@20  go to state 866


state 824

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' . $@18 foreach_statement

    $default  reduce using rule 69 ($@18)

    $@18  go to state 867


state 825

  137 declare_list: declare_list ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 137 (declare_list)


state 826

  135 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" . ';'

    ';'  shift, and go to state 868


state 827

  141 switch_case_list: ':' ';' case_list "endswitch (T_ENDSWITCH)" ';' .

    $default  reduce using rule 141 (switch_case_list)


state 828

  144 case_list: case_list "case (T_CASE)" expr case_separator . $@35 inner_statement_list

    $default  reduce using rule 143 ($@35)

    $@35  go to state 869


state 829

  146 case_list: case_list "default (T_DEFAULT)" case_separator $@36 . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 870


state 830

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 871
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 831

   87 catch_statement: "catch (T_CATCH)" '(' $@24 . fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 872


state 832

   90 finally_statement: "finally (T_FINALLY)" . $@28 '{' inner_statement_list '}'

    $default  reduce using rule 89 ($@28)

    $@28  go to state 873


state 833

   79 unticked_statement: "try (T_TRY)" $@22 '{' inner_statement_list '}' catch_statement $@23 finally_statement .

    $default  reduce using rule 79 (unticked_statement)


state 834

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars . '{' inner_statement_list '}'

    '{'  shift, and go to state 874


state 835

  502 assignment_list_element: "list (T_LIST)" '(' $@74 assignment_list ')' .

    $default  reduce using rule 502 (assignment_list_element)


state 836

  252 chaining_dereference: '[' dim_offset ']' .

    $default  reduce using rule 252 (chaining_dereference)


state 837

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@70 . method_or_not

    '('       reduce using rule 462 (@71)
    $default  reduce using rule 466 (method_or_not)

    array_method_dereference  go to state 734
    method                    go to state 735
    @71                       go to state 736
    method_or_not             go to state 875


state 838

  251 chaining_dereference: chaining_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 876


state 839

  249 chaining_method_or_property: chaining_method_or_property . variable_property
  254 chaining_instance_call: chaining_dereference $@42 chaining_method_or_property .

    "-> (T_OBJECT_OPERATOR)"  shift, and go to state 713

    $default  reduce using rule 254 (chaining_instance_call)

    variable_property  go to state 774


state 840

  108 unticked_class_declaration_statement: class_entry_type "identifier (T_STRING)" extends_from $@32 implements_list '{' class_statement_list '}' .

    $default  reduce using rule 108 (unticked_class_declaration_statement)


state 841

  241 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 877


state 842

  201 trait_use_statement: "use (T_USE)" trait_list . trait_adaptations
  203 trait_list: trait_list . ',' fully_qualified_class_name

    ','  shift, and go to state 878
    ';'  shift, and go to state 879
    '{'  shift, and go to state 880

    trait_adaptations  go to state 881


state 843

  202 trait_list: fully_qualified_class_name .

    $default  reduce using rule 202 (trait_list)


state 844

  196 class_statement: variable_modifiers $@39 . class_variable_declaration ';'

    "variable (T_VARIABLE)"  shift, and go to state 882

    class_variable_declaration  go to state 883


state 845

  200 class_statement: method_modifiers function . is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

    '&'  shift, and go to state 248

    $default  reduce using rule 103 (is_reference)

    is_reference  go to state 884


state 846

  229 non_empty_member_modifiers: non_empty_member_modifiers member_modifier .

    $default  reduce using rule 229 (non_empty_member_modifiers)


state 847

  240 class_constant_declaration: class_constant_declaration ',' . "identifier (T_STRING)" '=' static_scalar

    "identifier (T_STRING)"  shift, and go to state 885


state 848

  197 class_statement: class_constant_declaration ';' .

    $default  reduce using rule 197 (class_statement)


state 849

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 886


state 850

  358 lexical_vars: "use (T_USE)" '(' . lexical_var_list ')'

    '&'                      shift, and go to state 887
    "variable (T_VARIABLE)"  shift, and go to state 888

    lexical_var_list  go to state 889


state 851

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 890


state 852

  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' . "variable (T_VARIABLE)"
  169                         | non_empty_parameter_list ',' optional_class_type '&' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 891


state 853

  167 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" .
  170                         | non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 892

    $default  reduce using rule 167 (non_empty_parameter_list)


state 854

  165 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 893
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 855

  166 non_empty_parameter_list: optional_class_type "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 166 (non_empty_parameter_list)


state 856

  460 array_method_dereference: array_method_dereference '[' dim_offset . ']'

    ']'  shift, and go to state 894


state 857

  461 array_method_dereference: method '[' dim_offset . ']'

    ']'  shift, and go to state 895


state 858

  456 variable_properties: variable_properties variable_property .

    $default  reduce using rule 456 (variable_properties)


state 859

  394 dynamic_class_name_variable_property: "-> (T_OBJECT_OPERATOR)" object_property .

    $default  reduce using rule 394 (dynamic_class_name_variable_property)


state 860

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr . ':' $@38 inner_statement_list

    ':'  shift, and go to state 896


state 861

  160 new_else_single: "else (T_ELSE)" ':' . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 897


state 862

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" . ';'

    ';'  shift, and go to state 898


state 863

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@37 . statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 899
    unticked_statement                 go to state 88
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 864

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr . ')' $@15 for_statement

    ')'  shift, and go to state 900


state 865

  129 foreach_variable: "list (T_LIST)" '(' $@34 assignment_list . ')'
  498 assignment_list: assignment_list . ',' assignment_list_element

    ','  shift, and go to state 623
    ')'  shift, and go to state 901


state 866

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 902
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 903
    unticked_statement                 go to state 88
    foreach_statement                  go to state 904
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 867

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 . foreach_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 902
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 903
    unticked_statement                 go to state 88
    foreach_statement                  go to state 905
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 868

  135 declare_statement: ':' inner_statement_list "enddeclare (T_ENDDECLARE)" ';' .

    $default  reduce using rule 135 (declare_statement)


state 869

  144 case_list: case_list "case (T_CASE)" expr case_separator $@35 . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 906


state 870

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  146 case_list: case_list "default (T_DEFAULT)" case_separator $@36 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  reduce using rule 146 (case_list)
    "case (T_CASE)"            reduce using rule 146 (case_list)
    "default (T_DEFAULT)"      reduce using rule 146 (case_list)
    '}'                        reduce using rule 146 (case_list)
    $default                   reduce using rule 26 ($@4)

    $@4  go to state 390


state 871

  441 non_empty_static_array_pair_list: non_empty_static_array_pair_list ',' static_scalar "=> (T_DOUBLE_ARROW)" static_scalar .

    $default  reduce using rule 441 (non_empty_static_array_pair_list)


state 872

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name . $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 84 ($@25)

    $@25  go to state 907


state 873

   90 finally_statement: "finally (T_FINALLY)" $@28 . '{' inner_statement_list '}'

    '{'  shift, and go to state 908


state 874

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 909


state 875

  459 variable_property: "-> (T_OBJECT_OPERATOR)" object_property $@70 method_or_not .

    $default  reduce using rule 459 (variable_property)


state 876

  251 chaining_dereference: chaining_dereference '[' dim_offset ']' .

    $default  reduce using rule 251 (chaining_dereference)


state 877

  241 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 910
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 878

  203 trait_list: trait_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 911


state 879

  204 trait_adaptations: ';' .

    $default  reduce using rule 204 (trait_adaptations)


state 880

  205 trait_adaptations: '{' . trait_adaptation_list '}'

    "identifier (T_STRING)"    shift, and go to state 912
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    $default  reduce using rule 206 (trait_adaptation_list)

    namespace_name                          go to state 552
    trait_adaptation_list                   go to state 913
    non_empty_trait_adaptation_list         go to state 914
    trait_adaptation_statement              go to state 915
    trait_precedence                        go to state 916
    trait_method_reference                  go to state 917
    trait_method_reference_fully_qualified  go to state 918
    trait_alias                             go to state 919
    fully_qualified_class_name              go to state 920


state 881

  201 trait_use_statement: "use (T_USE)" trait_list trait_adaptations .

    $default  reduce using rule 201 (trait_use_statement)


state 882

  238 class_variable_declaration: "variable (T_VARIABLE)" .
  239                           | "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 921

    $default  reduce using rule 238 (class_variable_declaration)


state 883

  196 class_statement: variable_modifiers $@39 class_variable_declaration . ';'
  236 class_variable_declaration: class_variable_declaration . ',' "variable (T_VARIABLE)"
  237                           | class_variable_declaration . ',' "variable (T_VARIABLE)" '=' static_scalar

    ','  shift, and go to state 922
    ';'  shift, and go to state 923


state 884

  200 class_statement: method_modifiers function is_reference . "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body

    "identifier (T_STRING)"  shift, and go to state 924


state 885

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" . '=' static_scalar

    '='  shift, and go to state 925


state 886

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list . '}'

    '}'  shift, and go to state 926

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 887

  362 lexical_var_list: '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 927


state 888

  361 lexical_var_list: "variable (T_VARIABLE)" .

    $default  reduce using rule 361 (lexical_var_list)


state 889

  358 lexical_vars: "use (T_USE)" '(' lexical_var_list . ')'
  359 lexical_var_list: lexical_var_list . ',' "variable (T_VARIABLE)"
  360                 | lexical_var_list . ',' '&' "variable (T_VARIABLE)"

    ','  shift, and go to state 928
    ')'  shift, and go to state 929


state 890

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  shift, and go to state 930

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 891

  168 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" .
  169                         | non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 931

    $default  reduce using rule 168 (non_empty_parameter_list)


state 892

  170 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 932
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 893

  165 non_empty_parameter_list: optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 165 (non_empty_parameter_list)


state 894

  460 array_method_dereference: array_method_dereference '[' dim_offset ']' .

    $default  reduce using rule 460 (array_method_dereference)


state 895

  461 array_method_dereference: method '[' dim_offset ']' .

    $default  reduce using rule 461 (array_method_dereference)


state 896

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' . $@38 inner_statement_list

    $default  reduce using rule 155 ($@38)

    $@38  go to state 933


state 897

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  160 new_else_single: "else (T_ELSE)" ':' inner_statement_list .

    "endif (T_ENDIF)"  reduce using rule 160 (new_else_single)
    $default           reduce using rule 26 ($@4)

    $@4  go to state 390


state 898

   41 unticked_statement: "if (T_IF)" parenthesis_expr ':' $@7 inner_statement_list $@8 new_elseif_list new_else_single "endif (T_ENDIF)" ';' .

    $default  reduce using rule 41 (unticked_statement)


state 899

  153 elseif_list: elseif_list "elseif (T_ELSEIF)" parenthesis_expr $@37 statement .

    $default  reduce using rule 153 (elseif_list)


state 900

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' . $@15 for_statement

    $default  reduce using rule 50 ($@15)

    $@15  go to state 934


state 901

  129 foreach_variable: "list (T_LIST)" '(' $@34 assignment_list ')' .

    $default  reduce using rule 129 (foreach_variable)


state 902

  133 foreach_statement: ':' . inner_statement_list "endforeach (T_ENDFOREACH)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 935


state 903

  132 foreach_statement: statement .

    $default  reduce using rule 132 (foreach_statement)


state 904

   73 unticked_statement: "foreach (T_FOREACH)" '(' expr_without_variable "as (T_AS)" $@19 foreach_variable foreach_optional_arg ')' $@20 foreach_statement .

    $default  reduce using rule 73 (unticked_statement)


state 905

   70 unticked_statement: "foreach (T_FOREACH)" '(' variable "as (T_AS)" $@17 foreach_variable foreach_optional_arg ')' $@18 foreach_statement .

    $default  reduce using rule 70 (unticked_statement)


state 906

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  144 case_list: case_list "case (T_CASE)" expr case_separator $@35 inner_statement_list .

    "endswitch (T_ENDSWITCH)"  reduce using rule 144 (case_list)
    "case (T_CASE)"            reduce using rule 144 (case_list)
    "default (T_DEFAULT)"      reduce using rule 144 (case_list)
    '}'                        reduce using rule 144 (case_list)
    $default                   reduce using rule 26 ($@4)

    $@4  go to state 390


state 907

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 . "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    "variable (T_VARIABLE)"  shift, and go to state 936


state 908

   90 finally_statement: "finally (T_FINALLY)" $@28 '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 937


state 909

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list . '}'

    '}'  shift, and go to state 938

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 910

  241 class_constant_declaration: "const (T_CONST)" "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 241 (class_constant_declaration)


state 911

  203 trait_list: trait_list ',' fully_qualified_class_name .

    $default  reduce using rule 203 (trait_list)


state 912

    5 namespace_name: "identifier (T_STRING)" .
  215 trait_method_reference: "identifier (T_STRING)" .

    "as (T_AS)"  reduce using rule 215 (trait_method_reference)
    $default     reduce using rule 5 (namespace_name)


state 913

  205 trait_adaptations: '{' trait_adaptation_list . '}'

    '}'  shift, and go to state 939


state 914

  207 trait_adaptation_list: non_empty_trait_adaptation_list .
  209 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list . trait_adaptation_statement

    "identifier (T_STRING)"    shift, and go to state 912
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    $default  reduce using rule 207 (trait_adaptation_list)

    namespace_name                          go to state 552
    trait_adaptation_statement              go to state 940
    trait_precedence                        go to state 916
    trait_method_reference                  go to state 917
    trait_method_reference_fully_qualified  go to state 918
    trait_alias                             go to state 919
    fully_qualified_class_name              go to state 920


state 915

  208 non_empty_trait_adaptation_list: trait_adaptation_statement .

    $default  reduce using rule 208 (non_empty_trait_adaptation_list)


state 916

  210 trait_adaptation_statement: trait_precedence . ';'

    ';'  shift, and go to state 941


state 917

  218 trait_alias: trait_method_reference . "as (T_AS)" trait_modifiers "identifier (T_STRING)"
  219            | trait_method_reference . "as (T_AS)" member_modifier

    "as (T_AS)"  shift, and go to state 942


state 918

  212 trait_precedence: trait_method_reference_fully_qualified . "insteadof (T_INSTEADOF)" trait_reference_list
  216 trait_method_reference: trait_method_reference_fully_qualified .

    "insteadof (T_INSTEADOF)"  shift, and go to state 943

    $default  reduce using rule 216 (trait_method_reference)


state 919

  211 trait_adaptation_statement: trait_alias . ';'

    ';'  shift, and go to state 944


state 920

  217 trait_method_reference_fully_qualified: fully_qualified_class_name . ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)"

    ":: (T_PAAMAYIM_NEKUDOTAYIM)"  shift, and go to state 945


state 921

  239 class_variable_declaration: "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 946
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 922

  236 class_variable_declaration: class_variable_declaration ',' . "variable (T_VARIABLE)"
  237                           | class_variable_declaration ',' . "variable (T_VARIABLE)" '=' static_scalar

    "variable (T_VARIABLE)"  shift, and go to state 947


state 923

  196 class_statement: variable_modifiers $@39 class_variable_declaration ';' .

    $default  reduce using rule 196 (class_statement)


state 924

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" . $@40 '(' parameter_list ')' method_body

    $default  reduce using rule 199 ($@40)

    $@40  go to state 948


state 925

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 949
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 926

  106 unticked_function_declaration_statement: function is_reference "identifier (T_STRING)" $@31 '(' parameter_list ')' '{' inner_statement_list '}' .

    $default  reduce using rule 106 (unticked_function_declaration_statement)


state 927

  362 lexical_var_list: '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 362 (lexical_var_list)


state 928

  359 lexical_var_list: lexical_var_list ',' . "variable (T_VARIABLE)"
  360                 | lexical_var_list ',' . '&' "variable (T_VARIABLE)"

    '&'                      shift, and go to state 950
    "variable (T_VARIABLE)"  shift, and go to state 951


state 929

  358 lexical_vars: "use (T_USE)" '(' lexical_var_list ')' .

    $default  reduce using rule 358 (lexical_vars)


state 930

  344 expr_without_variable: function is_reference @56 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $default  reduce using rule 344 (expr_without_variable)


state 931

  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 952
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 932

  170 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 170 (non_empty_parameter_list)


state 933

  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 . inner_statement_list

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 953


state 934

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 . for_statement

    "require_once (T_REQUIRE_ONCE)"               shift, and go to state 5
    "require (T_REQUIRE)"                         shift, and go to state 6
    "eval (T_EVAL)"                               shift, and go to state 7
    "include_once (T_INCLUDE_ONCE)"               shift, and go to state 8
    "include (T_INCLUDE)"                         shift, and go to state 9
    "print (T_PRINT)"                             shift, and go to state 10
    "yield (T_YIELD)"                             shift, and go to state 11
    ':'                                           shift, and go to state 954
    '+'                                           shift, and go to state 12
    '-'                                           shift, and go to state 13
    '!'                                           shift, and go to state 14
    '~'                                           shift, and go to state 15
    '@'                                           shift, and go to state 16
    "(unset) (T_UNSET_CAST)"                      shift, and go to state 17
    "(bool) (T_BOOL_CAST)"                        shift, and go to state 18
    "(object) (T_OBJECT_CAST)"                    shift, and go to state 19
    "(array) (T_ARRAY_CAST)"                      shift, and go to state 20
    "(string) (T_STRING_CAST)"                    shift, and go to state 21
    "(double) (T_DOUBLE_CAST)"                    shift, and go to state 22
    "(int) (T_INT_CAST)"                          shift, and go to state 23
    "-- (T_DEC)"                                  shift, and go to state 24
    "++ (T_INC)"                                  shift, and go to state 25
    '['                                           shift, and go to state 26
    "clone (T_CLONE)"                             shift, and go to state 27
    "new (T_NEW)"                                 shift, and go to state 28
    "exit (T_EXIT)"                               shift, and go to state 29
    "if (T_IF)"                                   shift, and go to state 30
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 33
    "variable name (T_STRING_VARNAME)"            shift, and go to state 34
    "variable (T_VARIABLE)"                       shift, and go to state 35
    T_INLINE_HTML                                 shift, and go to state 36
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 37
    "echo (T_ECHO)"                               shift, and go to state 38
    "do (T_DO)"                                   shift, and go to state 39
    "while (T_WHILE)"                             shift, and go to state 40
    "for (T_FOR)"                                 shift, and go to state 41
    "foreach (T_FOREACH)"                         shift, and go to state 42
    "declare (T_DECLARE)"                         shift, and go to state 43
    "switch (T_SWITCH)"                           shift, and go to state 44
    "break (T_BREAK)"                             shift, and go to state 45
    "continue (T_CONTINUE)"                       shift, and go to state 46
    "goto (T_GOTO)"                               shift, and go to state 47
    "function (T_FUNCTION)"                       shift, and go to state 48
    "return (T_RETURN)"                           shift, and go to state 50
    "try (T_TRY)"                                 shift, and go to state 51
    "throw (T_THROW)"                             shift, and go to state 52
    "global (T_GLOBAL)"                           shift, and go to state 54
    "static (T_STATIC)"                           shift, and go to state 57
    "unset (T_UNSET)"                             shift, and go to state 58
    "isset (T_ISSET)"                             shift, and go to state 59
    "empty (T_EMPTY)"                             shift, and go to state 60
    "list (T_LIST)"                               shift, and go to state 65
    "array (T_ARRAY)"                             shift, and go to state 66
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 67
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 73
    "namespace (T_NAMESPACE)"                     shift, and go to state 125
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 77
    '('                                           shift, and go to state 78
    ';'                                           shift, and go to state 79
    '{'                                           shift, and go to state 80
    '$'                                           shift, and go to state 81
    '`'                                           shift, and go to state 82
    '"'                                           shift, and go to state 83

    namespace_name                     go to state 84
    statement                          go to state 955
    unticked_statement                 go to state 88
    for_statement                      go to state 956
    new_expr                           go to state 95
    expr_without_variable              go to state 96
    yield_expr                         go to state 97
    combined_scalar_offset             go to state 98
    combined_scalar                    go to state 99
    function                           go to state 126
    function_call                      go to state 101
    class_name                         go to state 102
    common_scalar                      go to state 103
    scalar                             go to state 104
    expr                               go to state 105
    parenthesis_expr                   go to state 106
    r_variable                         go to state 107
    rw_variable                        go to state 108
    variable                           go to state 109
    variable_without_objects           go to state 110
    static_member                      go to state 111
    variable_class_name                go to state 112
    array_function_dereference         go to state 113
    base_variable_with_function_calls  go to state 114
    base_variable                      go to state 115
    reference_variable                 go to state 116
    compound_variable                  go to state 117
    simple_indirect_reference          go to state 118
    internal_functions_in_yacc         go to state 119
    class_constant                     go to state 120
    class_name_scalar                  go to state 121


state 935

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  133 foreach_statement: ':' inner_statement_list . "endforeach (T_ENDFOREACH)" ';'

    "endforeach (T_ENDFOREACH)"  shift, and go to state 957

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 936

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" . ')' $@26 '{' inner_statement_list '}' $@27 additional_catches

    ')'  shift, and go to state 958


state 937

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   90 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list . '}'

    '}'  shift, and go to state 959

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 938

  346 expr_without_variable: "static (T_STATIC)" function is_reference @57 '(' parameter_list ')' lexical_vars '{' inner_statement_list '}' .

    $default  reduce using rule 346 (expr_without_variable)


state 939

  205 trait_adaptations: '{' trait_adaptation_list '}' .

    $default  reduce using rule 205 (trait_adaptations)


state 940

  209 non_empty_trait_adaptation_list: non_empty_trait_adaptation_list trait_adaptation_statement .

    $default  reduce using rule 209 (non_empty_trait_adaptation_list)


state 941

  210 trait_adaptation_statement: trait_precedence ';' .

    $default  reduce using rule 210 (trait_adaptation_statement)


state 942

  218 trait_alias: trait_method_reference "as (T_AS)" . trait_modifiers "identifier (T_STRING)"
  219            | trait_method_reference "as (T_AS)" . member_modifier

    "public (T_PUBLIC)"        shift, and go to state 783
    "protected (T_PROTECTED)"  shift, and go to state 784
    "private (T_PRIVATE)"      shift, and go to state 785
    "final (T_FINAL)"          shift, and go to state 786
    "abstract (T_ABSTRACT)"    shift, and go to state 787
    "static (T_STATIC)"        shift, and go to state 788

    $default  reduce using rule 220 (trait_modifiers)

    trait_modifiers  go to state 960
    member_modifier  go to state 961


state 943

  212 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" . trait_reference_list

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    trait_reference_list        go to state 962
    fully_qualified_class_name  go to state 963


state 944

  211 trait_adaptation_statement: trait_alias ';' .

    $default  reduce using rule 211 (trait_adaptation_statement)


state 945

  217 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 964


state 946

  239 class_variable_declaration: "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 239 (class_variable_declaration)


state 947

  236 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" .
  237                           | class_variable_declaration ',' "variable (T_VARIABLE)" . '=' static_scalar

    '='  shift, and go to state 965

    $default  reduce using rule 236 (class_variable_declaration)


state 948

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 . '(' parameter_list ')' method_body

    '('  shift, and go to state 966


state 949

  240 class_constant_declaration: class_constant_declaration ',' "identifier (T_STRING)" '=' static_scalar .

    $default  reduce using rule 240 (class_constant_declaration)


state 950

  360 lexical_var_list: lexical_var_list ',' '&' . "variable (T_VARIABLE)"

    "variable (T_VARIABLE)"  shift, and go to state 967


state 951

  359 lexical_var_list: lexical_var_list ',' "variable (T_VARIABLE)" .

    $default  reduce using rule 359 (lexical_var_list)


state 952

  169 non_empty_parameter_list: non_empty_parameter_list ',' optional_class_type '&' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 169 (non_empty_parameter_list)


state 953

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  156 new_elseif_list: new_elseif_list "elseif (T_ELSEIF)" parenthesis_expr ':' $@38 inner_statement_list .

    "elseif (T_ELSEIF)"  reduce using rule 156 (new_elseif_list)
    "else (T_ELSE)"      reduce using rule 156 (new_elseif_list)
    "endif (T_ENDIF)"    reduce using rule 156 (new_elseif_list)
    $default             reduce using rule 26 ($@4)

    $@4  go to state 390


state 954

  131 for_statement: ':' . inner_statement_list "endfor (T_ENDFOR)" ';'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 968


state 955

  130 for_statement: statement .

    $default  reduce using rule 130 (for_statement)


state 956

   51 unticked_statement: "for (T_FOR)" '(' for_expr ';' $@13 for_expr ';' $@14 for_expr ')' $@15 for_statement .

    $default  reduce using rule 51 (unticked_statement)


state 957

  133 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" . ';'

    ';'  shift, and go to state 969


state 958

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' . $@26 '{' inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 85 ($@26)

    $@26  go to state 970


state 959

   90 finally_statement: "finally (T_FINALLY)" $@28 '{' inner_statement_list '}' .

    $default  reduce using rule 90 (finally_statement)


state 960

  218 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers . "identifier (T_STRING)"

    "identifier (T_STRING)"  shift, and go to state 971


state 961

  219 trait_alias: trait_method_reference "as (T_AS)" member_modifier .
  221 trait_modifiers: member_modifier .

    "identifier (T_STRING)"  reduce using rule 221 (trait_modifiers)
    $default                 reduce using rule 219 (trait_alias)


state 962

  212 trait_precedence: trait_method_reference_fully_qualified "insteadof (T_INSTEADOF)" trait_reference_list .
  214 trait_reference_list: trait_reference_list . ',' fully_qualified_class_name

    ','  shift, and go to state 972

    $default  reduce using rule 212 (trait_precedence)


state 963

  213 trait_reference_list: fully_qualified_class_name .

    $default  reduce using rule 213 (trait_reference_list)


state 964

  217 trait_method_reference_fully_qualified: fully_qualified_class_name ":: (T_PAAMAYIM_NEKUDOTAYIM)" "identifier (T_STRING)" .

    $default  reduce using rule 217 (trait_method_reference_fully_qualified)


state 965

  237 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' . static_scalar

    '+'                                           shift, and go to state 491
    '-'                                           shift, and go to state 492
    '['                                           shift, and go to state 493
    "integer number (T_LNUMBER)"                  shift, and go to state 31
    "floating-point number (T_DNUMBER)"           shift, and go to state 32
    "identifier (T_STRING)"                       shift, and go to state 123
    "quoted-string (T_CONSTANT_ENCAPSED_STRING)"  shift, and go to state 494
    "static (T_STATIC)"                           shift, and go to state 148
    "array (T_ARRAY)"                             shift, and go to state 495
    "__CLASS__ (T_CLASS_C)"                       shift, and go to state 496
    "__TRAIT__ (T_TRAIT_C)"                       shift, and go to state 68
    "__METHOD__ (T_METHOD_C)"                     shift, and go to state 69
    "__FUNCTION__ (T_FUNC_C)"                     shift, and go to state 70
    "__LINE__ (T_LINE)"                           shift, and go to state 71
    "__FILE__ (T_FILE)"                           shift, and go to state 72
    "heredoc start (T_START_HEREDOC)"             shift, and go to state 497
    "namespace (T_NAMESPACE)"                     shift, and go to state 498
    "__NAMESPACE__ (T_NS_C)"                      shift, and go to state 75
    "__DIR__ (T_DIR)"                             shift, and go to state 76
    "\\ (T_NS_SEPARATOR)"                         shift, and go to state 499

    namespace_name            go to state 500
    class_name                go to state 501
    common_scalar             go to state 502
    static_scalar             go to state 973
    static_class_constant     go to state 504
    static_class_name_scalar  go to state 505


state 966

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' . parameter_list ')' method_body

    "identifier (T_STRING)"    shift, and go to state 123
    "array (T_ARRAY)"          shift, and go to state 649
    "callable (T_CALLABLE)"    shift, and go to state 650
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    ')'       reduce using rule 162 (parameter_list)
    $default  reduce using rule 171 (optional_class_type)

    namespace_name              go to state 552
    parameter_list              go to state 974
    non_empty_parameter_list    go to state 652
    optional_class_type         go to state 653
    fully_qualified_class_name  go to state 654


state 967

  360 lexical_var_list: lexical_var_list ',' '&' "variable (T_VARIABLE)" .

    $default  reduce using rule 360 (lexical_var_list)


state 968

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  131 for_statement: ':' inner_statement_list . "endfor (T_ENDFOR)" ';'

    "endfor (T_ENDFOR)"  shift, and go to state 975

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 969

  133 foreach_statement: ':' inner_statement_list "endforeach (T_ENDFOREACH)" ';' .

    $default  reduce using rule 133 (foreach_statement)


state 970

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 . '{' inner_statement_list '}' $@27 additional_catches

    '{'  shift, and go to state 976


state 971

  218 trait_alias: trait_method_reference "as (T_AS)" trait_modifiers "identifier (T_STRING)" .

    $default  reduce using rule 218 (trait_alias)


state 972

  214 trait_reference_list: trait_reference_list ',' . fully_qualified_class_name

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 977


state 973

  237 class_variable_declaration: class_variable_declaration ',' "variable (T_VARIABLE)" '=' static_scalar .

    $default  reduce using rule 237 (class_variable_declaration)


state 974

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list . ')' method_body

    ')'  shift, and go to state 978


state 975

  131 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" . ';'

    ';'  shift, and go to state 979


state 976

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' . inner_statement_list '}' $@27 additional_catches

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 980


state 977

  214 trait_reference_list: trait_reference_list ',' fully_qualified_class_name .

    $default  reduce using rule 214 (trait_reference_list)


state 978

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' . method_body

    ';'  shift, and go to state 981
    '{'  shift, and go to state 982

    method_body  go to state 983


state 979

  131 for_statement: ':' inner_statement_list "endfor (T_ENDFOR)" ';' .

    $default  reduce using rule 131 (for_statement)


state 980

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list . '}' $@27 additional_catches

    '}'  shift, and go to state 984

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 981

  222 method_body: ';' .

    $default  reduce using rule 222 (method_body)


state 982

  223 method_body: '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 985


state 983

  200 class_statement: method_modifiers function is_reference "identifier (T_STRING)" $@40 '(' parameter_list ')' method_body .

    $default  reduce using rule 200 (class_statement)


state 984

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' . $@27 additional_catches

    $default  reduce using rule 86 ($@27)

    $@27  go to state 986


state 985

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
  223 method_body: '{' inner_statement_list . '}'

    '}'  shift, and go to state 987

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 986

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 . additional_catches

    "catch (T_CATCH)"  shift, and go to state 988

    $default  reduce using rule 92 (additional_catches)

    additional_catches            go to state 989
    non_empty_additional_catches  go to state 990
    additional_catch              go to state 991


state 987

  223 method_body: '{' inner_statement_list '}' .

    $default  reduce using rule 223 (method_body)


state 988

   97 additional_catch: "catch (T_CATCH)" . '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    '('  shift, and go to state 992


state 989

   87 catch_statement: "catch (T_CATCH)" '(' $@24 fully_qualified_class_name $@25 "variable (T_VARIABLE)" ')' $@26 '{' inner_statement_list '}' $@27 additional_catches .

    $default  reduce using rule 87 (catch_statement)


state 990

   91 additional_catches: non_empty_additional_catches .
   94 non_empty_additional_catches: non_empty_additional_catches . additional_catch

    "catch (T_CATCH)"  shift, and go to state 988

    $default  reduce using rule 91 (additional_catches)

    additional_catch  go to state 993


state 991

   93 non_empty_additional_catches: additional_catch .

    $default  reduce using rule 93 (non_empty_additional_catches)


state 992

   97 additional_catch: "catch (T_CATCH)" '(' . fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    "identifier (T_STRING)"    shift, and go to state 123
    "namespace (T_NAMESPACE)"  shift, and go to state 550
    "\\ (T_NS_SEPARATOR)"      shift, and go to state 551

    namespace_name              go to state 552
    fully_qualified_class_name  go to state 994


state 993

   94 non_empty_additional_catches: non_empty_additional_catches additional_catch .

    $default  reduce using rule 94 (non_empty_additional_catches)


state 994

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name . @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    $default  reduce using rule 95 (@29)

    @29  go to state 995


state 995

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 . "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}'

    "variable (T_VARIABLE)"  shift, and go to state 996


state 996

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" . ')' $@30 '{' inner_statement_list '}'

    ')'  shift, and go to state 997


state 997

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' . $@30 '{' inner_statement_list '}'

    $default  reduce using rule 96 ($@30)

    $@30  go to state 998


state 998

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 . '{' inner_statement_list '}'

    '{'  shift, and go to state 999


state 999

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' . inner_statement_list '}'

    $default  reduce using rule 28 (inner_statement_list)

    inner_statement_list  go to state 1000


state 1000

   27 inner_statement_list: inner_statement_list . $@4 inner_statement
   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list . '}'

    '}'  shift, and go to state 1001

    $default  reduce using rule 26 ($@4)

    $@4  go to state 390


state 1001

   97 additional_catch: "catch (T_CATCH)" '(' fully_qualified_class_name @29 "variable (T_VARIABLE)" ')' $@30 '{' inner_statement_list '}' .

    $default  reduce using rule 97 (additional_catch)
