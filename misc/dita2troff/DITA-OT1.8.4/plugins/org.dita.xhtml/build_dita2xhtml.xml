<?xml version="1.0" encoding="utf-8"?><!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. --><project name="dita2xhtml">
	
    <target name="dita2xhtml" depends="build-init, preprocess, dita.map.xhtml,                       copy-css , dita.topics.xhtml, dita.inner.topics.xhtml, dita.outer.topics.xhtml">
    </target>

    <target name="dita.map.xhtml" depends="dita.map.xhtml.init, dita.map.xhtml.toc , dita.out.map.xhtml.toc"></target>

    <target name="dita.map.xhtml.init" depends="dita.xhtml.init" unless="noMap">
      <condition property="args.xhtml.toc.xsl" value="${dita.plugin.org.dita.xhtml.dir}/xsl/map2xhtmtoc.xsl">
        <not>
          <isset property="args.xhtml.toc.xsl"></isset>
        </not>
      </condition>
        <condition property="args.xhtml.toc" value="index">
            <not>
                <isset property="args.xhtml.toc"></isset>
            </not>
        </condition>
    </target>
    

  	
    <target name="dita.map.xhtml.toc" unless="noMap" if="old.transform" description="Build HTML TOC file">
        <xslt basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" classpathref="dost.class.path" style="${args.xhtml.toc.xsl}">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"></excludesfile>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
            <param name="OUTEXT" expression="${out.ext}" if="out.ext"></param>
            <param name="contenttarget" expression="${args.xhtml.contenttarget}" if="args.xhtml.contenttarget"></param>
            <param name="CSS" expression="${args.css.file}" if="args.css.file"></param>
            <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"></param>
            <param name="OUTPUTCLASS" expression="${args.xhtml.toc.class}" if="args.xhtml.toc.class"></param>
            
            <mapper type="glob" from="*${dita.input.filename}" to="*${args.xhtml.toc}${out.ext}"></mapper>
          <xmlcatalog refid="dita.catalog"></xmlcatalog>
        </xslt>
    </target>
    

    <target name="dita.out.map.xhtml.toc" unless="noMap" if="inner.transform" description="Build HTML TOC file,which will adjust the directory">
        <xslt basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" classpathref="dost.class.path" style="${args.xhtml.toc.xsl}">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"></excludesfile>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
            <param name="OUTEXT" expression="${out.ext}" if="out.ext"></param>
            <param name="contenttarget" expression="${args.xhtml.contenttarget}" if="args.xhtml.contenttarget"></param>
            <param name="CSS" expression="${args.css.file}" if="args.css.file"></param>
            <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"></param>
            <param name="OUTPUTCLASS" expression="${args.xhtml.toc.class}" if="args.xhtml.toc.class"></param>
            
            <mapper type="glob" from="${user.input.file}" to="${args.xhtml.toc}${out.ext}"></mapper>
          <xmlcatalog refid="dita.catalog"></xmlcatalog>
        </xslt>
    </target>
    
  <target name="copy-revflag" if="dita.input.valfile">
    <dita-ot-echo id="DOTA069W">
      <param name="1" value="copy-revflag"></param>
    </dita-ot-echo>
  </target>
    
  <target name="copy-css" unless="user.csspath.url" description="Copy CSS files">
    <condition property="user.copycss.yes">
      <and>
        <equals arg1="${args.copycss}" arg2="yes"></equals>
        <isset property="args.css.present"></isset>
      </and>
    </condition>
    <property name="user.csspath.real" location="${output.dir}/${user.csspath}"></property>
    <mkdir dir="${user.csspath.real}"></mkdir>
    <!-- Always copy system default css files -->
    <copy todir="${user.csspath.real}">
      <fileset dir="${dita.plugin.org.dita.xhtml.dir}/resource" includes="*.css"></fileset>
    </copy>
    <!-- Copy user specify css file when required -->
    <antcall target="copy-css-user"></antcall>
  </target>

  <target name="copy-css-user" if="user.copycss.yes">
    <copy file="${args.css.real}" todir="${user.csspath.real}"></copy>
  </target>
  
</project>