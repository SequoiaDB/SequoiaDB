.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "sort" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
sort \- Sort the result set by the specified field.
.SH SYNOPSIS
.PP
\f[B]\f[I]query.sort( <sort> )\f[]\f[]
.SH CATEGORY
.PP
SdbQuery
.SH DESCRIPTION
.PP
Sort the result set by the specified field.
.SH PARAMETERS
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
Name
T}@T{
Type
T}@T{
Default
T}@T{
Description
T}@T{
Required or not
T}
_
T{
1
T}@T{
sort
T}@T{
JSON
T}@T{
the result set isn\[aq]t
T}@T{
specified field and
T}@T{
yes
T}
T{
T}@T{
T}@T{
T}@T{
sorted by default
T}@T{
sorting rules
T}@T{
T}
.TE
.PP
The optional values of the \[aq]sort\[aq] parameter are as followsï¼š
.PP
.TS
tab(@);
l l l.
T{
0
T}@T{
Optional values
T}@T{
Description
T}
_
T{
1
T}@T{
1
T}@T{
ascending order
T}
T{
2
T}@T{
\-1
T}@T{
descending order
T}
.TE
.RS
.PP
\f[B]Note:\f[]
.RE
.RS
.PP
When find() uses the sel, if the option does not cantain the sort field
specified by sort(), the sort set by sort() is meaningless and is automatically
ignored.
.RE
.SH RETURN VALUE
.PP
On success, return rearch result set.
.PP
On error, exception will be thrown.
.SH ERRORS
.PP
When exception happens, use getLastError() to get the error code and use
getLastErrMsg() to get error message.
For more details, refer to Troubleshooting.
.SH EXAMPLES
.IP \[bu] 2
Select the record that the age field value greater than (with using $gt) 20
under the collection, employee, and return only name field and age field with
sorting by ascending order of age field values.
.IP
.nf
\f[C]
> db.sample.employee.find( { age: { $gt: 20 } }, { age: "", name: "" } ).sort( { age: 1 } )
{
  "name": "Jack",
  "age": 22
}
{
  "name": "Tom",
  "age": 23
}
{
  "name": "John",
  "age": 25
}
\f[]
.fi
.IP \[bu] 2
Specifiy an invalid field.
.IP
.nf
\f[C]
> db.sample.employee.find( { age: { $gt: 20 } }, { age: "", name: "" } ).sort( { "sex": 1 } )
{
  "name": "Jack",
  "age": 22
}
{
  "name": "Tom",
  "age": 23
}
{
  "name": "John",
  "age": 25
}
\f[]
.fi
