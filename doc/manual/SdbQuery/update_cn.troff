.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "update" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH 名称
.PP
update \- 更新查询后的结果集
.SH 语法
.PP
\f[B]query.update( <rule>, [returnNew], [options] )\f[]
.SH 类别
.PP
SdbQuery
.SH 描述
.PP
更新查询后的结果集。
.RS
.PP
\f[B]Note:\f[]
.RE
.RS
.IP "1." 3
不能与 query.count()、query.remove()同时使用。
.RE
.RS
.IP "2." 3
与 query.sort()同时使用时，在单个节点上排序必须使用索引。
.RE
.RS
.IP "3." 3
在集群中与 query.limit()或
query.skip()同时使用时，要保证查询条件会在单个节点或单个子表上执行。
.RE
.SH 参数
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
参数名
T}@T{
参数类型
T}@T{
默认值
T}@T{
描述
T}@T{
是否必填
T}
_
T{
1
T}@T{
rule
T}@T{
JSON
T}@T{
\-\-\-
T}@T{
更新规则，记录
T}@T{
是
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
按指定规则更新
T}@T{
T}
T{
2
T}@T{
returnNew
T}@T{
bool
T}@T{
false
T}@T{
是否返回更新后
T}@T{
否
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
的记录
T}@T{
T}
T{
3
T}@T{
options
T}@T{
JSON
T}@T{
\-\-\-
T}@T{
可选项
T}@T{
否
T}
.TE
.PP
options 参数详细说明如下：
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
属性
T}@T{
值类型
T}@T{
默认值
T}@T{
描述
T}@T{
是否必填
T}
_
T{
1
T}@T{
KeepShardingKey
T}@T{
bool
T}@T{
false
T}@T{
是否保留分区键
T}@T{
否
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
字段
T}@T{
T}
.TE
.RS
.PP
\f[B]Note:\f[]
.PD 0
.P
.PD
\- query.update()方法的定义格式包含 rule 参数、 returnNew 参数 和 options
参数。其中 rule 参数与 update()的 rule 参数相同，options 参数与 update()的
options 参数相同。
.IP \[bu] 2
returnNew 参数默认为 false，当为 true 时，返回修改后的记录值。
.RE
.SH 返回值
.PP
返回结果集的游标。returnNew为false，则返回更新前的查询结果集的游标；returnNew为true，则返回更新后的结果集的游标。
.SH 错误
.PP
如果出错则抛异常，并输出错误信息，可以通过getLastErrMsg()获取错误信息或通过getLastError()获取错误码。
关于错误处理可以参考常见错误处理指南。
.PP
常见错误可参考错误码。
.SH 版本
.PP
v2.0 及以上版本。
.SH 示例
.PP
查询集合 employee 下 age 字段值大于10的记录（如使用 $gt
查询），并将符合条件的记录的 age 字段加1。
.IP
.nf
\f[C]
> db.sample.employee.find( { age: { $gt: 10 } } ).update( { $inc: { age: 1 } } )
{
    "_id": {
      "$oid": "5d006c45e846796ae69f85a9"
    },
    "age": 21,
    "name": "tom"
}
{
    "_id": {
      "$oid": "5d006c45e846796ae69f85aa"
    },
    "age": 22,
    "name": "ben"
}
{
    "_id": {
      "$oid": "5d006c45e846796ae69f85ab"
    },
    "age": 23,
    "name": "alice"
}
\f[]
.fi
