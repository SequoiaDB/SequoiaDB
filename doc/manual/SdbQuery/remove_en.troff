.\" Automatically generated by Pandoc 1.18
.\"
.TH "remove" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
remove \- Delete the result set after the query.
.SH SYNOPSIS
.PP
\f[B]\f[I]query.remove()\f[]\f[]
.SH CATEGORY
.PP
SdbQuery
.SH DESCRIPTION
.PP
Delete the result set after the query.
.RS
.PP
\f[B]Note:\f[]
.RE
.RS
.IP "1." 3
Remove() cannot be used with count() and update().
.RE
.RS
.IP "2." 3
If remove() is used with sort(), it must use an index when sorts on a single
node.
.RE
.RS
.IP "3." 3
When remove is used with limit() and skip() in a cluster, it must ensure that
the query conditions are executed on a single node or on a single child table.
.RE
.SH PARAMETERS
.PP
NULL
.SH RETURN VALUE
.PP
On success, return the cursor of the deleted result set.
.PP
On error, exception will be thrown.
.SH ERRORS
.PP
When exception happens, use getLastError() to get the error code and use
getLastErrMsg() to get error message.
For more details, refer to Troubleshooting.
.SH EXAMPLES
.IP \[bu] 2
Select the record that the age field value greater than (with using $gt) 10
under the collection, employee, and remove the records.
.IP
.nf
\f[C]
> db.sample.employee.find( { age: { $gt: 10 } } ).remove()
{
  "_id": {
    "$oid": "5d2c4455f6d7aeedc15ddf87"
  },
  "name": "tom",
  "age": 18
}
\f[]
.fi
