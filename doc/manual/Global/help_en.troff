.\" Automatically generated by Pandoc 1.18
.\"
.TH "help" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
help \- dispaly the help information
.SH SYNOPSIS
.PP
\f[B]help()\f[]
.PP
\f[B]help(<method>)\f[]
.SH CATEGORY
.PP
Global
.SH DESCRIPTION
.PP
Display help information in global scope.
.IP \[bu] 2
help() \- display the help information in global scope.
.IP \[bu] 2
help(<method>) \- display the detail of a method in global scope.
.PP
Display the help information of a class or an object:
.IP \[bu] 2
<class>.help() \- display all the methods in specified class or object.
.IP \[bu] 2
<class>.help(<method>) \- display the detail of method in specified class or
object.
.SH PARAMETERS
.IP \[bu] 2
\f[C]class\f[] ( \f[I]object\f[]， \f[I]Requird\f[] )
.RS 2
.PP
javascript class or object.
.RE
.IP \[bu] 2
\f[C]method\f[] ( \f[I]string\f[]， \f[I]Requird\f[] )
.RS 2
.PP
The name of class or object.
.RE
.SH RETURN VALUE
.PP
NULL.
.SH ERRORS
.PP
NULL.
.SH HISTORY
.PP
v1.0 and above.
.SH EXAMPLES
.IP \[bu] 2
Show the global help information.
.RS 2
.IP
.nf
\f[C]
> help()
\f[]
.fi
.RE
.IP \[bu] 2
Show the all the methods of a classs.
.RS 2
.IP
.nf
\f[C]
> Oma.help()
    \-\-Constructor methods for class "Oma":
    var oma = new Oma([hostname],[svcname])
                          \- Class for cluster management.
    \-\-Static methods for class "Oma":
    Oma.addAOmaSvcName(<hostname>,<svcname>,[isReplace],[confFile])
                          \- Specify the service name of sdbcm in target
                            host.
    Oma.delAOmaSvcName(hostname,[confFile])
                          \- Delete the service name of sdbcm from its
                            configuration file in target host.
    Oma.getAOmaSvcName(hostname,[confFile])
                          \- Get the service name of sdbcm in target host.
    ...
\f[]
.fi
.RE
.IP \[bu] 2
Show the all the methods of an object.
.RS 2
.IP
.nf
\f[C]
> var oma = new Oma()
> oma.help()
    \-\-Instance methods for class "Oma":
    close()              \- Close the Oma object.
    createCoord(<svcname>,<dbpath>,[config])
                         \- Create a coord node in target host of sdbcm.
    createData(<svcname>,<dbpath>,[config])
                         \- Create a standalone node in target host of
                           sdbcm.
    ...
\f[]
.fi
.RE
.IP \[bu] 2
Show the manpage of the specified method.
.RS 2
.IP
.nf
\f[C]
> help("createCS")

createCS(1)                       Version 2.8                      createCS(1)

NAME
    createCS \- Create a collection space in current database.

SYNOPSIS
    db.createCS(<name>,[options])

CATEGORY
    Sequoiadb

DESCRIPTION
    Create a collection space in a database instance.


    name (string)
            Collection space name. Collection space name should be
            unique to each other in a database instance.
\&...
\f[]
.fi
.RE
.IP \[bu] 2
Show the manpage of the specified method in a class or an object.
.RS 2
.IP
.nf
\f[C]
> var db = new Sdb()
> db.sample.help("createCL") // or SdbCS.help("createCL")

createCL(1)                       Version 2.8                      createCL(1)

NAME
    createCL \- create a new collection.

SYNOPSIS
    db.collectionspace.createCL(<name>,[option])

CATEGORY
    Collection Space

DESCRIPTION
    Create a collection in a specified collection space.  Collection is a
    logical object which stores records.  Each record should belong to one
    and only one collection.

PARAMETERS
    * name ( String , Required )

        The name of the collection, should be unique to each other in a
        collection space.

\&...
\f[]
.fi
.RE
