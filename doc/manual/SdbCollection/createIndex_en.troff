.\" Automatically generated by Pandoc 1.18
.\"
.TH "createIndex" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
createIndex \- create index
.SH SYNOPSIS
.PP
\f[B]db.collectionspace.collection.createIndex(<name>, <indexDef>, [isUnique],
[enforced], [sortBufferSize])\f[]
.PP
\f[B]db.collectionspace.collection.createIndex(<name>, <indexDef>, [indexAttr],
[option])\f[]
.SH CATEGORY
.PP
SdbCollection
.SH DESCRIPTION
.PP
This function is used to create an index for the collection to improve query
speed.User need to understand the limitations of indexes before careating.
.SH PARAMETERS
.IP \[bu] 2
name ( \f[I]string, required\f[] )
.RS 2
.PP
Index name.
It should be unique in a collection.
.RE
.IP \[bu] 2
indexDef ( \f[I]object, required\f[] )
.RS 2
.PP
Index key.
The format is \f[C]{<index field>:<value>, ...}\f[].
The optional type values are as follows:
.IP \[bu] 2
1: sort by field in ascending order.
.IP \[bu] 2
\-1: sort by field in descending order.
.IP \[bu] 2
"text": create text index.
.RE
.IP \[bu] 2
isUnique ( \f[I]boolean, optional\f[] )
.RS 2
.PP
Whether the index is unique.
The default value is false, means the index is not unique.
.RE
.IP \[bu] 2
enforced ( \f[I]boolean, optional\f[] )
.RS 2
.PP
Whether the index is mandatorily unique or not.
The default value is false.
.IP \[bu] 2
When it is true, cannot repeatedly insert records whose index field value is
null.
.IP \[bu] 2
It only becomes effective when the parameter "isUnique" is true.
.RE
.IP \[bu] 2
sortBufferSize ( \f[I]number, optional\f[] )
.RS 2
.PP
The size of sort buffer.
The default value is 64, the unit is MB.
.IP \[bu] 2
Zero means don\[aq]t use sort buffer.
.IP \[bu] 2
When the collection record data volume more than 10 million records,
appropriately increasing the sort cache size can increase the speed of index
creation.
.RE
.RS
.PP
\f[B]Note:\f[]
.PP
For text index, the parameters "isUnique", "enforced" and "sortBufferSize" are
invalid.
.RE
.IP \[bu] 2
indexAttr ( \f[I]object, optional\f[] )
.RS 2
.PP
Index attributes can be set through the parameter "indexAttr":
.IP \[bu] 2
Unique ( \f[I]boolean\f[] ): Whether the index is unique.
The defalut value is false.
.RS 2
.PP
Format: \f[C]Unique: true\f[]
.RE
.IP \[bu] 2
Enforced ( \f[I]boolean\f[] ): Whether the index is mandatorily unique.
The defalut value is false.
.RS 2
.IP \[bu] 2
When it is true, cannot repeatedly insert records whose index field value is
null.
.IP \[bu] 2
It only becomes effective when the parameter "Unique" is true.
.PP
Format: \f[C]Enforced: true\f[]
.RE
.IP \[bu] 2
NotNull ( \f[I]boolean\f[] ): Whether to allowed the index field to
not\-existent or be null when inserting a record.
The defalut value is false.
.RS 2
.PP
The values are as follows:
.IP \[bu] 2
true: The index field must exist and the value cannot be null.
.IP \[bu] 2
false: Allows the index field to not exist or the value be null.
.PP
Format: \f[C]NotNull: true\f[]
.RE
.IP \[bu] 2
NotArray ( \f[I]boolean\f[] ): Whether any field of index is allowed to be an
array when inserting a record.
The defalut value is false.
.RS 2
.IP \[bu] 2
true: The value of the index field is not allowed to be an array.
.IP \[bu] 2
false: The value of the index field is allowed to be an array.
.PP
Format: \f[C]NotArray: true\f[]
.RE
.IP \[bu] 2
Standalone ( \f[I]boolean\f[] ): Whether it is a standalone index.
The defalut value is false, means is not a standalone index.
.RS 2
.PP
When it is true, the parameter "NodeName", "NodeID" or "InstanceID" must be
specified.
.PP
Format: \f[C]Standalone: true\f[]
.RE
.RE
.IP \[bu] 2
option ( \f[I]object, optional\f[] )
.RS 2
.PP
Control parameters can be set through the parameter "option":
.IP \[bu] 2
SortBufferSize ( \f[I]number\f[] ): The size of sort buffer.
The default value is 64, the unit is MB.
.RS 2
.IP \[bu] 2
Zero means don\[aq]t use sort buffer.
.IP \[bu] 2
When the collection record data volume more than 10 million records,
appropriately increasing the sort cache size can increase the speed of index
creation.
.PP
Format: \f[C]SortBufferSize: 80\f[]
.RE
.IP \[bu] 2
NodeName ( \f[I]string/array\f[] ): Data node name
.RS 2
.PP
Format: \f[C]NodeName: "sdbserver:11820"\f[]
.RE
.IP \[bu] 2
NodeID ( \f[I]number/array\f[] ): Data node ID
.RS 2
.PP
Format: \f[C]NodeID: 1001\f[]
.RE
.IP \[bu] 2
InstanceID ( \f[I]number/array\f[] ): Data node instance ID
.RS 2
.PP
Format: \f[C]InstanceID: 100\f[]
.RE
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, there is no return value.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v2.0 and above
.SH EXAMPLES
.IP \[bu] 2
Create an unique index named "ageIndex", and specify the records are in
ascending order on the field "age".
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.createIndex("ageIndex", {age: 1}, true)
\f[]
.fi
.RE
.IP \[bu] 2
Create a text index named "addr_tag".
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.createIndex("addr_tags", {address: "text", tags: "text"})
\f[]
.fi
.RE
.IP \[bu] 2
Create an unique index named "ab", and specify the parameter "NotNull" is true.
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.createIndex("ab", {a: 1, b: 1}, {Unique: true, NotNull: true})
\f[]
.fi
.PP
When the field "b" does not exist or the value is null, an error message will be
returned.
.IP
.nf
\f[C]
> db.sample.employee.insert({a: 1})
sdb.js:625 uncaught exception: \-339
Any field of index key should exist and cannot be null

> db.sample.employee.insert({a: 1, b: null})
sdb.js:625 uncaught exception: \-339
Any field of index key should exist and cannot be null
\f[]
.fi
.RE
.IP \[bu] 2
Create an index named "ab", and specify the parameter "NotArray" is true.
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.createIndex("ab", {a: 1, b: 1}, {NotArray: true})
\f[]
.fi
.PP
When the field "a" is array, an error message will be returned.
.IP
.nf
\f[C]
> db.sample.employee.insert({a: [1], b: 10})
sdb.js:645 uncaught exception: \-364
Any field of index key cannot be array
\f[]
.fi
.RE
.IP \[bu] 2
Create a standalone index named "a" on the data node \f[C]sdbserver:11850\f[].
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.createIndex("a", {a: 1}, {Standalone: true}, {NodeName: "sdbserver:11850"})
\f[]
.fi
.RE
