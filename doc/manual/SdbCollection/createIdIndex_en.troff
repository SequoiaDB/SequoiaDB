.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "createIdIndex" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
createIdIndex \- You can set AutoIndexId to false when creating a collection in
SequoiaDB.
In this way, the collection will not create a default $id index, and data update
operations and delete operations will be prohibited.
This method can create the $id index, and open update function and delete
function at the same time.
.SH SYNOPSIS
.PP
\f[B]\f[I]db.collectionspace.collection.createIdIndex([options])\f[]\f[]
.SH CATEGORY
.PP
SdbCollection
.SH DESCRIPTION
.PP
Create the $id index.
.SH PARAMETERS
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
Name
T}@T{
Type
T}@T{
Defaults
T}@T{
Description
T}@T{
Required or not
T}
_
T{
1
T}@T{
options
T}@T{
JSON
T}@T{
\-\-\-
T}@T{
optional
T}@T{
not
T}
.TE
.PP
The detailed description of \[aq]options\[aq] parameter is as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Name
T}@T{
Type
T}@T{
Default
T}@T{
Description
T}
_
T{
1
T}@T{
SortBufferSize
T}@T{
int
T}@T{
64
T}@T{
The size of sort buffer
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
used when creating
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
index, the unit is MB.
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
And it means don\[aq]t use
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
sort buffer when the
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
size if zero
T}
.TE
.SH RETURN VALUE
.PP
On success, return void.
.PP
On error, exception will be thrown.
.SH ERRORS
.PP
.TS
tab(@);
l l l l.
T{
0
T}@T{
Error code
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-247
T}@T{
$id index already
T}@T{
\-
T}
T{
T}@T{
T}@T{
exists
T}@T{
T}
T{
2
T}@T{
\-291
T}@T{
an index with the same
T}@T{
delete conflicting
T}
T{
T}@T{
T}@T{
definition exists
T}@T{
index
T}
.TE
.PP
When exception happens, use getLastError() to get the error code and use
getLastErrMsg() to get error message.
For more details, please reference to Troubleshooting.
.SH EXAMPLES
.IP \[bu] 2
Create the $id index with default parameters.
.IP
.nf
\f[C]
> db.sample.employee.createIdIndex()
\f[]
.fi
.IP \[bu] 2
Specify sort cache size when creating the $id index.
.IP
.nf
\f[C]
> db.sample.employee.createIdIndex( { SortBufferSize: 128 } )
\f[]
.fi
