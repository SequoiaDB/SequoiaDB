.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "enableSharding" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
enableSharding \- modify the properties of the collection to turn on the
sharding properties
.SH SYNOPSIS
.PP
\f[B]db.collectionspace.collection.enableSharding(<options>)\f[]
.SH CATEGORY
.PP
SdbCollection
.SH DESCRIPTION
.PP
This function is used to modify the properties of the collection to turn on the
sharding properties.
.SH PARAMETERS
.PP
options ( \f[I]object, required\f[] )
.PP
Modify the collection properties through the options parameters:
.IP \[bu] 2
ShardingKey ( \f[I]object, required\f[] ): Sharding key, the value is 1 or \-1,
indicating forward or backward sorting.
.RS 2
.IP \[bu] 2
The existing "ShardingKey" will be modified to a new "ShardingKey".
.IP \[bu] 2
The collection can only exist in one data group, or the collection is the main
table without mounting sub\-tables.
.PP
Format: \f[C]ShardingKey: {<field1>: <1|\-1>, [<field2>: <1|\-1>, ...]}\f[]
.RE
.IP \[bu] 2
ShardingType ( \f[I]string\f[] ): Sharding mode, the default is "hash" sharding.
The values are as follows:
.RS 2
.IP \[bu] 2
"hash"：Hash sharding
.IP \[bu] 2
"range"：Range sharding
.PP
The collection can only exist in one data group.
.PP
Format: \f[C]ShardingType: "hash" | "range"\f[]
.RE
.IP \[bu] 2
\f[C]Partition\f[] ( \f[I]number\f[] ): It represents the number of hash
partitions, which only be filled when selecting "hash".
The default value is 4096.
.RS 2
.IP \[bu] 2
The value must be a power of 2, and the range is [2^3, 2^20].
.IP \[bu] 2
The collection can only exist in one data group.
.PP
Format: \f[C]Partition: <number>\f[]
.RE
.IP \[bu] 2
\f[C]AutoSplit\f[] ( \f[I]boolean\f[] ): Identifies whether the automatic
segmentation function is turned on.
The default value is false.
.RS 2
.IP \[bu] 2
After setting a new "hash" partition key for the collection, users can use this
option for automatic segmentation.
.IP \[bu] 2
When AutoSplit is not specified explicitly, If "AutoSplit" is not specified
before the collection is modified and the collection belongs to a non\-system
domain, the "AutoSplit" parameter of this domain will affect this setting.
.IP \[bu] 2
The "AutoSplit" is specified as false before the collection.
User need to explicitly set AutoSplit to true for automatic segmentation.
.IP \[bu] 2
"AutoSplit" can only work on "hash" partition keys.
.PP
Format: \f[C]AutoSplit: true | false\f[]
.RE
.IP \[bu] 2
\f[C]EnsureShardingIndex\f[] ( \f[I]boolean\f[] )：Identifies whether to create
a partition index and the default value is true.
.RS
.PP
\f[B]Note:\f[]
.IP \[bu] 2
The specific way of using each option refers to createCL().
.IP \[bu] 2
The partition collection cannot modify the attributes related to the partition.
.IP \[bu] 2
"EnsureShardingIndex" and "AutoSplit" are only effective for the current
operation, and only effective when modifying partition properties, such as
"ShardingKey".
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, there is no return value.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
The common exceptions of \f[C]enableSharding()\f[] function are as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Type
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-32
T}@T{
SDB_OPTION_NOT_SUPPORT
T}@T{
Options are not
T}@T{
Check the attributes of
T}
T{
T}@T{
T}@T{
T}@T{
currently supported
T}@T{
the current collection,
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
if it is a partitioned
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
collection, users
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
cannot modify the
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
attributes related to
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
the partition.
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v2.10 and above
.SH EXAMPLES
.IP \[bu] 2
Create a normal collection, and then modify the collection to a sharding
collection.
.RS 2
.IP
.nf
\f[C]
> db.sample.createCL(\[aq]employee\[aq])
> db.sample.employee.enableSharding({ShardingKey: {a: 1}, ShardingType: "hash"})
\f[]
.fi
.RE
.IP \[bu] 2
Create a normal collection, then modify the collection to a sharding collection,
and split it automatically.
.RS 2
.IP
.nf
\f[C]
> db.sample.createCL(\[aq]employee\[aq])
> db.sample.employee.enableSharding({ShardingKey: {a: 1}, ShardingType: "hash", AutoSplit: true})
\f[]
.fi
.RE
