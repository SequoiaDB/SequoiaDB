.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "count" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
count \- count the total number of eligible records in the current collection
.SH SYNOPSIS
.PP
\f[B]db.collectionspace.collection.count([cond])\f[]
.PP
\f[B]db.collectionspace.collection.count([cond]).hint([hint])\f[]
.SH CATEGORY
.PP
SdbCollection
.SH DESCRIPTION
.PP
This function is used to count the total number of eligible records in the
current collection, users can specify the index used by the query through hint.
.SH PARAMETERS
.PP
The usage of the parameters \f[C]cond\f[] and \f[C]hint\f[] is used in the same
way as find().
.SH RETURN VALUE
.PP
When the function executes successfully, it will return an object of type
CLCount.
Users can get the total number of records that meet the conditions through this
object.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
The common exceptions of \f[C]count()\f[] function are as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Type
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-6
T}@T{
SDB_INVALIDARG
T}@T{
Parameter error
T}@T{
Check whether the
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
parameters are filled
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
in correctly.
T}
T{
2
T}@T{
\-34
T}@T{
SDB_DMS_CS_NOTEXIST
T}@T{
Collection space does
T}@T{
Check whether the
T}
T{
T}@T{
T}@T{
T}@T{
not exist.
T}@T{
collection space exists.
T}
T{
3
T}@T{
\-23
T}@T{
SDB_DMS_NOTEXIST
T}@T{
Collection does not
T}@T{
Check whether the
T}
T{
T}@T{
T}@T{
T}@T{
exist.
T}@T{
collection exists.
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v1.0 and above
.SH EXAMPLES
.IP \[bu] 2
Count the number of records in the collection "sample.employee", without
specifying the parameter "cond".
.RS 2
.IP
.nf
\f[C]
db.sample.employee.count()
\f[]
.fi
.RE
.IP \[bu] 2
Count the number of records that the value of the "name" field is "Tom" and the
value of the "age" field is greater than 25.
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.count({name: "Tom", age: {$gt: 25}})
\f[]
.fi
.RE
.IP \[bu] 2
Count the number of records that the value of the "name" field is "Tom" and the
value of the "age" field is greater than 25, using the index "nameIdx".
.RS 2
.IP
.nf
\f[C]
> db.sample.employee.count({name: "Tom", age: {$gt: 25}}).hint({"": "nameIdx"})
\f[]
.fi
.RE
