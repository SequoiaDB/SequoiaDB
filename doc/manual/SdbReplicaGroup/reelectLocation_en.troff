.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "reelectLocation" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
reelectLocation \- reelect the primary node in the position set
.SH SYNOPSIS
.PP
\f[B]rg.reelectLocation(<location>, [options])\f[]
.SH CATEGORY
.PP
SdbReplicaGroup
.SH DESCRIPTION
.PP
This function is used to reelect the primary node of the specified position set
in the current replication group.
.SH PARAMETERS
.IP \[bu] 2
location ( \f[I]string, required\f[] )
.RS 2
.PP
Location information.
.RE
.IP \[bu] 2
options ( \f[I]object, optional\f[] )
.RS 2
.PP
Set the matching conditions of the primary node through the parameter "options":
.IP \[bu] 2
Seconds ( \f[I]number\f[] ): Election timeout, the default value is 30, the unit
is second.
.RS 2
.PP
Format: \f[C]Seconds: 50\f[]
.RE
.IP \[bu] 2
NodeID ( \f[I]number\f[] ): The node ID of the desired primary node.
.RS 2
.PP
Format: \f[C]NodeID: 1000\f[]
.RE
.IP \[bu] 2
HostName ( \f[I]string\f[] ): The hostname of the desired primary node.
.RS 2
.PP
If the parameter "NodeID" is specified, this parameter will not take effect.
.PP
Format: \f[C]HostName: "hostname"\f[]
.RE
.IP \[bu] 2
ServiceName ( \f[I]string\f[] ): The service name of the desired primary node.
.RS 2
.PP
If the parameter "NodeID" is specified, this parameter will not take effect.
.PP
Format: \f[C]ServiceName: "11820"\f[]
.RE
.RE
.RS
.PP
\f[B]Note:\f[]
.IP \[bu] 2
When multiple nodes are matched, the primary node will be randomly selected
among the matched nodes.
.IP \[bu] 2
If the parameters "NodeID", "HostName" and "ServiceName" are not specified, the
system will automatically match nodes according to Election Mechanism.
.IP \[bu] 2
If the parameters "HostName" and "ServiceName" are specified at the same time,
when the parameters are in effect, nodes that meet both conditions will be
matched.
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, there is no return value.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
The common exceptions of \f[C]reelectLocation()\f[] function are as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Type
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-6
T}@T{
SDB_INVALIDARG
T}@T{
Parameter type error.
T}@T{
Check whether the
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
parameter type is
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
correct.
T}
T{
2
T}@T{
\-259
T}@T{
SDB_OUT_OF_BOUND
T}@T{
Required parameters not
T}@T{
Check whether there are
T}
T{
T}@T{
T}@T{
T}@T{
specified.
T}@T{
required parameters
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
missing.
T}
T{
3
T}@T{
\-334
T}@T{
SDB_OPERATION_CONFLICT
T}@T{
The value of the
T}@T{
Currently, the
T}
T{
T}@T{
T}@T{
T}@T{
parameter "location" is
T}@T{
reelection operation is
T}
T{
T}@T{
T}@T{
T}@T{
the primary location
T}@T{
not supported in the
T}
T{
T}@T{
T}@T{
T}@T{
set.
T}@T{
primary location set,
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
users need to check
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
whether the value of
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
the parameter "location
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
" is correct.
T}
T{
4
T}@T{
\-395
T}@T{
SDB_CLS_NOT_LOCATION_
T}@T{
The location set is
T}@T{
Check the node status
T}
T{
T}@T{
T}@T{
PRIMARY
T}@T{
missing a primary node.
T}@T{
of the current location
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
set to ensure that the
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
number of available
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
nodes exceeds half of
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
the total number of
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
nodes in the location
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
set.
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v3.6.1 and above
.SH EXAMPLES
.IP "1." 3
Perform a reelection operation on the location set "GuangZhou" under the
replication group "group1", and set the node with NodeID "1000" as the primary
node.
.nf
\f[C]
> var rg = db.getRG("group1")
> rg.reelectLocation("GuangZhou", {NodeID: 1000})
\f[]
.fi
.RE
.IP "2." 3
View the primary node ID corresponding to the current location set.
.nf
\f[C]
> db.list(SDB_LIST_GROUPS, {"GroupName": "group1"}, {"Locations.Location": null, "Locations.PrimaryNode": null})
{
  "Locations": [
    {
      "Location": "GuangZhou",
      "PrimaryNode": 1000
    }
  ]
}
\f[]
.fi
.RE
