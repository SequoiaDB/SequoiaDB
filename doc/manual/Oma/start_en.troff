.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "start" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
start \- Start sdbcm service.
.SH SYNOPSIS
.PP
\f[B]Oma.start( [options] )\f[]
.SH CATEGORY
.PP
Oma
.SH DESCRIPTION
.PP
Start sdbcm service.
In general, the interface is used to temporarily start a temporary sdbcm to
complete some temporary tasks.
.SH PARAMETERS
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
Name
T}@T{
Type
T}@T{
Default
T}@T{
Description
T}@T{
Required or not
T}
_
T{
1
T}@T{
options
T}@T{
JSON
T}@T{
\-\-\-
T}@T{
Optional, see options
T}@T{
not
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
parameter description
T}@T{
T}
.TE
.PP
The detail description of \[aq]options\[aq] parameter is as follow:
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
Attributes
T}@T{
Type
T}@T{
Default
T}@T{
Format
T}@T{
Description
T}
_
T{
1
T}@T{
port
T}@T{
Int / String
T}@T{
11790
T}@T{
{ port:11790 }
T}@T{
Specify the port of
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
T}@T{
sdbcm
T}
T{
2
T}@T{
alivetime
T}@T{
Int / String
T}@T{
300
T}@T{
{ alivetime:300 }
T}@T{
Service survival time
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
T}@T{
in seconds
T}
T{
3
T}@T{
standalone
T}@T{
Bool
T}@T{
false
T}@T{
{ standalone:false }
T}@T{
Whether to start in
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
T}@T{
standalone mode
T}
.TE
.RS
.PP
Note:
.RE
.RS
.IP "1." 3
A machine normally has only one sdbcm service, but you can start a temporary
sdbcm service in standalone mode.
.RE
.RS
.IP "2." 3
The alivetime parameter is valid only when the standalone parameter is true, and
when the alivetime ends, the temporary sdbcm service ends automatically.
.RE
.SH RETURN VALUE
.PP
There is no return value.
On error, exception will be thrown.
.SH ERRORS
.PP
When exception happens, use getLastError() to get the error code and use
getLastErrMsg() to get error message.
For more detial, please reference to Troubleshooting.
.SH EXAMPLES
.IP \[bu] 2
Start a temporary sdbcm service through standalone mode and specify port 11780,
the temporary sdbcm service alive time is 5 minutes(300 seconds).
.RS 2
.IP
.nf
\f[C]
> Oma.start({ port:11780,standalone:true })
Success: sdbcm(11780) is successfully start (28741)
\f[]
.fi
.RE
