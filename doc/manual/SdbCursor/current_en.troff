.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "current" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
current \- get the record pointed to by the current cursor
.SH SYNOPSIS
.PP
\f[B]cursor.current()\f[]
.SH CATEGORY
.PP
SdbCursor
.SH DESCRIPTION
.PP
This function is used to get the record pointed to by the current cursor, more
content can refer to next().
.SH PARAMETERS
.PP
None
.SH RETURN VALUE
.PP
When the function executes successfully, if the cursor has a record to return,
it will return an object of type BSONObj; Otherwise, it will return an object of
type null.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
The common exceptions of \f[C]current()\f[] function are as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Type
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-29
T}@T{
SDB_DMS_EOC
T}@T{
When the server returns
T}@T{
Under any condition,
T}
T{
T}@T{
T}@T{
T}@T{
no records, If user
T}@T{
Users should first use
T}
T{
T}@T{
T}@T{
T}@T{
gets the first record
T}@T{
the next() interface of
T}
T{
T}@T{
T}@T{
T}@T{
through the current()
T}@T{
the cursor to get the
T}
T{
T}@T{
T}@T{
T}@T{
interface, it will fail.
T}@T{
first record.
When no
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
record is returned from
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
the server, next()
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
interface will return
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
null instead of
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
throwing a \-29 error.
T}
T{
2
T}@T{
\-31
T}@T{
SDB_DMS_CONTEXT_IS_
T}@T{
Context closed.
T}@T{
Confirm whether the
T}
T{
T}@T{
T}@T{
CLOSE
T}@T{
T}@T{
query records are 0.
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v3.0 and above
.SH EXAMPLES
.PP
Select the record of "a" is 1 in the collection "employee", returns the record
pointed to by the current cursor.
.IP
.nf
\f[C]
> var cur = db.sample.employee.find({a: 1});
> var obj = null;
> while((obj = cur.next() != null)){
    println("Record is:" + cur.current());
}
Record is:{
"_id": {
    "$oid": "60470a4db354306ff89cd355"
},
"a": 1
}
\f[]
.fi
