.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "createSequence" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
createSequence \- create a sequence in current database
.SH SYNOPSIS
.PP
\f[B]db.createSequence(<name>, [options])\f[]
.SH CATEGORY
.PP
Sdb
.SH DESCRIPTION
.PP
Create a sequence in current database.
.SH PARAMETERS
.IP \[bu] 2
name ( \f[I]string\f[], \f[I]required\f[] )
.RS 2
.PP
Sequence name.
It cannot begin with \[aq]SYS\[aq] or \[aq]$\[aq].
.RE
.IP \[bu] 2
options ( \f[I]object\f[], \f[I]optional\f[] )
.RS 2
.PP
The sequence attributes.
.IP "1." 3
StartValue ( \f[I]number\f[] )
.RS 4
.PP
The start value of the sequence.
The default value is 1.
.RE
.IP "2." 3
MinValue ( \f[I]number\f[] )
.RS 4
.PP
The minimum value of the sequence.
The default value is 1.
.RE
.IP "3." 3
MaxValue ( \f[I]number\f[] )
.RS 4
.PP
The maximum value of the sequence.
The default value is 2^63 \-1.
.RE
.IP "4." 3
Increment ( \f[I]number\f[] )
.RS 4
.PP
Each increase in the interval.
The default value is 1.
It can be positive or negative integers, but cannot be 0.
.RE
.IP "5." 3
CacheSize ( \f[I]number\f[] )
.RS 4
.PP
The number of sequence values that the catalog node caches each time.
The default value is 1000.
It must be greater than zero.
.RE
.IP "6." 3
AcquireSize ( \f[I]number\f[] )
.RS 4
.PP
The number of sequence values that the coordinate node acquires each time.
The default value is 1000.
It must be less than or equal to CacheSize.
.RE
.IP "7." 3
Cycled ( \f[I]boolean\f[] )
.RS 4
.PP
Whether loops are allowed when sequence values reach a maximum or minimum value.
Its default value is false.
.RE
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, it will return the created sequence
object.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
Frequent exceptions of \f[C]createSequence()\f[]:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Name
T}@T{
Causes
T}@T{
Solution
T}
_
T{
1
T}@T{
\-323
T}@T{
SDB_SEQUENCE_EXIST
T}@T{
Sequence already exists
T}@T{
Check for sequence
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
existence
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v3.4.2 and above
.SH EXAMPLES
.PP
Create a sequence with options, and operate it.
.IP
.nf
\f[C]
> var sequence = db.createSequence( "IDSequence", { Cycled: true } )
> sequence.help()
> sequence.getNextValue()
\f[]
.fi
