.\" Automatically generated by Pandoc 1.18
.\"
.TH "createProcedure" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
createProcedure \- create a stored procedure
.SH SYNOPSIS
.PP
\f[B]db.createProcedure(<code>)\f[]
.SH CATEGORY
.PP
Sdb
.SH DESCRIPTION
.PP
This function is used to create a stored procedure in a database object.
.SH PARAMETERS
.PP
code ( \f[I]function, required\f[] )
.PP
Specify a custom function that conforms to JavaScript syntax.
The format is as follows:
.IP
.nf
\f[C]
function functionName(parameters) {
  function body
}
\f[]
.fi
.IP \[bu] 2
Other functions can be called in the function body.
If users call a function that does not exist, users need to ensure that the
relevant function already exists when the stored procedure is running.
.IP \[bu] 2
The function name is globally unique and does not support overloading.
.IP \[bu] 2
Each function is available globally, and random deletion of a function may cause
the associated stored procedure to fail.
.IP \[bu] 2
The stored procedure will shield all standard output and standard error.
At the same time, it is not recommended to add output statements during function
definition or execution.
A large amount of output may cause the stored procedure to fail.
.IP \[bu] 2
The return value of a function can be any data type except Sdb.
.RS
.PP
\f[B]Note:\f[]
.PP
The cluster deployed in standalone mode does not support the creation of stored
procedures.
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, there is no return value.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v2.0 and above
.SH EXAMPLES
.PP
The following records exist in the collection sample.employee:
.IP
.nf
\f[C]
{id: 1, Name: "Jack", age: 25}
\f[]
.fi
.IP "1." 3
Connect the coordination node.
.nf
\f[C]
> var coord = new Sdb("sdbserver", 11810)
\f[]
.fi
.RE
.IP "2." 3
Create a stored procedure.
.nf
\f[C]
> coord.createProcedure(function getAll() { return db.sample.employee.find(); })
\f[]
.fi
.RS
.PP
\f[B]Note:\f[]
.PP
db has been initialized in the stored procedure.
Users can use the global db to refer to the authentication information
corresponding to the session in which the stored procedure is executed.
.RE
.RE
.IP "3." 3
Execute the stored procedure through eval().
.nf
\f[C]
> coord.eval("getAll()")
{
  "_id": {
    "$oid": "60cd4c2e1a52b21546a15826"
  },
  "id": 1,
  "Name": "Jack",
  "age": 25
}
\f[]
.fi
.RE
.PP
Users can view the created stored procedure information through
listProcedures().
