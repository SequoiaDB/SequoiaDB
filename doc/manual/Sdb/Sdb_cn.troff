.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "Sdb" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH 名称
.PP
Sdb \- SequoiaDB 连接对象。
.SH 语法
.PP
\f[B]var db = new Sdb( [hostname], [svcname] )\f[]
.PP
\f[B]var db = new Sdb( [hostname], [svcname], [username], [password] )\f[]
.PP
\f[B]var db = new Sdb( [hostname], [svcname], [User] )\f[]
.PP
\f[B]var db = new Sdb( [hostname], [svcname], [CipherUser] )\f[]
.SH 类别
.PP
Sdb
.SH 描述
.PP
新建一个 Sdb 对象，用于连接 SequoiaDB。
.SH 参数
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
参数名
T}@T{
参数类型
T}@T{
默认值
T}@T{
描述
T}@T{
是否必填
T}
_
T{
1
T}@T{
hostname
T}@T{
string
T}@T{
localhost
T}@T{
主机名
T}@T{
否
T}
T{
2
T}@T{
svcname
T}@T{
int
T}@T{
11810
T}@T{
节点端口号
T}@T{
否
T}
T{
3
T}@T{
username
T}@T{
string
T}@T{
默认为空（\[aq]\[aq]）
T}@T{
用户名
T}@T{
否
T}
T{
4
T}@T{
password
T}@T{
string
T}@T{
默认为空（\[aq]\[aq]）
T}@T{
密码
T}@T{
否
T}
T{
5
T}@T{
User
T}@T{
object
T}@T{
\-\-\-
T}@T{
User 对象
T}@T{
否
T}
T{
6
T}@T{
CipherUser
T}@T{
object
T}@T{
\-\-\-
T}@T{
CipherUser 对象
T}@T{
否
T}
.TE
.RS
.PP
\f[B]Note:\f[]
.RE
.RS
.IP \[bu] 2
可以通过 createUsr() 创建 SequoiaDB 的用户，并设置对应的密码。
.RE
.RS
.IP \[bu] 2
当 SequoiaDB 没有用户时，创建 Sdb 对象可以不使用 username 和
password，否则必须使用相应的 username 和 password 去创建 Sdb 对象。
.RE
.SH 返回值
.PP
成功：返回 Sdb 对象。
.PP
失败：抛出异常。
.SH 错误
.PP
\f[C]Sdb()\f[]函数常见异常如下：
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
错误码
T}@T{
错误类型
T}@T{
描述
T}@T{
解决方法
T}
_
T{
1
T}@T{
\-15
T}@T{
SDB_NETWORK
T}@T{
网络错误
T}@T{
检查填写的地址
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
或者端口是否可
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
达。
T}
T{
2
T}@T{
\-79
T}@T{
SDB_NET_CANNOT_CONNECT
T}@T{
无法连接指定的
T}@T{
检查地址、端口
T}
T{
T}@T{
T}@T{
T}@T{
地址
T}@T{
以及节点的配置
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
信息是否正确。
T}
T{
3
T}@T{
\-104
T}@T{
SDB_CLS_NOT_PRIMARY
T}@T{
分区组不存在主
T}@T{
检查当前分区组
T}
T{
T}@T{
T}@T{
T}@T{
节点
T}@T{
是否存在 "IsPrimary
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
" 为 "true" 的节点。
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
若当前分区组存
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
在节点未启，请
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
启动节点。
T}
T{
4
T}@T{
\-250
T}@T{
SDB_CLS_NODE_BSFAULT
T}@T{
节点状态不正确
T}@T{
检查节点状态，
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
如检查 catalog 节
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
点是否启动。
T}
.TE
.PP
如果出错则抛异常，并输出错误信息，可以通过 getLastErrMsg() 获取错误信息或通过
getLastError() 获取错误码。 关于错误处理可以参考常见错误处理指南。
.PP
常见错误可参考错误码。
.SH 版本
.PP
v1.12及以上版本。
.SH 示例
.IP "1." 3
连接默认主机上的 SequoiaDB，hostname 默认为 "localhost"，svcname 默认为 11810。
.nf
\f[C]
> var db = new Sdb()
\f[]
.fi
.RE
.IP "2." 3
连接指定机器上的 SequoiaDB，目标机器 "sdbserver1"。
.nf
\f[C]
> var db = new Sdb( "sdbserver1", 11810 )
\f[]
.fi
.RE
.IP "3." 3
使用用户名和密码连接指定机器上的 SequoiaDB。
.nf
\f[C]
> var db = new Sdb( "sdbserver1", 11810, "sdbadmin", "sdbadmin" )
\f[]
.fi
.RE
.IP "4." 3
使用 User 对象连接指定机器上的 SequoiaDB。
.nf
\f[C]
> var a = User( "sdbadmin" ).promptPassword()
password:
sdbadmin
> var db = new Sdb( "sdbserver1", 11810, a )
\f[]
.fi
.RE
.IP "5." 3
使用 CipherUser 对象连接指定机器上的 SequoiaDB（密文文件中必须存在用户名为
sdbadmin，密码为 sdbadmin
的用户信息，关于如何在密文文件中添加删除密文信息，详细可见sdbpasswd）。
.nf
\f[C]
> var a = CipherUser( "sdbadmin" )
> var db = new Sdb( "sdbserver1", 11810, a )
\f[]
.fi
.RE
