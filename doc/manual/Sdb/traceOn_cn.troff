.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "traceOn" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH 名称
.PP
traceOn \- 开启数据库引擎跟踪功能
.SH 语法
.PP
\f[B]db.traceOn( <bufferSize>, [strComp], [strBreakPoint], [tids] )\f[]
.PP
\f[B]db.traceOn( <bufferSize>, [SdbTraceOption] )\f[]
.SH 类别
.PP
Sdb
.SH 描述
.PP
该函数用于将每个命令执行过程中的每个函数调用都记录在内存缓冲区中。
.SH 参数
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
参数名
T}@T{
类型
T}@T{
默认值
T}@T{
描述
T}@T{
是否必填
T}
_
T{
1
T}@T{
bufferSize
T}@T{
number
T}@T{
\-\-\-
T}@T{
开启追踪的文件
T}@T{
是
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
大小，单位为兆
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
字节，取值范围
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
为[1,1024]
T}@T{
T}
T{
2
T}@T{
strComp
T}@T{
string
T}@T{
所有模块
T}@T{
指定模块，可选
T}@T{
否
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
模块请参考
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
component
T}@T{
T}
T{
3
T}@T{
strBreakPoint
T}@T{
string
T}@T{
\-\-\-
T}@T{
在指定函数处打
T}@T{
否
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
断点进行跟踪（
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
最多可指定 10 个
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
断点）
T}@T{
T}
T{
4
T}@T{
tids
T}@T{
array
T}@T{
所有线程
T}@T{
指定单个或多个
T}@T{
否
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
线程 tid（最多可
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
指定 10 个线程号
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
）
T}@T{
T}
T{
5
T}@T{
SdbTraceOption
T}@T{
SdbTraceOption
T}@T{
\-\-\-
T}@T{
使用一个对象来
T}@T{
否
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
指定监控参数，
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
使用方法可参考
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
SdbTraceOption
T}@T{
T}
.TE
.SH 返回值
.PP
函数执行成功时，无返回值。
.PP
函数执行失败时，将抛异常并输出错误信息。
.SH 错误
.PP
\f[C]traceOn()\f[] 函数常见异常如下：
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
错误码
T}@T{
错误类型
T}@T{
可能发生的原因
T}@T{
解决方法
T}
_
T{
1
T}@T{
\-187
T}@T{
SDB_PD_TRACE_IS_STARTED
T}@T{
跟踪已经启动
T}@T{
当前已启动数据
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
库引擎跟踪功能，
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
不能重复启动
T}
T{
2
T}@T{
\-212
T}@T{
SDB_TOO_MANY_TRACE_BP
T}@T{
跟踪断点数量过
T}@T{
断点指定的数量
T}
T{
T}@T{
T}@T{
T}@T{
多
T}@T{
不能超过 10 个
T}
T{
3
T}@T{
\-307
T}@T{
SDB_OSS_UP_TO_LIMIT
T}@T{
达到最大或最小
T}@T{
线程号、函数名
T}
T{
T}@T{
T}@T{
T}@T{
限制
T}@T{
或者线程类型指
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
定的数量不能超
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
过 10 个
T}
.TE
.PP
当异常抛出时，可以通过 getLastErrMsg() 获取错误信息或通过 getLastError()
获取错误码。更多错误处理可以参考常见错误处理指南。
.SH 版本
.PP
v1.0 及以上版本
.SH 示例
.IP \[bu] 2
开启数据库引擎程序跟踪的功能
.RS 2
.IP
.nf
\f[C]
> db.traceOn( 256 )
\f[]
.fi
.RE
.RS
.PP
\f[B]Note:\f[]
.PP
db.traceOn() 只对 db 所连接的节点进行跟踪。
.RE
.IP \[bu] 2
开启数据库引擎程序跟踪功能，并指定模块名称、断点和多个 tid 进行跟踪
.PP
\f[C]lang\-javascript    > db.traceOn( 256, "cls, dms, mth", "_dmsTempSUMgr::init", [12712, 12713, 12714] )\f[]
.PP
也可以通过 SdbTraceOption 指定监控参数
.PP
\f[C]lang\-javascript    > db.traceOn( 256, new SdbTraceOption().components( "cls", dms", "mth" ).breakPoints( "_dmsTempSUMgr::init" ).tids( [12712, 12713, 12714] ) )\f[]
.IP \[bu] 2
查看当前程序跟踪的状态
.RS 2
.IP
.nf
\f[C]
> db.traceStatus()
\f[]
.fi
.RE
.RS
.PP
\f[B]Note:\f[]
.PP
可参考 traceStatus()
.RE
.IP \[bu] 2
当被跟踪的模块遇到断点被阻塞，可以执行如下语句唤醒被跟踪的模块：
.RS 2
.IP
.nf
\f[C]
> db.traceResume()
\f[]
.fi
.RE
.RS
.PP
\f[B]Note:\f[]
.PP
可参考 traceResume()
.RE
.IP \[bu] 2
关闭数据库引擎跟踪，并将跟踪情况导出二进制文件
\f[C]/opt/sequoiadb/trace.dump\f[]
.RS 2
.IP
.nf
\f[C]
> db.traceOff("/opt/sequoiadb/trace.dump")
\f[]
.fi
.RE
.RS
.PP
\f[B]Note:\f[]
.PP
可参考 traceOff()
.RE
.IP \[bu] 2
解析二进制文件
.RS 2
.IP
.nf
\f[C]
> traceFmt( 0, "/opt/sequoiadb/trace.dump", "/opt/sequoiadb/trace.flw" )
\f[]
.fi
.RE
.RS
.PP
\f[B]Note:\f[]
.PP
可参考 traceFmt()
.RE
