.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "sync" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
sync \- persist data and logs to disk
.SH SYNOPSIS
.PP
\f[B]db.sync([options])\f[]
.SH CATEGORY
.PP
Sdb
.SH DESCRIPTION
.PP
This function is used to persist data and logs to disk.
.SH PARAMETERS
.PP
options ( \f[I]object, optional\f[] )
.PP
Through the options parameter, users can set the depth brushing, blocking mode,
designated collection space and command position parameterï¼š
.IP \[bu] 2
Deep ( \f[I]number\f[] ): Whether to open the deep brush.
The default value is 1.
.RS 2
.PP
The values are as follows:
.IP \[bu] 2
0: not open
.IP \[bu] 2
1: open
.IP \[bu] 2
\-1: that the server\-side default configuration is used
.PP
Deep value is compatible with boolean type.
.PP
Format: \f[C]Deep: 1\f[]
.RE
.IP \[bu] 2
Block ( \f[I]boolean\f[] ): Whether to block all change operations during
persistence.
The default value is false.
.RS 2
.PP
Format: \f[C]Block: false\f[]
.RE
.IP \[bu] 2
CollectionSpace ( \f[I]string\f[] ): Specify the persistent collection space
name.
.RS 2
.PP
If this parameter is specified, only the collection space will be persisted,
otherwise all collection spaces and log files will be persisted.
.PP
Format: \f[C]CollectionSpace: "sample"\f[]
.RE
.IP \[bu] 2
Location Elements: Command position parameter item.
.RS 2
.PP
Format: \f[C]GroupName: "db1"\f[]
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, there is no return value.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
The common expretions of \f[C]sync()\f[] function are as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Type
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-67
T}@T{
SDB_BACKUP_HAS_ALREADY_
T}@T{
Conflict with offline
T}@T{
Turn off \[aq]blocking mode
T}
T{
T}@T{
T}@T{
START
T}@T{
backup task.
T}@T{
\[aq] and try again.
T}
T{
2
T}@T{
\-149
T}@T{
SDB_REBUILD_HAS_ALREADY
T}@T{
Conflict with local
T}@T{
Turn off \[aq]blocking mode
T}
T{
T}@T{
T}@T{
_START
T}@T{
reconstruction task.
T}@T{
\[aq] and try again.
T}
T{
3
T}@T{
\-148
T}@T{
SDB_DMS_STATE_NOT_
T}@T{
Conflict with other
T}@T{
Turn off \[aq]blocking mode
T}
T{
T}@T{
T}@T{
COMPATIBLE
T}@T{
blocking operations(
T}@T{
\[aq] and try again.
T}
T{
T}@T{
T}@T{
T}@T{
such as other sync
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
operations).
T}@T{
T}
T{
4
T}@T{
\-34
T}@T{
SDB_DMS_CS_NOTEXIST
T}@T{
Specified collection
T}@T{
Confirm whether the
T}
T{
T}@T{
T}@T{
T}@T{
space does not exist.
T}@T{
collection space exists.
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v2.8 and above
.SH EXAMPLES
.IP \[bu] 2
Deeply persist all the collextion space and logs of the whole system.
.RS 2
.IP
.nf
\f[C]
> db.sync()
\f[]
.fi
.RE
.IP \[bu] 2
Deeply persist the specified collection space "sample".
.RS 2
.IP
.nf
\f[C]
> db.sync({CollectionSpace: "sample"})
\f[]
.fi
.RE
.IP \[bu] 2
Perform deep and blocking persistence for the specified data group "group1".
.RS 2
.IP
.nf
\f[C]
> db.sync({GroupName: "group1", Block: true})
\f[]
.fi
.RE
