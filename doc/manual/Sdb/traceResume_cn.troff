.\" Automatically generated by Pandoc 1.18
.\"
.TH "traceResume" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH 名称
.PP
traceResume \- 重新开启断点跟踪程序
.SH 语法
.PP
\f[B]db.traceResume()\f[]
.SH 类别
.PP
Sdb
.SH 描述
.PP
该函数用于重新开启断点跟踪程序。 db.traceOn()
指定断点开启数据库引擎程序跟踪功能，当被跟踪的模块遇到断点被阻塞，
db.traceResume() 可以唤醒被跟踪的模块。
.SH 参数
.PP
无
.SH 返回值
.PP
函数执行成功时，无返回值。
.PP
函数执行失败时，将抛异常并输出错误信息。
.SH 错误
.PP
当异常抛出时，可以通过 getLastErrMsg() 获取错误信息或通过 getLastError()
获取错误码。更多错误处理可以参考常见错误处理指南。
.SH 版本
.PP
v2.0 及以上版本
.SH 示例
.IP \[bu] 2
连接数据节点 20000，开启数据库引擎程序跟踪的功能
.RS 2
.IP
.nf
\f[C]
> var data = new Sdb( "localhost", 20000 )
> data.traceOn( 1000, "dms", "_dmsStorageUnit::insertRecord" )
\f[]
.fi
.RE
.IP \[bu] 2
连接到协调节点 50000， sample.employee 集合落在数据节点 20000
上，执行插入操作，操作会被阻塞无法完成
.RS 2
.IP
.nf
\f[C]
> var db = new Sdb( "localhost", 50000 )
> db.sample.employee.insert( { _id: 1, name: "a" } )
\f[]
.fi
.RE
.IP \[bu] 2
重新开启断点跟踪程序，插入操作执行成功，并返回结果
.RS 2
.IP
.nf
\f[C]
> data.traceResume()
\f[]
.fi
.RE
.IP \[bu] 2
查看当前断点跟踪程序的状态可参考traceStatus()
.RS 2
.IP
.nf
\f[C]
> data.traceStatus()
\f[]
.fi
.RE
