.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "listRoles" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
listRoles \- Get Information of All Roles
.SH SYNOPSIS
.PP
\f[B]db.listRoles([options])\f[]
.SH CATEGORY
.PP
Sdb
.SH DESCRIPTION
.PP
This function is used to get information about all custom roles and built\-in
roles.
.SH PARAMETERS
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Parameter
T}@T{
Type
T}@T{
Required
T}@T{
Description
T}
_
T{
1
T}@T{
options
T}@T{
\f[I]object\f[]
T}@T{
No
T}@T{
Additional parameters.
T}
T{
2
T}@T{
ShowPrivileges
T}@T{
\f[I]boolean\f[]
T}@T{
No
T}@T{
Show the privileges of
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
roles.
Default value is
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
\f[C]false\f[].
T}
T{
3
T}@T{
ShowBuiltinRoles
T}@T{
\f[I]boolean\f[]
T}@T{
No
T}@T{
Additional get built\-in
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
roles.
Default value
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
is \f[C]false\f[].
T}
.TE
.SH RETURN VALUE
.PP
Upon successful execution, this function will return a SdbCursor object through
which the roles information can be obtained.
.PP
Upon failure, it throws an exception and outputs an error message.
.SH ERRORS
.PP
When an exception is thrown, you can retrieve the error message using
getLastErrMsg() or the error code using getLastError().
For more error handling, refer to the Common Error Handling Guide.
.SH VERSION
.PP
v5.8 and above
.SH EXAMPLES
.IP \[bu] 2
Print all custom roles in the cluster, without enabling the
\f[C]ShowPrivileges\f[] option.
.RS 2
.IP
.nf
\f[C]
> db.listRoles()
{
    "_id": {
        "$oid": "64c0eb5e8c7c328f60bc6d71"
    },
    "Role": "foo_developer",
    "Roles": [
        "_foo.readWrite"
    ],
    "InheritedRoles": [
        "_foo.readWrite"
    ]
}
\f[]
.fi
.RE
.IP \[bu] 2
Print all custom roles in the cluster, enabling the \f[C]ShowPrivileges\f[]
option.
.RS 2
.IP
.nf
\f[C]
> db.listRoles({ShowPrivileges:true})
{
    "_id": {
        "$oid": "64c0eb5e8c7c328f60bc6d71"
    },
    "Role": "foo_developer",
    "Privileges": [
        {
        "Resource": {
        "Cluster": true
        },
        "Actions": [
        "snapshot"
        ]
        }
    ],
    "Roles": [
        "_foo.readWrite"
    ],
    "InheritedRoles": [
        "_foo.readWrite"
    ],
    "InheritedPrivileges": [
        {
        "Resource": {
        "Cluster": true
        },
        "Actions": [
        "snapshot"
        ]
        },
        {
        "Resource": {
        "cs": "foo",
        "cl": ""
        },
        "Actions": [
        "find",
        "insert",
        "update",
        "remove",
        "getDetail"
        ]
        }
    ]
}
\f[]
.fi
.RE
.IP \[bu] 2
Print all custom roles and built\-in roles in the cluster, enabling the
\f[C]ShowBuiltinRoles\f[] option.
.RS 2
.IP
.nf
\f[C]
> db.listRoles({ShowBuiltinRoles:true})
{
"Role": "_root",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_clusterAdmin",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_clusterMonitor",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_backup",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_dbAdmin",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_userAdmin",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_exact.read",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_exact.readWrite",
"Roles": [],
"InheritedRoles": []
}
{
"Role": "_exact.admin",
"Roles": [],
"InheritedRoles": []
}
\f[]
.fi
.RE
