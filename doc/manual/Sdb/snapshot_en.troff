.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "snapshot" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
snapshot \- get snapshot
.SH SYNOPSIS
.PP
\f[B]db.snapshot(<snapType>,[cond],[sel],[sort])\f[]
.PP
\f[B]db.snapshot(<snapType>,[SdbSnapshotOption])\f[]
.SH CATEGORY
.PP
Sdb
.SH DESCRIPTION
.PP
This function is used to get the specified snapshot and view the current system
status.
.SH PARAMETERS
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Name
T}@T{
Type
T}@T{
Description
T}@T{
Required or Not
T}
_
T{
1
T}@T{
snapType
T}@T{
macro
T}@T{
The snapshot to be
T}@T{
Required
T}
T{
T}@T{
T}@T{
T}@T{
obtained, the value can
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
refer to Snapshot type.
T}@T{
T}
T{
2
T}@T{
cond
T}@T{
object
T}@T{
Match condictions and
T}@T{
Not
T}
T{
T}@T{
T}@T{
T}@T{
position parameter.
T}@T{
T}
T{
3
T}@T{
sel
T}@T{
object
T}@T{
Select the returned
T}@T{
Not
T}
T{
T}@T{
T}@T{
T}@T{
field name.
When it is
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
null, return all field
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
names.
T}@T{
T}
T{
4
T}@T{
sort
T}@T{
object
T}@T{
Sort the returned
T}@T{
Not
T}
T{
T}@T{
T}@T{
T}@T{
records by the selected
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
field.
The values are
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
as follow: 1:
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
ascending \-1:
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
descending
T}@T{
T}
T{
5
T}@T{
SdbSnapshotOption
T}@T{
object
T}@T{
Use an object to
T}@T{
Not
T}
T{
T}@T{
T}@T{
T}@T{
specify the snapshot
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
query parameters, the
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
usage method can refer
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
to SdbSnapshotOption.
T}@T{
T}
.TE
.RS
.PP
\f[B]Note:\f[]
.IP \[bu] 2
sel parameter is a json structure,like:{Field name:Field value}，The field value
is generally specified as an empty string.The field name specified in sel exists
in the record,setting the field value does not take effect;return the field name
and field value specified in the sel otherwise.
.IP \[bu] 2
The field value type in the record is an array.User can specify the field name
in sel,and use "." operator with double marks ("") to refer to the array
elements.
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, it will return an object of type
SdbCursor.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
When the exception happens，use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v2.0 and above
.SH EXAMPLES
.IP \[bu] 2
Specify the value of snapType as SDB_LIST_CONTEXTS.
.RS 2
.IP
.nf
\f[C]
> db.snapshot( SDB_SNAP_CONTEXTS )
{
  "SessionID": "vmsvr1\-cent\-x64\-1:11820:22",
  "Contexts": [
    {
      "ContextID": 8,
      "Type": "DUMP",
      "Description": "BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2013\-12\-28\-16.07.59.146399"
    }
  ]
}
{
  "SessionID": "vmsvr1\-cent\-x64\-1:11830:22",
  "Contexts": [
    {
      "ContextID": 6,
      "Type": "DUMP",
      "Description": "BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2013\-12\-28\-16.07.59.147576"
    }
  ]
}
{
  "SessionID": "vmsvr1\-cent\-x64\-1:11840:23",
  "Contexts": [
    {
      "ContextID": 7,
      "Type": "DUMP",
      "Description": "BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2013\-12\-28\-16.07.59.148603"
    }
  ]
}
\f[]
.fi
.RE
.IP \[bu] 2
Query the snapshot information of a replication group by group name or group ID.
.RS 2
.IP
.nf
\f[C]
> db.snapshot( SDB_SNAP_CONTEXTS, { GroupName:\[aq]data1\[aq] } )
> db.snapshot(SDB_SNAP_CONTEXTS,{GroupID:1000})
{
  "SessionID": "vmsvr1\-cent\-x64\-1:11820:22",
  "Contexts": [
    {
      "ContextID": 11,
      "Type": "DUMP",
      "Description": "BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2013\-12\-28\-16.13.57.864245"
    }
  ]
}
{
  "SessionID": "vmsvr1\-cent\-x64\-1:11840:23",
  "Contexts": [
    {
      "ContextID": 10,
      "Type": "DUMP",
      "Description": "BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2013\-12\-28\-16.13.57.865103"
    }
  ]
}
\f[]
.fi
.RE
.IP \[bu] 2
Query the snapshot information of a node by specifying the group name, host name
and service name, or specifying the group ID and node ID.
.RS 2
.IP
.nf
\f[C]
> db.snapshot( SDB_SNAP_CONTEXTS, { GroupName: \[aq]data1\[aq], HostName: "vmsvr1\-cent\-x64\-1", svcname: "11820" } )
> db.snapshot(SDB_SNAP_CONTEXTS,{GroupID:1000,NodeID:1001})
{
  "SessionID": "vmsvr1\-cent\-x64\-1:11820:22",
  "Contexts": [
    {
      "ContextID": 11,
      "Type": "DUMP",
      "Description": "BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2013\-12\-28\-16.13.57.864245"
    }
  ]
}
\f[]
.fi
.RE
.IP \[bu] 2
Query the snapshot information of a node by specifying the host name and service
name.
.RS 2
.IP
.nf
\f[C]
> db.snapshot( SDB_SNAP_CONTEXTS, { HostName: "ubuntu\-200\-043", svcname: "11820" } )
{
  "NodeName": "ubuntu\-200\-043:11820",
  "SessionID": 18,
  "Contexts": [
    {
      "ContextID": 31,
      "Type": "DUMP",
      "Description": "IsOpened:1,HitEnd:0,BufferSize:0",
      "DataRead": 0,
      "IndexRead": 0,
      "QueryTimeSpent": 0,
      "StartTimestamp": "2016\-10\-27\-17.53.45.042061"
    }
  ]
}
\f[]
.fi
.RE
.IP \[bu] 2
Return the original data before coord aggregation.
.RS 2
.IP
.nf
\f[C]
> db.snapshot( SDB_SNAP_DATABASE, { RawData: true } ,{ NodeName: null, GroupName: null, TotalDataRead: null } )
{
  "NodeName": "ubuntu1604\-yt:30000",
  "GroupName": "SYSCatalogGroup",
  "TotalDataRead": 276511
}
{
  "NodeName": "ubuntu1604\-yt:20000",
  "GroupName": "db1",
  "TotalDataRead": 16542209
}
{
  "NodeName": "ubuntu1604\-yt:40000",
  "GroupName": "db2",
  "TotalDataRead": 959
}
Return 3 row(s).
\f[]
.fi
.RE
