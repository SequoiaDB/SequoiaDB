.\" Automatically generated by Pandoc 1.18
.\"
.TH "fetch" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
fetch \- get multiple continuous values from current sequence
.SH SYNOPSIS
.PP
\f[B]sequence.fetch(<num>)\f[]
.SH CATEGORY
.PP
SdbSequence
.SH DESCRIPTION
.PP
Get multiple continuous values from current sequence.
When multiple values are needed, calling this function will be faster than
calling the getNextValue() repeatedly.
You can specify the expected number to be fetched, but the returned number may
be less than the expected.
.SH PARAMETERS
.PP
num ( \f[I]number\f[], \f[I]required\f[] )
.PP
The expected number to be fetched.
.SH RETURN VALUE
.PP
When the function executes successfully, it will return an object, which has 3
fields.
\[aq]NextValue\[aq] is the first returned value; \[aq]ReturnNum\[aq] is the
number of returned values; \[aq]Increment\[aq] is the interval between values.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v3.4.2 and above
.SH EXAMPLES
.PP
Fetch sequence values.
.IP
.nf
\f[C]
> var sequence = db.createSequence( "IDSequence" )
> sequence.fetch( 10 )
{
  "NextValue": 1,
  "ReturnNum": 10,
  "Increment": 1
}
\f[]
.fi
.PP
Print the fetched values out.
.IP
.nf
\f[C]
> var result = sequence.fetch( 5 ).toObj()
> var nextValue = result.NextValue
> for (var i = 1; i < result.ReturnNum; i++) {
\&... println( nextValue );
\&... nextValue += result.Increment;
\&... }
11
12
13
14
15
\f[]
.fi
