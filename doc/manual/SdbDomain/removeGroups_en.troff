.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "removeGroups" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
removeGroups \- delete the replication group contained in the domain
.SH SYNOPSIS
.PP
\f[B]domain.removeGroups(<object>)\f[]
.SH CATEGORY
.PP
SdbDomain
.SH DESCRIPTION
.PP
This function is used to delete the replication group contained in the domain.
.SH PARAMETERS
.PP
options ( \f[I]object, required\f[] )
.PP
Specify the replication group to be deleted through the parameter "options":
.IP \[bu] 2
Groups ( \f[I]string/array\f[] ): The replication group contained in the domain.
.RS 2
.PP
Data is not allowed in the replication group specified by this parameter,
otherwise the operation will report an error.
.PP
Format: \f[C]Groups: [\[aq]group1\[aq], \[aq]group2\[aq]]\f[]
.RE
.SH RETURN VALUE
.PP
When the function executes successfully, there is no return value.
.PP
When the function fails, an exception will be thrown and an error message will
be printed.
.SH ERRORS
.PP
The common exceptions of \f[C]removeGroups()\f[] function are as follows:
.PP
.TS
tab(@);
l l l l l.
T{
0
T}@T{
Error Code
T}@T{
Error Type
T}@T{
Description
T}@T{
Solution
T}
_
T{
1
T}@T{
\-154
T}@T{
SDB_CLS_GRP_NOT_EXIST
T}@T{
Partition group does
T}@T{
Use the list to check
T}
T{
T}@T{
T}@T{
T}@T{
not exist.
T}@T{
whether the partition
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
group exists.
T}
T{
2
T}@T{
\-256
T}@T{
SDB_DOMAIN_IS_OCCUPIED
T}@T{
Domain has been used.
T}@T{
Use
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
listCollectionSpaces()
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
to check whether there
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
is a collection space
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
in the domain.
T}
.TE
.PP
When the exception happens, use getLastErrMsg() to get the error message or use
getLastError() to get the error code.
For more details, refer to Troubleshooting.
.SH VERSION
.PP
v3.4 and above
.SH EXAMPLES
.IP \[bu] 2
Create a domain containing the replication group "group1" and "group2", no data
exists in the replication groups.
.RS 2
.IP
.nf
\f[C]
> var domain = db.createDomain(\[aq]mydomain\[aq], [\[aq]group1\[aq], \[aq]group2\[aq]])
\f[]
.fi
.PP
Delete the replication group "group1" contained in the domain.
.IP
.nf
\f[C]
> domain.removeGroups({Groups: [\[aq]group1\[aq]]})
\f[]
.fi
.RE
.IP \[bu] 2
Create a domain containing the replication group "group1" with data in the
replication group.
.RS 2
.IP
.nf
\f[C]
> var domain = db.createDomain(\[aq]mydomain\[aq], [\[aq]group1\[aq]])
\f[]
.fi
.PP
Delete the replication group "group1" contained in the domain.
.IP
.nf
\f[C]
> domain.removeGroups({Groups: [\[aq]group1\[aq]]})
\f[]
.fi
.PP
Because there is data in "group1", the operation reports an error.
.IP
.nf
\f[C]
(nofile):0 uncaught exception: \-256
Domain has been used
\f[]
.fi
.RE
