.\"t
.\" Automatically generated by Pandoc 1.18
.\"
.TH "isProcExist" "1" "" "SequoiaDB User Manuals" ""
.hy
.SH NAME
.PP
isProcExist \- Determine if a process exists
.SH SYNOPSIS
.PP
\f[B]\f[I]System.isProcExist( <options> )\f[]\f[]
.SH CATEGORY
.PP
System
.SH DESCRIPTION
.PP
Determine if a process exists
.SH PARAMETERS
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
Name
T}@T{
Type
T}@T{
Default
T}@T{
Description
T}@T{
Required or not
T}
_
T{
1
T}@T{
options
T}@T{
JSON
T}@T{
\-\-\-
T}@T{
process information
T}@T{
yes
T}
.TE
.PP
The detail description of \[aq]options\[aq] parameter is as follow:
.PP
.TS
tab(@);
l l l l l l.
T{
0
T}@T{
Attributes
T}@T{
Type
T}@T{
Required or not
T}@T{
Format
T}@T{
Description
T}
_
T{
1
T}@T{
value
T}@T{
string
T}@T{
yes
T}@T{
{ value: "31831" }
T}@T{
value of the specified
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
T}@T{
type
T}
T{
2
T}@T{
type
T}@T{
string
T}@T{
not
T}@T{
if { type: "pid" },
T}@T{
specified type
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
then it means that
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
determine if a process
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
exists base on process
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
id.
if { type: "name" },
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
then it means that
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
determine if a process
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
exists base on service
T}@T{
T}
T{
T}@T{
T}@T{
T}@T{
T}@T{
name
T}@T{
T}
.TE
.SH RETURN VALUE
.PP
On success, return true if the process exists, otherwise return false.
.PP
On error, exception will be thrown.
.SH ERRORS
.PP
when exception happen, use getLastError() to get the error code and use
getLastErrMsg() to get error message.
For more detial, please reference to Troubleshooting.
.SH EXAMPLES
.IP \[bu] 2
Judging by the specified pid：
.RS 2
.IP
.nf
\f[C]
> System.isProcExist( { value: "31831", type: "pid" } )
true
\f[]
.fi
.RE
.IP \[bu] 2
Judging by the specified service name：
.RS 2
.IP
.nf
\f[C]
> System.isProcExist( { value: "sdbcm(11790)", type: "name" } )
true
\f[]
.fi
.RE
