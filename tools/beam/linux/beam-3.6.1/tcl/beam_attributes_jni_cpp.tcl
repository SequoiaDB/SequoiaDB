# -*- Tcl -*-
#
# Licensed Materials - Property of IBM - RESTRICTED MATERIALS OF IBM
#
# IBM Confidential - OCO Source Materials
#
# Copyright (C) 2007-2010 IBM Corporation. All rights reserved.
#
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp
#
# The source code for this program is not published or otherwise divested
# of its trade secrets, irrespective of what has been deposited within
# the U.S. Copyright Office.
#
#
#    AUTHOR:
#
#        Goh Kondoh
#
#    DESCRIPTION:
#
#        Attributes that relate to Java Native Interface.
#        
#    MODIFICATIONS:
#
#        Date      UserID   Remark (newest to oldest)
#        --------  -------  ----------------------------------------------------
#        See ChangeLog for recent modifications

beam::propinfo_create {               
    name = "jni exception state",  # cleared of exception, with unchecked exception or with thrown exception
    invariance = "none",    # only the object generated by a constructor has the property
    dependence = "calls",   # only some calls can change the state of a JNI environment
}

beam::function_attribute {
    property ( index = this,
               property_type = requires,
               type = input,
               property_name = "jni exception state",
               property_value = "cleared of exception" ),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "with unchecked exception" )
} -names \
  JNIEnv_::CallVoidMethod \
  JNIEnv_::CallVoidMethodV \
  JNIEnv_::CallVoidMethodA \
  JNIEnv_::CallObjectMethod \
  JNIEnv_::CallObjectMethodV \
  JNIEnv_::CallObjectMethodA \
  JNIEnv_::CallBooleanMethod \
  JNIEnv_::CallBooleanMethodV \
  JNIEnv_::CallBooleanMethodA \
  JNIEnv_::CallByteMethod \
  JNIEnv_::CallByteMethodV \
  JNIEnv_::CallByteMethodA \
  JNIEnv_::CallCharMethod \
  JNIEnv_::CallCharMethodV \
  JNIEnv_::CallCharMethodA \
  JNIEnv_::CallShortMethod \
  JNIEnv_::CallShortMethodV \
  JNIEnv_::CallShortMethodA \
  JNIEnv_::CallIntMethod \
  JNIEnv_::CallIntMethodV \
  JNIEnv_::CallIntMethodA \
  JNIEnv_::CallLongMethod \
  JNIEnv_::CallLongMethodV \
  JNIEnv_::CallLongMethodA \
  JNIEnv_::CallFloatMethod \
  JNIEnv_::CallFloatMethodV \
  JNIEnv_::CallFloatMethodA \
  JNIEnv_::CallDoubleMethod \
  JNIEnv_::CallDoubleMethodV \
  JNIEnv_::CallDoubleMethodA \
  JNIEnv_::CallNonvirtualVoidMethod \
  JNIEnv_::CallNonvirtualVoidMethodV \
  JNIEnv_::CallNonvirtualVoidMethodA \
  JNIEnv_::CallNonvirtualObjectMethod \
  JNIEnv_::CallNonvirtualObjectMethodV \
  JNIEnv_::CallNonvirtualObjectMethodA \
  JNIEnv_::CallNonvirtualBooleanMethod \
  JNIEnv_::CallNonvirtualBooleanMethodV \
  JNIEnv_::CallNonvirtualBooleanMethodA \
  JNIEnv_::CallNonvirtualByteMethod \
  JNIEnv_::CallNonvirtualByteMethodV \
  JNIEnv_::CallNonvirtualByteMethodA \
  JNIEnv_::CallNonvirtualCharMethod \
  JNIEnv_::CallNonvirtualCharMethodV \
  JNIEnv_::CallNonvirtualCharMethodA \
  JNIEnv_::CallNonvirtualShortMethod \
  JNIEnv_::CallNonvirtualShortMethodV \
  JNIEnv_::CallNonvirtualShortMethodA \
  JNIEnv_::CallNonvirtualIntMethod \
  JNIEnv_::CallNonvirtualIntMethodV \
  JNIEnv_::CallNonvirtualIntMethodA \
  JNIEnv_::CallNonvirtualLongMethod \
  JNIEnv_::CallNonvirtualLongMethodV \
  JNIEnv_::CallNonvirtualLongMethodA \
  JNIEnv_::CallNonvirtualFloatMethod \
  JNIEnv_::CallNonvirtualFloatMethodV \
  JNIEnv_::CallNonvirtualFloatMethodA \
  JNIEnv_::CallNonvirtualDoubleMethod \
  JNIEnv_::CallNonvirtualDoubleMethodV \
  JNIEnv_::CallNonvirtualDoubleMethodA \
  JNIEnv_::CallStaticVoidMethod \
  JNIEnv_::CallStaticVoidMethodV \
  JNIEnv_::CallStaticVoidMethodA \
  JNIEnv_::CallStaticObjectMethod \
  JNIEnv_::CallStaticObjectMethodV \
  JNIEnv_::CallStaticObjectMethodA \
  JNIEnv_::CallStaticBooleanMethod \
  JNIEnv_::CallStaticBooleanMethodV \
  JNIEnv_::CallStaticBooleanMethodA \
  JNIEnv_::CallStaticByteMethod \
  JNIEnv_::CallStaticByteMethodV \
  JNIEnv_::CallStaticByteMethodA \
  JNIEnv_::CallStaticCharMethod \
  JNIEnv_::CallStaticCharMethodV \
  JNIEnv_::CallStaticCharMethodA \
  JNIEnv_::CallStaticShortMethod \
  JNIEnv_::CallStaticShortMethodV \
  JNIEnv_::CallStaticShortMethodA \
  JNIEnv_::CallStaticIntMethod \
  JNIEnv_::CallStaticIntMethodV \
  JNIEnv_::CallStaticIntMethodA \
  JNIEnv_::CallStaticLongMethod \
  JNIEnv_::CallStaticLongMethodV \
  JNIEnv_::CallStaticLongMethodA \
  JNIEnv_::CallStaticFloatMethod \
  JNIEnv_::CallStaticFloatMethodV \
  JNIEnv_::CallStaticFloatMethodA \
  JNIEnv_::CallStaticDoubleMethod \
  JNIEnv_::CallStaticDoubleMethodV \
  JNIEnv_::CallStaticDoubleMethodA

beam::function_attribute {
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "with thrown exception" )
    if (index = return,
   type  = provides,
   test_type = not_equal,
   test_value = 0),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "cleared of exception" )
    if (index = return,
   type  = provides,
   test_type = equal,
   test_value = 0),
} -names JNIEnv_::ExceptionCheck JNIEnv_::ExceptionOccurred

beam::function_attribute {
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "cleared of exception" )
} -names JNIEnv_::ExceptionClear

beam::function_attribute {
    property ( index = this,
               property_type = requires,
               type = input,
               property_name = "jni exception state",
               property_value = "cleared of exception" ),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "with thrown exception" )
    if (index = return,
        type  = provides,
        test_type = equal,
        test_value = 0),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "cleared of exception" )
    if (index = return,
        type  = provides,
        test_type = not_equal,
        test_value = 0),
} -names JNIEnv_::FindClass

beam::function_attribute {
    property ( index = this,
               property_type = requires,
               type = input,
               property_name = "jni exception state",
               property_value = "cleared of exception" ),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni exception state",
               property_value = "with thrown exception" ),
} -names JNIEnv_::Throw JNIEnv_::ThrowNew

beam::function_attribute {
    allocator ( return_index = return, initial_state = initialized_to_unknown )
} -names \
  JNIEnv_::GetStringChars \
  JNIEnv_::GetStringUTFChars \
  JNIEnv_::GetBooleanArrayElements \
  JNIEnv_::GetByteArrayElements \
  JNIEnv_::GetCharArrayElements \
  JNIEnv_::GetShortArrayElements \
  JNIEnv_::GetIntArrayElements \
  JNIEnv_::GetLongArrayElements \
  JNIEnv_::GetFloatArrayElements \
  JNIEnv_::GetDoubleArrayElements

beam::function_attribute {
    deallocator ( pointer_index = 2 )
} -names \
  JNIEnv_::ReleaseStringChars \
  JNIEnv_::ReleaseStringUTFChars \
  JNIEnv_::ReleaseBooleanArrayElements \
  JNIEnv_::ReleaseByteArrayElements \
  JNIEnv_::ReleaseCharArrayElements \
  JNIEnv_::ReleaseShortArrayElements \
  JNIEnv_::ReleaseIntArrayElements \
  JNIEnv_::ReleaseLongArrayElements \
  JNIEnv_::ReleaseFloatArrayElements \
  JNIEnv_::ReleaseDoubleArrayElements

beam::function_attribute {
    allocator ( return_index = return, initial_state = initialized_to_unknown ),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni critical state",
               property_value = "critical" )
} -names JNIEnv_::GetStringCritical JNIEnv_::GetPrimitiveArrayCritical

beam::function_attribute {
    deallocator ( pointer_index = 2 ),
    property ( index = this,
               property_type = provides,
               type = output,
               property_name = "jni critical state",
               property_value = "not critical" )
} -names JNIEnv_::ReleaseStringCritical JNIEnv_::ReleasePrimitiveArrayCritical


#
# All the JNI functions must not called in a critical region
# which is between GetPrimitiveArrayCritical/GetStringCritical
# and ReleasePrimitiveArrayCritical/ReleaseStringCritical calls.
#
beam::function_attribute {
    property ( index = this,
               property_type = requires,
               type = input,
               property_name = "jni critical state",
               property_value = "not critical" ),
} -names \
  JNIEnv_::GetVersion \
  JNIEnv_::DefineClass \
  JNIEnv_::FindClass \
  JNIEnv_::FromReflectedMethod \
  JNIEnv_::FromReflectedField \
  JNIEnv_::ToReflectedMethod \
  JNIEnv_::GetSuperclass \
  JNIEnv_::IsAssignableFrom \
  JNIEnv_::ToReflectedField \
  JNIEnv_::Throw \
  JNIEnv_::ThrowNew \
  JNIEnv_::ExceptionOccurred \
  JNIEnv_::ExceptionDescribe \
  JNIEnv_::ExceptionClear \
  JNIEnv_::FatalError \
  JNIEnv_::PushLocalFrame \
  JNIEnv_::PopLocalFrame \
  JNIEnv_::NewGlobalRef \
  JNIEnv_::DeleteGlobalRef \
  JNIEnv_::DeleteLocalRef \
  JNIEnv_::IsSameObject \
  JNIEnv_::NewLocalRef \
  JNIEnv_::EnsureLocalCapacity \
  JNIEnv_::AllocObject \
  JNIEnv_::NewObject \
  JNIEnv_::NewObjectV \
  JNIEnv_::NewObjectA \
  JNIEnv_::GetObjectClass \
  JNIEnv_::IsInstanceOf \
  JNIEnv_::GetMethodID \
  JNIEnv_::CallObjectMethod \
  JNIEnv_::CallObjectMethodV \
  JNIEnv_::CallObjectMethodA \
  JNIEnv_::CallBooleanMethod \
  JNIEnv_::CallBooleanMethodV \
  JNIEnv_::CallBooleanMethodA \
  JNIEnv_::CallByteMethod \
  JNIEnv_::CallByteMethodV \
  JNIEnv_::CallByteMethodA \
  JNIEnv_::CallCharMethod \
  JNIEnv_::CallCharMethodV \
  JNIEnv_::CallCharMethodA \
  JNIEnv_::CallShortMethod \
  JNIEnv_::CallShortMethodV \
  JNIEnv_::CallShortMethodA \
  JNIEnv_::CallIntMethod \
  JNIEnv_::CallIntMethodV \
  JNIEnv_::CallIntMethodA \
  JNIEnv_::CallLongMethod \
  JNIEnv_::CallLongMethodV \
  JNIEnv_::CallLongMethodA \
  JNIEnv_::CallFloatMethod \
  JNIEnv_::CallFloatMethodV \
  JNIEnv_::CallFloatMethodA \
  JNIEnv_::CallDoubleMethod \
  JNIEnv_::CallDoubleMethodV \
  JNIEnv_::CallDoubleMethodA \
  JNIEnv_::CallVoidMethod \
  JNIEnv_::CallVoidMethodV \
  JNIEnv_::CallVoidMethodA \
  JNIEnv_::CallNonvirtualObjectMethod \
  JNIEnv_::CallNonvirtualObjectMethodV \
  JNIEnv_::CallNonvirtualObjectMethodA \
  JNIEnv_::CallNonvirtualBooleanMethod \
  JNIEnv_::CallNonvirtualBooleanMethodV \
  JNIEnv_::CallNonvirtualBooleanMethodA \
  JNIEnv_::CallNonvirtualByteMethod \
  JNIEnv_::CallNonvirtualByteMethodV \
  JNIEnv_::CallNonvirtualByteMethodA \
  JNIEnv_::CallNonvirtualCharMethod \
  JNIEnv_::CallNonvirtualCharMethodV \
  JNIEnv_::CallNonvirtualCharMethodA \
  JNIEnv_::CallNonvirtualShortMethod \
  JNIEnv_::CallNonvirtualShortMethodV \
  JNIEnv_::CallNonvirtualShortMethodA \
  JNIEnv_::CallNonvirtualIntMethod \
  JNIEnv_::CallNonvirtualIntMethodV \
  JNIEnv_::CallNonvirtualIntMethodA \
  JNIEnv_::CallNonvirtualLongMethod \
  JNIEnv_::CallNonvirtualLongMethodV \
  JNIEnv_::CallNonvirtualLongMethodA \
  JNIEnv_::CallNonvirtualFloatMethod \
  JNIEnv_::CallNonvirtualFloatMethodV \
  JNIEnv_::CallNonvirtualFloatMethodA \
  JNIEnv_::CallNonvirtualDoubleMethod \
  JNIEnv_::CallNonvirtualDoubleMethodV \
  JNIEnv_::CallNonvirtualDoubleMethodA \
  JNIEnv_::CallNonvirtualVoidMethod \
  JNIEnv_::CallNonvirtualVoidMethodV \
  JNIEnv_::CallNonvirtualVoidMethodA \
  JNIEnv_::GetFieldID \
  JNIEnv_::GetObjectField \
  JNIEnv_::GetBooleanField \
  JNIEnv_::GetByteField \
  JNIEnv_::GetCharField \
  JNIEnv_::GetShortField \
  JNIEnv_::GetIntField \
  JNIEnv_::GetLongField \
  JNIEnv_::GetFloatField \
  JNIEnv_::GetDoubleField \
  JNIEnv_::SetObjectField \
  JNIEnv_::SetBooleanField \
  JNIEnv_::SetByteField \
  JNIEnv_::SetCharField \
  JNIEnv_::SetShortField \
  JNIEnv_::SetIntField \
  JNIEnv_::SetLongField \
  JNIEnv_::SetFloatField \
  JNIEnv_::SetDoubleField \
  JNIEnv_::GetStaticMethodID \
  JNIEnv_::CallStaticObjectMethod \
  JNIEnv_::CallStaticObjectMethodV \
  JNIEnv_::CallStaticObjectMethodA \
  JNIEnv_::CallStaticBooleanMethod \
  JNIEnv_::CallStaticBooleanMethodV \
  JNIEnv_::CallStaticBooleanMethodA \
  JNIEnv_::CallStaticByteMethod \
  JNIEnv_::CallStaticByteMethodV \
  JNIEnv_::CallStaticByteMethodA \
  JNIEnv_::CallStaticCharMethod \
  JNIEnv_::CallStaticCharMethodV \
  JNIEnv_::CallStaticCharMethodA \
  JNIEnv_::CallStaticShortMethod \
  JNIEnv_::CallStaticShortMethodV \
  JNIEnv_::CallStaticShortMethodA \
  JNIEnv_::CallStaticIntMethod \
  JNIEnv_::CallStaticIntMethodV \
  JNIEnv_::CallStaticIntMethodA \
  JNIEnv_::CallStaticLongMethod \
  JNIEnv_::CallStaticLongMethodV \
  JNIEnv_::CallStaticLongMethodA \
  JNIEnv_::CallStaticFloatMethod \
  JNIEnv_::CallStaticFloatMethodV \
  JNIEnv_::CallStaticFloatMethodA \
  JNIEnv_::CallStaticDoubleMethod \
  JNIEnv_::CallStaticDoubleMethodV \
  JNIEnv_::CallStaticDoubleMethodA \
  JNIEnv_::CallStaticVoidMethod \
  JNIEnv_::CallStaticVoidMethodV \
  JNIEnv_::CallStaticVoidMethodA \
  JNIEnv_::GetStaticFieldID \
  JNIEnv_::GetStaticObjectField \
  JNIEnv_::GetStaticBooleanField \
  JNIEnv_::GetStaticByteField \
  JNIEnv_::GetStaticCharField \
  JNIEnv_::GetStaticShortField \
  JNIEnv_::GetStaticIntField \
  JNIEnv_::GetStaticLongField \
  JNIEnv_::GetStaticFloatField \
  JNIEnv_::GetStaticDoubleField \
  JNIEnv_::SetStaticObjectField \
  JNIEnv_::SetStaticBooleanField \
  JNIEnv_::SetStaticByteField \
  JNIEnv_::SetStaticCharField \
  JNIEnv_::SetStaticShortField \
  JNIEnv_::SetStaticIntField \
  JNIEnv_::SetStaticLongField \
  JNIEnv_::SetStaticFloatField \
  JNIEnv_::SetStaticDoubleField \
  JNIEnv_::NewString \
  JNIEnv_::GetStringLength \
  JNIEnv_::GetStringChars \
  JNIEnv_::ReleaseStringChars \
  JNIEnv_::NewStringUTF \
  JNIEnv_::GetStringUTFLength \
  JNIEnv_::GetStringUTFChars \
  JNIEnv_::ReleaseStringUTFChars \
  JNIEnv_::GetArrayLength \
  JNIEnv_::NewObjectArray \
  JNIEnv_::GetObjectArrayElement \
  JNIEnv_::SetObjectArrayElement \
  JNIEnv_::NewBooleanArray \
  JNIEnv_::NewByteArray \
  JNIEnv_::NewCharArray \
  JNIEnv_::NewShortArray \
  JNIEnv_::NewIntArray \
  JNIEnv_::NewLongArray \
  JNIEnv_::NewFloatArray \
  JNIEnv_::NewDoubleArray \
  JNIEnv_::GetBooleanArrayElements \
  JNIEnv_::GetByteArrayElements \
  JNIEnv_::GetCharArrayElements \
  JNIEnv_::GetShortArrayElements \
  JNIEnv_::GetIntArrayElements \
  JNIEnv_::GetLongArrayElements \
  JNIEnv_::GetFloatArrayElements \
  JNIEnv_::GetDoubleArrayElements \
  JNIEnv_::ReleaseBooleanArrayElements \
  JNIEnv_::ReleaseByteArrayElements \
  JNIEnv_::ReleaseCharArrayElements \
  JNIEnv_::ReleaseShortArrayElements \
  JNIEnv_::ReleaseIntArrayElements \
  JNIEnv_::ReleaseLongArrayElements \
  JNIEnv_::ReleaseFloatArrayElements \
  JNIEnv_::ReleaseDoubleArrayElements \
  JNIEnv_::GetBooleanArrayRegion \
  JNIEnv_::GetByteArrayRegion \
  JNIEnv_::GetCharArrayRegion \
  JNIEnv_::GetShortArrayRegion \
  JNIEnv_::GetIntArrayRegion \
  JNIEnv_::GetLongArrayRegion \
  JNIEnv_::GetFloatArrayRegion \
  JNIEnv_::GetDoubleArrayRegion \
  JNIEnv_::SetBooleanArrayRegion \
  JNIEnv_::SetByteArrayRegion \
  JNIEnv_::SetCharArrayRegion \
  JNIEnv_::SetShortArrayRegion \
  JNIEnv_::SetIntArrayRegion \
  JNIEnv_::SetLongArrayRegion \
  JNIEnv_::SetFloatArrayRegion \
  JNIEnv_::SetDoubleArrayRegion \
  JNIEnv_::RegisterNatives \
  JNIEnv_::UnregisterNatives \
  JNIEnv_::MonitorEnter \
  JNIEnv_::MonitorExit \
  JNIEnv_::GetJavaVM \
  JNIEnv_::GetStringRegion \
  JNIEnv_::GetStringUTFRegion \
  JNIEnv_::NewWeakGlobalRef \
  JNIEnv_::DeleteWeakGlobalRef \
  JNIEnv_::ExceptionCheck \
  JNIEnv_::NewDirectByteBuffer \
  JNIEnv_::GetDirectBufferAddress \
  JNIEnv_::GetDirectBufferCapacity
